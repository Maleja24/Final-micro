

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Dec 16 20:12:44 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	16F1937
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	stringtext2,global,class=STRCODE,delta=2
     7                           	psect	stringtext3,global,class=STRCODE,delta=2
     8                           	psect	stringtext4,global,class=STRCODE,delta=2
     9                           	psect	stringtext5,global,class=STRCODE,delta=2
    10                           	psect	stringtext6,global,class=STRCODE,delta=2
    11                           	psect	stringtext7,global,class=STRCODE,delta=2
    12                           	psect	stringtext8,global,class=STRCODE,delta=2
    13                           	psect	stringtext9,global,class=STRCODE,delta=2
    14                           	psect	stringtext10,global,class=STRCODE,delta=2
    15                           	psect	stringtext11,global,class=STRCODE,delta=2
    16                           	psect	stringtext12,global,class=STRCODE,delta=2
    17                           	psect	stringtext13,global,class=STRCODE,delta=2
    18                           	psect	stringtext14,global,class=STRCODE,delta=2
    19                           	psect	stringtext15,global,class=STRCODE,delta=2
    20                           	psect	stringtext16,global,class=STRCODE,delta=2
    21                           	psect	cinit,global,class=CODE,merge=1,delta=2
    22                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    23                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    24                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    25                           	psect	inittext,global,class=CODE,delta=2
    26                           	psect	clrtext,global,class=CODE,delta=2
    27                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    28                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    32                           	psect	text1,local,class=CODE,merge=1,delta=2
    33                           	psect	text2,local,class=CODE,merge=1,delta=2
    34                           	psect	text3,local,class=CODE,merge=1,delta=2
    35                           	psect	text4,local,class=CODE,merge=1,delta=2
    36                           	psect	text5,local,class=CODE,merge=1,delta=2
    37                           	psect	text6,local,class=CODE,merge=1,delta=2
    38                           	psect	text7,local,class=CODE,merge=1,delta=2
    39                           	psect	text8,local,class=CODE,merge=1,delta=2
    40                           	psect	text9,local,class=CODE,merge=1,delta=2
    41                           	psect	text10,local,class=CODE,merge=1,delta=2
    42                           	psect	text11,local,class=CODE,merge=1,delta=2
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    44                           	psect	text13,local,class=CODE,merge=1,delta=2
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    46                           	psect	text15,local,class=CODE,merge=1,delta=2
    47                           	psect	text16,local,class=CODE,merge=1,delta=2
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    49                           	psect	text18,local,class=CODE,merge=1,delta=2
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    53                           	psect	text22,local,class=CODE,merge=1,delta=2
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text36,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text43,local,class=CODE,merge=1,delta=2
    75                           	psect	text44,local,class=CODE,merge=1,delta=2
    76                           	psect	text45,local,class=CODE,merge=1,delta=2
    77                           	psect	text46,local,class=CODE,merge=1,delta=2
    78                           	psect	text47,local,class=CODE,merge=1,delta=2
    79                           	psect	text48,local,class=CODE,merge=1,delta=2
    80                           	psect	text49,local,class=CODE,merge=1,delta=2
    81                           	psect	text50,local,class=CODE,merge=1,delta=2
    82                           	psect	text51,local,class=CODE,merge=1,delta=2
    83                           	psect	text52,local,class=CODE,merge=1,delta=2,group=1
    84                           	psect	text53,local,class=CODE,merge=1,delta=2
    85                           	psect	text54,local,class=CODE,merge=1,delta=2
    86                           	dabs	1,0x7E,2
    87  0000                     
    88                           ; Version 2.10
    89                           ; Generated 31/07/2019 GMT
    90                           ; 
    91                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution.
   105                           ; 
   106                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   107                           ;        software without specific prior written permission.
   108                           ; 
   109                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   110                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   111                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   112                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   113                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   114                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   115                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   116                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   117                           ; 
   118                           ; 
   119                           ; Code-generator required, PIC16F1937 Definitions
   120                           ; 
   121                           ; SFR Addresses
   122  0000                     	;# 
   123  0001                     	;# 
   124  0002                     	;# 
   125  0003                     	;# 
   126  0004                     	;# 
   127  0005                     	;# 
   128  0006                     	;# 
   129  0007                     	;# 
   130  0008                     	;# 
   131  0009                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000F                     	;# 
   138  0010                     	;# 
   139  0011                     	;# 
   140  0012                     	;# 
   141  0013                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  008F                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  0110                     	;# 
   177  0111                     	;# 
   178  0112                     	;# 
   179  0113                     	;# 
   180  0114                     	;# 
   181  0115                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0118                     	;# 
   185  0119                     	;# 
   186  011A                     	;# 
   187  011B                     	;# 
   188  011D                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018F                     	;# 
   192  0190                     	;# 
   193  0191                     	;# 
   194  0191                     	;# 
   195  0192                     	;# 
   196  0193                     	;# 
   197  0193                     	;# 
   198  0193                     	;# 
   199  0194                     	;# 
   200  0195                     	;# 
   201  0196                     	;# 
   202  0199                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019C                     	;# 
   209  019C                     	;# 
   210  019D                     	;# 
   211  019E                     	;# 
   212  019F                     	;# 
   213  020D                     	;# 
   214  0210                     	;# 
   215  0211                     	;# 
   216  0212                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0215                     	;# 
   220  0215                     	;# 
   221  0216                     	;# 
   222  0217                     	;# 
   223  0291                     	;# 
   224  0291                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0294                     	;# 
   228  0295                     	;# 
   229  0295                     	;# 
   230  0296                     	;# 
   231  0298                     	;# 
   232  0298                     	;# 
   233  0299                     	;# 
   234  029A                     	;# 
   235  029B                     	;# 
   236  029C                     	;# 
   237  029C                     	;# 
   238  029D                     	;# 
   239  029E                     	;# 
   240  029F                     	;# 
   241  0311                     	;# 
   242  0311                     	;# 
   243  0312                     	;# 
   244  0313                     	;# 
   245  0314                     	;# 
   246  0315                     	;# 
   247  0315                     	;# 
   248  0316                     	;# 
   249  0318                     	;# 
   250  0318                     	;# 
   251  0319                     	;# 
   252  031A                     	;# 
   253  031C                     	;# 
   254  031C                     	;# 
   255  031D                     	;# 
   256  031E                     	;# 
   257  0394                     	;# 
   258  0395                     	;# 
   259  0396                     	;# 
   260  0415                     	;# 
   261  0416                     	;# 
   262  0417                     	;# 
   263  041C                     	;# 
   264  041D                     	;# 
   265  041E                     	;# 
   266  0791                     	;# 
   267  0792                     	;# 
   268  0793                     	;# 
   269  0794                     	;# 
   270  0795                     	;# 
   271  0798                     	;# 
   272  0799                     	;# 
   273  079A                     	;# 
   274  07A0                     	;# 
   275  07A1                     	;# 
   276  07A2                     	;# 
   277  07A3                     	;# 
   278  07A4                     	;# 
   279  07A5                     	;# 
   280  07A6                     	;# 
   281  07A7                     	;# 
   282  07A8                     	;# 
   283  07A9                     	;# 
   284  07AA                     	;# 
   285  07AB                     	;# 
   286  0FE4                     	;# 
   287  0FE5                     	;# 
   288  0FE6                     	;# 
   289  0FE7                     	;# 
   290  0FE8                     	;# 
   291  0FE9                     	;# 
   292  0FEA                     	;# 
   293  0FEB                     	;# 
   294  0FED                     	;# 
   295  0FEE                     	;# 
   296  0FEF                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  008C                     	;# 
   329  008D                     	;# 
   330  008E                     	;# 
   331  008F                     	;# 
   332  0090                     	;# 
   333  0091                     	;# 
   334  0092                     	;# 
   335  0093                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  010F                     	;# 
   351  0110                     	;# 
   352  0111                     	;# 
   353  0112                     	;# 
   354  0113                     	;# 
   355  0114                     	;# 
   356  0115                     	;# 
   357  0116                     	;# 
   358  0117                     	;# 
   359  0118                     	;# 
   360  0119                     	;# 
   361  011A                     	;# 
   362  011B                     	;# 
   363  011D                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  018F                     	;# 
   367  0190                     	;# 
   368  0191                     	;# 
   369  0191                     	;# 
   370  0192                     	;# 
   371  0193                     	;# 
   372  0193                     	;# 
   373  0193                     	;# 
   374  0194                     	;# 
   375  0195                     	;# 
   376  0196                     	;# 
   377  0199                     	;# 
   378  019A                     	;# 
   379  019B                     	;# 
   380  019B                     	;# 
   381  019B                     	;# 
   382  019B                     	;# 
   383  019C                     	;# 
   384  019C                     	;# 
   385  019D                     	;# 
   386  019E                     	;# 
   387  019F                     	;# 
   388  020D                     	;# 
   389  0210                     	;# 
   390  0211                     	;# 
   391  0212                     	;# 
   392  0213                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0216                     	;# 
   397  0217                     	;# 
   398  0291                     	;# 
   399  0291                     	;# 
   400  0292                     	;# 
   401  0293                     	;# 
   402  0294                     	;# 
   403  0295                     	;# 
   404  0295                     	;# 
   405  0296                     	;# 
   406  0298                     	;# 
   407  0298                     	;# 
   408  0299                     	;# 
   409  029A                     	;# 
   410  029B                     	;# 
   411  029C                     	;# 
   412  029C                     	;# 
   413  029D                     	;# 
   414  029E                     	;# 
   415  029F                     	;# 
   416  0311                     	;# 
   417  0311                     	;# 
   418  0312                     	;# 
   419  0313                     	;# 
   420  0314                     	;# 
   421  0315                     	;# 
   422  0315                     	;# 
   423  0316                     	;# 
   424  0318                     	;# 
   425  0318                     	;# 
   426  0319                     	;# 
   427  031A                     	;# 
   428  031C                     	;# 
   429  031C                     	;# 
   430  031D                     	;# 
   431  031E                     	;# 
   432  0394                     	;# 
   433  0395                     	;# 
   434  0396                     	;# 
   435  0415                     	;# 
   436  0416                     	;# 
   437  0417                     	;# 
   438  041C                     	;# 
   439  041D                     	;# 
   440  041E                     	;# 
   441  0791                     	;# 
   442  0792                     	;# 
   443  0793                     	;# 
   444  0794                     	;# 
   445  0795                     	;# 
   446  0798                     	;# 
   447  0799                     	;# 
   448  079A                     	;# 
   449  07A0                     	;# 
   450  07A1                     	;# 
   451  07A2                     	;# 
   452  07A3                     	;# 
   453  07A4                     	;# 
   454  07A5                     	;# 
   455  07A6                     	;# 
   456  07A7                     	;# 
   457  07A8                     	;# 
   458  07A9                     	;# 
   459  07AA                     	;# 
   460  07AB                     	;# 
   461  0FE4                     	;# 
   462  0FE5                     	;# 
   463  0FE6                     	;# 
   464  0FE7                     	;# 
   465  0FE8                     	;# 
   466  0FE9                     	;# 
   467  0FEA                     	;# 
   468  0FEB                     	;# 
   469  0FED                     	;# 
   470  0FEE                     	;# 
   471  0FEF                     	;# 
   472  0000                     	;# 
   473  0001                     	;# 
   474  0002                     	;# 
   475  0003                     	;# 
   476  0004                     	;# 
   477  0005                     	;# 
   478  0006                     	;# 
   479  0007                     	;# 
   480  0008                     	;# 
   481  0009                     	;# 
   482  000A                     	;# 
   483  000B                     	;# 
   484  000C                     	;# 
   485  000D                     	;# 
   486  000E                     	;# 
   487  000F                     	;# 
   488  0010                     	;# 
   489  0011                     	;# 
   490  0012                     	;# 
   491  0013                     	;# 
   492  0015                     	;# 
   493  0016                     	;# 
   494  0016                     	;# 
   495  0017                     	;# 
   496  0018                     	;# 
   497  0019                     	;# 
   498  001A                     	;# 
   499  001B                     	;# 
   500  001C                     	;# 
   501  001E                     	;# 
   502  001F                     	;# 
   503  008C                     	;# 
   504  008D                     	;# 
   505  008E                     	;# 
   506  008F                     	;# 
   507  0090                     	;# 
   508  0091                     	;# 
   509  0092                     	;# 
   510  0093                     	;# 
   511  0095                     	;# 
   512  0096                     	;# 
   513  0097                     	;# 
   514  0098                     	;# 
   515  0099                     	;# 
   516  009A                     	;# 
   517  009B                     	;# 
   518  009B                     	;# 
   519  009C                     	;# 
   520  009D                     	;# 
   521  009E                     	;# 
   522  010C                     	;# 
   523  010D                     	;# 
   524  010E                     	;# 
   525  010F                     	;# 
   526  0110                     	;# 
   527  0111                     	;# 
   528  0112                     	;# 
   529  0113                     	;# 
   530  0114                     	;# 
   531  0115                     	;# 
   532  0116                     	;# 
   533  0117                     	;# 
   534  0118                     	;# 
   535  0119                     	;# 
   536  011A                     	;# 
   537  011B                     	;# 
   538  011D                     	;# 
   539  018C                     	;# 
   540  018D                     	;# 
   541  018F                     	;# 
   542  0190                     	;# 
   543  0191                     	;# 
   544  0191                     	;# 
   545  0192                     	;# 
   546  0193                     	;# 
   547  0193                     	;# 
   548  0193                     	;# 
   549  0194                     	;# 
   550  0195                     	;# 
   551  0196                     	;# 
   552  0199                     	;# 
   553  019A                     	;# 
   554  019B                     	;# 
   555  019B                     	;# 
   556  019B                     	;# 
   557  019B                     	;# 
   558  019C                     	;# 
   559  019C                     	;# 
   560  019D                     	;# 
   561  019E                     	;# 
   562  019F                     	;# 
   563  020D                     	;# 
   564  0210                     	;# 
   565  0211                     	;# 
   566  0212                     	;# 
   567  0213                     	;# 
   568  0214                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0216                     	;# 
   572  0217                     	;# 
   573  0291                     	;# 
   574  0291                     	;# 
   575  0292                     	;# 
   576  0293                     	;# 
   577  0294                     	;# 
   578  0295                     	;# 
   579  0295                     	;# 
   580  0296                     	;# 
   581  0298                     	;# 
   582  0298                     	;# 
   583  0299                     	;# 
   584  029A                     	;# 
   585  029B                     	;# 
   586  029C                     	;# 
   587  029C                     	;# 
   588  029D                     	;# 
   589  029E                     	;# 
   590  029F                     	;# 
   591  0311                     	;# 
   592  0311                     	;# 
   593  0312                     	;# 
   594  0313                     	;# 
   595  0314                     	;# 
   596  0315                     	;# 
   597  0315                     	;# 
   598  0316                     	;# 
   599  0318                     	;# 
   600  0318                     	;# 
   601  0319                     	;# 
   602  031A                     	;# 
   603  031C                     	;# 
   604  031C                     	;# 
   605  031D                     	;# 
   606  031E                     	;# 
   607  0394                     	;# 
   608  0395                     	;# 
   609  0396                     	;# 
   610  0415                     	;# 
   611  0416                     	;# 
   612  0417                     	;# 
   613  041C                     	;# 
   614  041D                     	;# 
   615  041E                     	;# 
   616  0791                     	;# 
   617  0792                     	;# 
   618  0793                     	;# 
   619  0794                     	;# 
   620  0795                     	;# 
   621  0798                     	;# 
   622  0799                     	;# 
   623  079A                     	;# 
   624  07A0                     	;# 
   625  07A1                     	;# 
   626  07A2                     	;# 
   627  07A3                     	;# 
   628  07A4                     	;# 
   629  07A5                     	;# 
   630  07A6                     	;# 
   631  07A7                     	;# 
   632  07A8                     	;# 
   633  07A9                     	;# 
   634  07AA                     	;# 
   635  07AB                     	;# 
   636  0FE4                     	;# 
   637  0FE5                     	;# 
   638  0FE6                     	;# 
   639  0FE7                     	;# 
   640  0FE8                     	;# 
   641  0FE9                     	;# 
   642  0FEA                     	;# 
   643  0FEB                     	;# 
   644  0FED                     	;# 
   645  0FEE                     	;# 
   646  0FEF                     	;# 
   647  0000                     	;# 
   648  0001                     	;# 
   649  0002                     	;# 
   650  0003                     	;# 
   651  0004                     	;# 
   652  0005                     	;# 
   653  0006                     	;# 
   654  0007                     	;# 
   655  0008                     	;# 
   656  0009                     	;# 
   657  000A                     	;# 
   658  000B                     	;# 
   659  000C                     	;# 
   660  000D                     	;# 
   661  000E                     	;# 
   662  000F                     	;# 
   663  0010                     	;# 
   664  0011                     	;# 
   665  0012                     	;# 
   666  0013                     	;# 
   667  0015                     	;# 
   668  0016                     	;# 
   669  0016                     	;# 
   670  0017                     	;# 
   671  0018                     	;# 
   672  0019                     	;# 
   673  001A                     	;# 
   674  001B                     	;# 
   675  001C                     	;# 
   676  001E                     	;# 
   677  001F                     	;# 
   678  008C                     	;# 
   679  008D                     	;# 
   680  008E                     	;# 
   681  008F                     	;# 
   682  0090                     	;# 
   683  0091                     	;# 
   684  0092                     	;# 
   685  0093                     	;# 
   686  0095                     	;# 
   687  0096                     	;# 
   688  0097                     	;# 
   689  0098                     	;# 
   690  0099                     	;# 
   691  009A                     	;# 
   692  009B                     	;# 
   693  009B                     	;# 
   694  009C                     	;# 
   695  009D                     	;# 
   696  009E                     	;# 
   697  010C                     	;# 
   698  010D                     	;# 
   699  010E                     	;# 
   700  010F                     	;# 
   701  0110                     	;# 
   702  0111                     	;# 
   703  0112                     	;# 
   704  0113                     	;# 
   705  0114                     	;# 
   706  0115                     	;# 
   707  0116                     	;# 
   708  0117                     	;# 
   709  0118                     	;# 
   710  0119                     	;# 
   711  011A                     	;# 
   712  011B                     	;# 
   713  011D                     	;# 
   714  018C                     	;# 
   715  018D                     	;# 
   716  018F                     	;# 
   717  0190                     	;# 
   718  0191                     	;# 
   719  0191                     	;# 
   720  0192                     	;# 
   721  0193                     	;# 
   722  0193                     	;# 
   723  0193                     	;# 
   724  0194                     	;# 
   725  0195                     	;# 
   726  0196                     	;# 
   727  0199                     	;# 
   728  019A                     	;# 
   729  019B                     	;# 
   730  019B                     	;# 
   731  019B                     	;# 
   732  019B                     	;# 
   733  019C                     	;# 
   734  019C                     	;# 
   735  019D                     	;# 
   736  019E                     	;# 
   737  019F                     	;# 
   738  020D                     	;# 
   739  0210                     	;# 
   740  0211                     	;# 
   741  0212                     	;# 
   742  0213                     	;# 
   743  0214                     	;# 
   744  0215                     	;# 
   745  0215                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0291                     	;# 
   749  0291                     	;# 
   750  0292                     	;# 
   751  0293                     	;# 
   752  0294                     	;# 
   753  0295                     	;# 
   754  0295                     	;# 
   755  0296                     	;# 
   756  0298                     	;# 
   757  0298                     	;# 
   758  0299                     	;# 
   759  029A                     	;# 
   760  029B                     	;# 
   761  029C                     	;# 
   762  029C                     	;# 
   763  029D                     	;# 
   764  029E                     	;# 
   765  029F                     	;# 
   766  0311                     	;# 
   767  0311                     	;# 
   768  0312                     	;# 
   769  0313                     	;# 
   770  0314                     	;# 
   771  0315                     	;# 
   772  0315                     	;# 
   773  0316                     	;# 
   774  0318                     	;# 
   775  0318                     	;# 
   776  0319                     	;# 
   777  031A                     	;# 
   778  031C                     	;# 
   779  031C                     	;# 
   780  031D                     	;# 
   781  031E                     	;# 
   782  0394                     	;# 
   783  0395                     	;# 
   784  0396                     	;# 
   785  0415                     	;# 
   786  0416                     	;# 
   787  0417                     	;# 
   788  041C                     	;# 
   789  041D                     	;# 
   790  041E                     	;# 
   791  0791                     	;# 
   792  0792                     	;# 
   793  0793                     	;# 
   794  0794                     	;# 
   795  0795                     	;# 
   796  0798                     	;# 
   797  0799                     	;# 
   798  079A                     	;# 
   799  07A0                     	;# 
   800  07A1                     	;# 
   801  07A2                     	;# 
   802  07A3                     	;# 
   803  07A4                     	;# 
   804  07A5                     	;# 
   805  07A6                     	;# 
   806  07A7                     	;# 
   807  07A8                     	;# 
   808  07A9                     	;# 
   809  07AA                     	;# 
   810  07AB                     	;# 
   811  0FE4                     	;# 
   812  0FE5                     	;# 
   813  0FE6                     	;# 
   814  0FE7                     	;# 
   815  0FE8                     	;# 
   816  0FE9                     	;# 
   817  0FEA                     	;# 
   818  0FEB                     	;# 
   819  0FED                     	;# 
   820  0FEE                     	;# 
   821  0FEF                     	;# 
   822  0000                     	;# 
   823  0001                     	;# 
   824  0002                     	;# 
   825  0003                     	;# 
   826  0004                     	;# 
   827  0005                     	;# 
   828  0006                     	;# 
   829  0007                     	;# 
   830  0008                     	;# 
   831  0009                     	;# 
   832  000A                     	;# 
   833  000B                     	;# 
   834  000C                     	;# 
   835  000D                     	;# 
   836  000E                     	;# 
   837  000F                     	;# 
   838  0010                     	;# 
   839  0011                     	;# 
   840  0012                     	;# 
   841  0013                     	;# 
   842  0015                     	;# 
   843  0016                     	;# 
   844  0016                     	;# 
   845  0017                     	;# 
   846  0018                     	;# 
   847  0019                     	;# 
   848  001A                     	;# 
   849  001B                     	;# 
   850  001C                     	;# 
   851  001E                     	;# 
   852  001F                     	;# 
   853  008C                     	;# 
   854  008D                     	;# 
   855  008E                     	;# 
   856  008F                     	;# 
   857  0090                     	;# 
   858  0091                     	;# 
   859  0092                     	;# 
   860  0093                     	;# 
   861  0095                     	;# 
   862  0096                     	;# 
   863  0097                     	;# 
   864  0098                     	;# 
   865  0099                     	;# 
   866  009A                     	;# 
   867  009B                     	;# 
   868  009B                     	;# 
   869  009C                     	;# 
   870  009D                     	;# 
   871  009E                     	;# 
   872  010C                     	;# 
   873  010D                     	;# 
   874  010E                     	;# 
   875  010F                     	;# 
   876  0110                     	;# 
   877  0111                     	;# 
   878  0112                     	;# 
   879  0113                     	;# 
   880  0114                     	;# 
   881  0115                     	;# 
   882  0116                     	;# 
   883  0117                     	;# 
   884  0118                     	;# 
   885  0119                     	;# 
   886  011A                     	;# 
   887  011B                     	;# 
   888  011D                     	;# 
   889  018C                     	;# 
   890  018D                     	;# 
   891  018F                     	;# 
   892  0190                     	;# 
   893  0191                     	;# 
   894  0191                     	;# 
   895  0192                     	;# 
   896  0193                     	;# 
   897  0193                     	;# 
   898  0193                     	;# 
   899  0194                     	;# 
   900  0195                     	;# 
   901  0196                     	;# 
   902  0199                     	;# 
   903  019A                     	;# 
   904  019B                     	;# 
   905  019B                     	;# 
   906  019B                     	;# 
   907  019B                     	;# 
   908  019C                     	;# 
   909  019C                     	;# 
   910  019D                     	;# 
   911  019E                     	;# 
   912  019F                     	;# 
   913  020D                     	;# 
   914  0210                     	;# 
   915  0211                     	;# 
   916  0212                     	;# 
   917  0213                     	;# 
   918  0214                     	;# 
   919  0215                     	;# 
   920  0215                     	;# 
   921  0216                     	;# 
   922  0217                     	;# 
   923  0291                     	;# 
   924  0291                     	;# 
   925  0292                     	;# 
   926  0293                     	;# 
   927  0294                     	;# 
   928  0295                     	;# 
   929  0295                     	;# 
   930  0296                     	;# 
   931  0298                     	;# 
   932  0298                     	;# 
   933  0299                     	;# 
   934  029A                     	;# 
   935  029B                     	;# 
   936  029C                     	;# 
   937  029C                     	;# 
   938  029D                     	;# 
   939  029E                     	;# 
   940  029F                     	;# 
   941  0311                     	;# 
   942  0311                     	;# 
   943  0312                     	;# 
   944  0313                     	;# 
   945  0314                     	;# 
   946  0315                     	;# 
   947  0315                     	;# 
   948  0316                     	;# 
   949  0318                     	;# 
   950  0318                     	;# 
   951  0319                     	;# 
   952  031A                     	;# 
   953  031C                     	;# 
   954  031C                     	;# 
   955  031D                     	;# 
   956  031E                     	;# 
   957  0394                     	;# 
   958  0395                     	;# 
   959  0396                     	;# 
   960  0415                     	;# 
   961  0416                     	;# 
   962  0417                     	;# 
   963  041C                     	;# 
   964  041D                     	;# 
   965  041E                     	;# 
   966  0791                     	;# 
   967  0792                     	;# 
   968  0793                     	;# 
   969  0794                     	;# 
   970  0795                     	;# 
   971  0798                     	;# 
   972  0799                     	;# 
   973  079A                     	;# 
   974  07A0                     	;# 
   975  07A1                     	;# 
   976  07A2                     	;# 
   977  07A3                     	;# 
   978  07A4                     	;# 
   979  07A5                     	;# 
   980  07A6                     	;# 
   981  07A7                     	;# 
   982  07A8                     	;# 
   983  07A9                     	;# 
   984  07AA                     	;# 
   985  07AB                     	;# 
   986  0FE4                     	;# 
   987  0FE5                     	;# 
   988  0FE6                     	;# 
   989  0FE7                     	;# 
   990  0FE8                     	;# 
   991  0FE9                     	;# 
   992  0FEA                     	;# 
   993  0FEB                     	;# 
   994  0FED                     	;# 
   995  0FEE                     	;# 
   996  0FEF                     	;# 
   997                           
   998                           	psect	idataBANK2
   999  1E46                     __pidataBANK2:	
  1000                           
  1001                           ;initializer for _Arreglo
  1002  1E46  3430               	retlw	48
  1003  1E47  3430               	retlw	48
  1004  1E48  3430               	retlw	48
  1005  1E49  3430               	retlw	48
  1006  1E4A  3430               	retlw	48
  1007  1E4B  3430               	retlw	48
  1008  1E4C  3430               	retlw	48
  1009  1E4D  3430               	retlw	48
  1010  1E4E  3430               	retlw	48
  1011  000E                     _PORTCbits	set	14
  1012  000F                     _PORTD	set	15
  1013  000E                     _PORTC	set	14
  1014  008C                     _TXIF	set	140
  1015  007B                     _RD3	set	123
  1016  007A                     _RD2	set	122
  1017  007F                     _RD7	set	127
  1018  007E                     _RD6	set	126
  1019  007D                     _RD5	set	125
  1020  007C                     _RD4	set	124
  1021  008E                     _TRISCbits	set	142
  1022  009D                     _ADCON0bits	set	157
  1023  009C                     _ADRESH	set	156
  1024  009B                     _ADRESL	set	155
  1025  009E                     _ADCON1	set	158
  1026  009D                     _ADCON0	set	157
  1027  0095                     _OPTION_REGbits	set	149
  1028  008F                     _TRISD	set	143
  1029  008E                     _TRISC	set	142
  1030  008D                     _TRISB	set	141
  1031  008C                     _TRISA	set	140
  1032  0090                     _TRISE	set	144
  1033  0097                     _WDTCON	set	151
  1034  0098                     _OSCTUNE	set	152
  1035  0099                     _OSCCON	set	153
  1036  011D                     _APFCON	set	285
  1037  010E                     _LATC	set	270
  1038  010D                     _LATB	set	269
  1039  010C                     _LATA	set	268
  1040  010F                     _LATD	set	271
  1041  0110                     _LATE	set	272
  1042  0116                     _BORCON	set	278
  1043  019A                     _TXREG	set	410
  1044  019D                     _RCSTAbits	set	413
  1045  019B                     _SPBRG	set	411
  1046  019E                     _TXSTAbits	set	414
  1047  018C                     _ANSELA	set	396
  1048  0190                     _ANSELE	set	400
  1049  018D                     _ANSELB	set	397
  1050  018F                     _ANSELD	set	399
  1051  0CFB                     _BRG16	set	3323
  1052  020D                     _WPUB	set	525
  1053  0210                     _WPUE	set	528
  1054                           
  1055                           	psect	stringtext1
  1056  1800                     __pstringtext1:	
  1057  1800                     STR_2:	
  1058  1800  3453               	retlw	83	;'S'
  1059  1801  3477               	retlw	119	;'w'
  1060  1802  3469               	retlw	105	;'i'
  1061  1803  3474               	retlw	116	;'t'
  1062  1804  3463               	retlw	99	;'c'
  1063  1805  3468               	retlw	104	;'h'
  1064  1806  343A               	retlw	58	;':'
  1065  1807  3400               	retlw	0
  1066                           
  1067                           	psect	stringtext2
  1068  1808                     __pstringtext2:	
  1069  1808                     STR_5:	
  1070  1808  3449               	retlw	73	;'I'
  1071  1809  344E               	retlw	78	;'N'
  1072  180A  3446               	retlw	70	;'F'
  1073  180B  3431               	retlw	49	;'1'
  1074  180C  343A               	retlw	58	;':'
  1075  180D  3400               	retlw	0
  1076                           
  1077                           	psect	stringtext3
  1078  180E                     __pstringtext3:	
  1079  180E                     STR_6:	
  1080  180E  3453               	retlw	83	;'S'
  1081  180F  3455               	retlw	85	;'U'
  1082  1810  3450               	retlw	80	;'P'
  1083  1811  3431               	retlw	49	;'1'
  1084  1812  343A               	retlw	58	;':'
  1085  1813  3400               	retlw	0
  1086                           
  1087                           	psect	stringtext4
  1088  1814                     __pstringtext4:	
  1089  1814                     STR_7:	
  1090  1814  3449               	retlw	73	;'I'
  1091  1815  344E               	retlw	78	;'N'
  1092  1816  3446               	retlw	70	;'F'
  1093  1817  3432               	retlw	50	;'2'
  1094  1818  343A               	retlw	58	;':'
  1095  1819  3400               	retlw	0
  1096                           
  1097                           	psect	stringtext5
  1098  181A                     __pstringtext5:	
  1099  181A                     STR_8:	
  1100  181A  3453               	retlw	83	;'S'
  1101  181B  3455               	retlw	85	;'U'
  1102  181C  3450               	retlw	80	;'P'
  1103  181D  3432               	retlw	50	;'2'
  1104  181E  343A               	retlw	58	;':'
  1105  181F  3400               	retlw	0
  1106                           
  1107                           	psect	stringtext6
  1108  1820                     __pstringtext6:	
  1109  1820                     STR_1:	
  1110  1820  3425               	retlw	37	;'%'
  1111  1821  342E               	retlw	46	;'.'
  1112  1822  3430               	retlw	48	;'0'
  1113  1823  3466               	retlw	102	;'f'
  1114  1824  3400               	retlw	0
  1115                           
  1116                           	psect	stringtext7
  1117  1825                     __pstringtext7:	
  1118  1825                     STR_11:	
  1119  1825  3449               	retlw	73	;'I'
  1120  1826  344E               	retlw	78	;'N'
  1121  1827  3446               	retlw	70	;'F'
  1122  1828  3400               	retlw	0
  1123                           
  1124                           	psect	stringtext8
  1125  1829                     __pstringtext8:	
  1126  1829                     STR_15:	
  1127  1829  344E               	retlw	78	;'N'
  1128  182A  3441               	retlw	65	;'A'
  1129  182B  344E               	retlw	78	;'N'
  1130  182C  3400               	retlw	0
  1131                           
  1132                           	psect	stringtext9
  1133  182D                     __pstringtext9:	
  1134  182D                     STR_12:	
  1135  182D  3469               	retlw	105	;'i'
  1136  182E  346E               	retlw	110	;'n'
  1137  182F  3466               	retlw	102	;'f'
  1138  1830  3400               	retlw	0
  1139                           
  1140                           	psect	stringtext10
  1141  1831                     __pstringtext10:	
  1142  1831                     STR_16:	
  1143  1831  346E               	retlw	110	;'n'
  1144  1832  3461               	retlw	97	;'a'
  1145  1833  346E               	retlw	110	;'n'
  1146  1834  3400               	retlw	0
  1147                           
  1148                           	psect	stringtext11
  1149  1835                     __pstringtext11:	
  1150  1835                     STR_10:	
  1151  1835  344F               	retlw	79	;'O'
  1152  1836  344E               	retlw	78	;'N'
  1153  1837  3420               	retlw	32	;' '
  1154  1838  3400               	retlw	0
  1155                           
  1156                           	psect	stringtext12
  1157  1839                     __pstringtext12:	
  1158  1839                     STR_3:	
  1159  1839  344C               	retlw	76	;'L'
  1160  183A  344D               	retlw	77	;'M'
  1161  183B  343A               	retlw	58	;':'
  1162  183C  3400               	retlw	0
  1163                           
  1164                           	psect	stringtext13
  1165  183D                     __pstringtext13:	
  1166  183D                     STR_4:	
  1167  183D  3450               	retlw	80	;'P'
  1168  183E  3454               	retlw	84	;'T'
  1169  183F  343A               	retlw	58	;':'
  1170  1840  3400               	retlw	0
  1171                           
  1172                           	psect	stringtext14
  1173  1841                     __pstringtext14:	
  1174  1841                     STR_9:	
  1175  1841  344F               	retlw	79	;'O'
  1176  1842  3446               	retlw	70	;'F'
  1177  1843  3446               	retlw	70	;'F'
  1178  1844  3400               	retlw	0
  1179                           
  1180                           	psect	stringtext15
  1181  1845                     __pstringtext15:	
  1182  1845                     STR_19:	
  1183  1845  346C               	retlw	108	;'l'
  1184  1846  3466               	retlw	102	;'f'
  1185  1847  3400               	retlw	0
  1186                           
  1187                           	psect	stringtext16
  1188  0000                     __pstringtext16:	
  1189  1845                     
  1190                           ; #config settings
  1191  0000                     
  1192                           	psect	cinit
  1193  07E2                     start_initialization:	
  1194  07E2                     __initialization:	
  1195                           
  1196                           ; Initialize objects allocated to BANK2
  1197  07E2  3046               	movlw	low __pidataBANK2
  1198  07E3  0084               	movwf	4
  1199  07E4  309E               	movlw	(high __pidataBANK2)| (0+128)
  1200  07E5  0085               	movwf	5
  1201  07E6  3056               	movlw	low __pdataBANK2
  1202  07E7  0086               	movwf	6
  1203  07E8  3001               	movlw	high __pdataBANK2
  1204  07E9  0087               	movwf	7
  1205  07EA  3009               	movlw	9
  1206  07EB  319E  2618  3187   	fcall	init_ram
  1207                           
  1208                           ; Clear objects allocated to BANK2
  1209  07EE  3020               	movlw	low __pbssBANK2
  1210  07EF  0084               	movwf	4
  1211  07F0  3001               	movlw	high __pbssBANK2
  1212  07F1  0085               	movwf	5
  1213  07F2  3028               	movlw	40
  1214  07F3  319E  2612  3187   	fcall	clear_ram0
  1215                           
  1216                           ; Clear objects allocated to BANK3
  1217  07F6  30A0               	movlw	low __pbssBANK3
  1218  07F7  0084               	movwf	4
  1219  07F8  3001               	movlw	high __pbssBANK3
  1220  07F9  0085               	movwf	5
  1221  07FA  3050               	movlw	80
  1222  07FB  319E  2612         	fcall	clear_ram0
  1223  07FD                     end_of_initialization:	
  1224                           ;End of C runtime variable initialization code
  1225                           
  1226  07FD                     __end_of__initialization:	
  1227  07FD  0020               	movlb	0
  1228  07FE  3188  28C1         	ljmp	_main	;jump to C main() function
  1229                           
  1230                           	psect	bssBANK2
  1231  0120                     __pbssBANK2:	
  1232  0120                     floorf@F524:	
  1233  0120                     	ds	4
  1234  0124                     ___fpclassifyf@F463:	
  1235  0124                     	ds	4
  1236  0128                     _PT100:	
  1237  0128                     	ds	4
  1238  012C                     _LM335:	
  1239  012C                     	ds	4
  1240  0130                     _AlarmaS2:	
  1241  0130                     	ds	4
  1242  0134                     _AlarmaS1:	
  1243  0134                     	ds	4
  1244  0138                     _nout:	
  1245  0138                     	ds	2
  1246  013A                     _width:	
  1247  013A                     	ds	2
  1248  013C                     _prec:	
  1249  013C                     	ds	2
  1250  013E                     _flags:	
  1251  013E                     	ds	2
  1252  0140                     _estadoSwitch:	
  1253  0140                     	ds	2
  1254  0142                     _ADC_InterruptHandler:	
  1255  0142                     	ds	2
  1256  0144                     _ValorADC:	
  1257  0144                     	ds	4
  1258                           
  1259                           	psect	dataBANK2
  1260  0156                     __pdataBANK2:	
  1261  0156                     _Arreglo:	
  1262  0156                     	ds	9
  1263                           
  1264                           	psect	bssBANK3
  1265  01A0                     __pbssBANK3:	
  1266  01A0                     _dbuf:	
  1267  01A0                     	ds	80
  1268                           
  1269                           	psect	inittext
  1270  1E18                     init_ram:	
  1271  1E18  00FE               	movwf	126
  1272  1E19                     initloop:	
  1273  1E19  0012               	moviw fsr0++
  1274  1E1A  001E               	movwi fsr1++
  1275  1E1B  0BFE               	decfsz	126,f
  1276  1E1C  2E19               	goto	initloop
  1277  1E1D  3400               	retlw	0
  1278                           
  1279                           	psect	clrtext
  1280  1E12                     clear_ram0:	
  1281                           ;	Called with FSR0 containing the base address, and
  1282                           ;	WREG with the size to clear
  1283                           
  1284  1E12  0064               	clrwdt	;clear the watchdog before getting into this loop
  1285  1E13                     clrloop0:	
  1286  1E13  0180               	clrf	0	;clear RAM location pointed to by FSR
  1287  1E14  3101               	addfsr 0,1
  1288  1E15  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1289  1E16  2E13               	goto	clrloop0	;have we reached the end yet?
  1290  1E17  3400               	retlw	0	;all done for this memory range, return
  1291                           
  1292                           	psect	cstackBANK2
  1293  0148                     __pcstackBANK2:	
  1294  0148                     	ds	2
  1295  014A                     sprintf@s:	
  1296                           
  1297                           ; 1 bytes @ 0x2
  1298  014A                     	ds	1
  1299  014B                     sprintf@ap:	
  1300                           
  1301                           ; 1 bytes @ 0x3
  1302  014B                     	ds	1
  1303  014C                     sprintf@f:	
  1304                           
  1305                           ; 5 bytes @ 0x4
  1306  014C                     	ds	5
  1307  0151                     Lcd_float@s:	
  1308                           
  1309                           ; 2 bytes @ 0x9
  1310  0151                     	ds	2
  1311  0153                     ??_Imprimir_LCD:	
  1312                           
  1313                           ; 1 bytes @ 0xB
  1314  0153                     	ds	1
  1315  0154                     ??_main:	
  1316                           
  1317                           ; 1 bytes @ 0xC
  1318  0154                     	ds	2
  1319                           
  1320                           	psect	cstackBANK1
  1321  00A0                     __pcstackBANK1:	
  1322  00A0                     efgtoa@ou:	
  1323                           
  1324                           ; 4 bytes @ 0x0
  1325  00A0                     	ds	4
  1326  00A4                     _efgtoa$699:	
  1327                           
  1328                           ; 2 bytes @ 0x4
  1329  00A4                     	ds	2
  1330  00A6                     _efgtoa$700:	
  1331                           
  1332                           ; 2 bytes @ 0x6
  1333  00A6                     	ds	2
  1334  00A8                     _efgtoa$705:	
  1335                           
  1336                           ; 2 bytes @ 0x8
  1337  00A8                     	ds	2
  1338  00AA                     _efgtoa$709:	
  1339                           
  1340                           ; 2 bytes @ 0xA
  1341  00AA                     	ds	2
  1342  00AC                     _efgtoa$710:	
  1343                           
  1344                           ; 2 bytes @ 0xC
  1345  00AC                     	ds	2
  1346  00AE                     _efgtoa$711:	
  1347                           
  1348                           ; 2 bytes @ 0xE
  1349  00AE                     	ds	2
  1350  00B0                     efgtoa@t:	
  1351                           
  1352                           ; 2 bytes @ 0x10
  1353  00B0                     	ds	2
  1354  00B2                     efgtoa@pp:	
  1355                           
  1356                           ; 2 bytes @ 0x12
  1357  00B2                     	ds	2
  1358  00B4                     efgtoa@m:	
  1359                           
  1360                           ; 2 bytes @ 0x14
  1361  00B4                     	ds	2
  1362  00B6                     efgtoa@ne:	
  1363                           
  1364                           ; 2 bytes @ 0x16
  1365  00B6                     	ds	2
  1366  00B8                     efgtoa@d:	
  1367                           
  1368                           ; 2 bytes @ 0x18
  1369  00B8                     	ds	2
  1370  00BA                     efgtoa@sign:	
  1371                           
  1372                           ; 2 bytes @ 0x1A
  1373  00BA                     	ds	2
  1374  00BC                     efgtoa@fp:	
  1375                           
  1376                           ; 1 bytes @ 0x1C
  1377  00BC                     	ds	1
  1378  00BD                     efgtoa@p:	
  1379                           
  1380                           ; 2 bytes @ 0x1D
  1381  00BD                     	ds	2
  1382  00BF                     efgtoa@nmode:	
  1383                           
  1384                           ; 1 bytes @ 0x1F
  1385  00BF                     	ds	1
  1386  00C0                     efgtoa@w:	
  1387                           
  1388                           ; 2 bytes @ 0x20
  1389  00C0                     	ds	2
  1390  00C2                     efgtoa@mode:	
  1391                           
  1392                           ; 1 bytes @ 0x22
  1393  00C2                     	ds	1
  1394  00C3                     efgtoa@h:	
  1395                           
  1396                           ; 4 bytes @ 0x23
  1397  00C3                     	ds	4
  1398  00C7                     efgtoa@l:	
  1399                           
  1400                           ; 4 bytes @ 0x27
  1401  00C7                     	ds	4
  1402  00CB                     efgtoa@i:	
  1403                           
  1404                           ; 2 bytes @ 0x2B
  1405  00CB                     	ds	2
  1406  00CD                     efgtoa@g:	
  1407                           
  1408                           ; 4 bytes @ 0x2D
  1409  00CD                     	ds	4
  1410  00D1                     efgtoa@e:	
  1411                           
  1412                           ; 2 bytes @ 0x31
  1413  00D1                     	ds	2
  1414  00D3                     efgtoa@n:	
  1415                           
  1416                           ; 2 bytes @ 0x33
  1417  00D3                     	ds	2
  1418  00D5                     efgtoa@u:	
  1419                           
  1420                           ; 4 bytes @ 0x35
  1421  00D5                     	ds	4
  1422  00D9                     _vfpfcnvrt$725:	
  1423                           
  1424                           ; 2 bytes @ 0x39
  1425  00D9                     	ds	2
  1426  00DB                     _vfpfcnvrt$729:	
  1427                           
  1428                           ; 2 bytes @ 0x3B
  1429  00DB                     	ds	2
  1430  00DD                     vfpfcnvrt@f:	
  1431                           
  1432                           ; 4 bytes @ 0x3D
  1433  00DD                     	ds	4
  1434  00E1                     vfpfcnvrt@ct:	
  1435                           
  1436                           ; 3 bytes @ 0x41
  1437  00E1                     	ds	3
  1438  00E4                     vfpfcnvrt@c:	
  1439                           
  1440                           ; 1 bytes @ 0x44
  1441  00E4                     	ds	1
  1442  00E5                     vfpfcnvrt@fp:	
  1443                           
  1444                           ; 1 bytes @ 0x45
  1445  00E5                     	ds	1
  1446  00E6                     ?_sprintf:	
  1447  00E6                     sprintf@fmt:	
  1448                           ; 2 bytes @ 0x46
  1449                           
  1450                           
  1451                           ; 2 bytes @ 0x46
  1452  00E6                     	ds	6
  1453  00EC                     ?_Lcd_float:	
  1454  00EC                     Lcd_float@valorf:	
  1455                           ; 1 bytes @ 0x4C
  1456                           
  1457                           
  1458                           ; 4 bytes @ 0x4C
  1459  00EC                     	ds	4
  1460                           
  1461                           	psect	cstackCOMMON
  1462  0070                     __pcstackCOMMON:	
  1463  0070                     ?___fleq:	
  1464  0070                     ?_PIN_MANAGER_Initialize:	
  1465                           ; 1 bit 
  1466                           
  1467  0070                     ??_PIN_MANAGER_Initialize:	
  1468                           ; 1 bytes @ 0x0
  1469                           
  1470  0070                     ?_OSCILLATOR_Initialize:	
  1471                           ; 1 bytes @ 0x0
  1472                           
  1473  0070                     ??_OSCILLATOR_Initialize:	
  1474                           ; 1 bytes @ 0x0
  1475                           
  1476  0070                     ?_WDT_Initialize:	
  1477                           ; 1 bytes @ 0x0
  1478                           
  1479  0070                     ??_WDT_Initialize:	
  1480                           ; 1 bytes @ 0x0
  1481                           
  1482  0070                     ?_ADC_Initialize:	
  1483                           ; 1 bytes @ 0x0
  1484                           
  1485  0070                     ??_ADC_Initialize:	
  1486                           ; 1 bytes @ 0x0
  1487                           
  1488  0070                     ?_strcpy:	
  1489                           ; 1 bytes @ 0x0
  1490                           
  1491  0070                     ?_putch:	
  1492                           ; 1 bytes @ 0x0
  1493                           
  1494  0070                     ??_putch:	
  1495                           ; 1 bytes @ 0x0
  1496                           
  1497  0070                     ?_SYSTEM_Initialize:	
  1498                           ; 1 bytes @ 0x0
  1499                           
  1500  0070                     ??_SYSTEM_Initialize:	
  1501                           ; 1 bytes @ 0x0
  1502                           
  1503  0070                     ?_ADC_SelectChannel:	
  1504                           ; 1 bytes @ 0x0
  1505                           
  1506  0070                     ??_ADC_SelectChannel:	
  1507                           ; 1 bytes @ 0x0
  1508                           
  1509  0070                     ?_Lcd_Port:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512  0070                     ??_Lcd_Port:	
  1513                           ; 1 bytes @ 0x0
  1514                           
  1515  0070                     ?_Lcd_Cmd:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_Lcd_Init:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_Lcd_Write_Char:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_Iniciar_Puertos:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ??_Iniciar_Puertos:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_Iniciar_UART:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ??_Iniciar_UART:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_EnviarDato_UART:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ??_EnviarDato_UART:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_EnviarTexto_UART:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_Imprimir_LCD:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ?_informacion:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_ComprobarALarmaS1:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_ComprobarALarmaS2:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_main:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_fputc:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_strlen:	
  1564                           ; 2 bytes @ 0x0
  1565                           
  1566  0070                     ?___fpclassifyf:	
  1567                           ; 2 bytes @ 0x0
  1568                           
  1569  0070                     ?_isupper:	
  1570                           ; 2 bytes @ 0x0
  1571                           
  1572  0070                     ?_isdigit:	
  1573                           ; 2 bytes @ 0x0
  1574                           
  1575  0070                     ?_strncmp:	
  1576                           ; 2 bytes @ 0x0
  1577                           
  1578  0070                     ?__Umul8_16:	
  1579                           ; 2 bytes @ 0x0
  1580                           
  1581  0070                     ?_isspace:	
  1582                           ; 2 bytes @ 0x0
  1583                           
  1584  0070                     ?_ADC_GetConversion:	
  1585                           ; 2 bytes @ 0x0
  1586                           
  1587  0070                     ?_Lcd_Clear:	
  1588                           ; 2 bytes @ 0x0
  1589                           
  1590  0070                     ?___wmul:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0070                     ?___flneg:	
  1594                           ; 2 bytes @ 0x0
  1595                           
  1596  0070                     ?___fltol:	
  1597                           ; 4 bytes @ 0x0
  1598                           
  1599  0070                     ?___fldiv:	
  1600                           ; 4 bytes @ 0x0
  1601                           
  1602  0070                     ?___xxtofl:	
  1603                           ; 4 bytes @ 0x0
  1604                           
  1605  0070                     Lcd_Port@a:	
  1606                           ; 4 bytes @ 0x0
  1607                           
  1608  0070                     EnviarDato_UART@DT:	
  1609                           ; 1 bytes @ 0x0
  1610                           
  1611  0070                     putch@c:	
  1612                           ; 1 bytes @ 0x0
  1613                           
  1614  0070                     __Umul8_16@multiplicand:	
  1615                           ; 1 bytes @ 0x0
  1616                           
  1617  0070                     ___wmul@multiplier:	
  1618                           ; 1 bytes @ 0x0
  1619                           
  1620  0070                     isdigit@c:	
  1621                           ; 2 bytes @ 0x0
  1622                           
  1623  0070                     isspace@c:	
  1624                           ; 2 bytes @ 0x0
  1625                           
  1626  0070                     isupper@c:	
  1627                           ; 2 bytes @ 0x0
  1628                           
  1629  0070                     fputc@c:	
  1630                           ; 2 bytes @ 0x0
  1631                           
  1632  0070                     strcpy@src:	
  1633                           ; 2 bytes @ 0x0
  1634                           
  1635  0070                     strncmp@_r:	
  1636                           ; 2 bytes @ 0x0
  1637                           
  1638  0070                     ___fleq@ff1:	
  1639                           ; 2 bytes @ 0x0
  1640                           
  1641  0070                     ___flneg@f1:	
  1642                           ; 4 bytes @ 0x0
  1643                           
  1644  0070                     ___fltol@f1:	
  1645                           ; 4 bytes @ 0x0
  1646                           
  1647  0070                     ___fldiv@a:	
  1648                           ; 4 bytes @ 0x0
  1649                           
  1650  0070                     ___xxtofl@val:	
  1651                           ; 4 bytes @ 0x0
  1652                           
  1653  0070                     ___fpclassifyf@x:	
  1654                           ; 4 bytes @ 0x0
  1655                           
  1656                           
  1657                           ; 4 bytes @ 0x0
  1658  0070                     	ds	1
  1659  0071                     ??_Lcd_Cmd:	
  1660  0071                     ??_Lcd_Write_Char:	
  1661                           ; 1 bytes @ 0x1
  1662                           
  1663  0071                     ??_EnviarTexto_UART:	
  1664                           ; 1 bytes @ 0x1
  1665                           
  1666  0071                     ADC_SelectChannel@channel:	
  1667                           ; 1 bytes @ 0x1
  1668                           
  1669                           
  1670                           ; 1 bytes @ 0x1
  1671  0071                     	ds	1
  1672  0072                     ??_strlen:	
  1673  0072                     ??_isupper:	
  1674                           ; 1 bytes @ 0x2
  1675                           
  1676  0072                     ??_strcpy:	
  1677                           ; 1 bytes @ 0x2
  1678                           
  1679  0072                     ??_isdigit:	
  1680                           ; 1 bytes @ 0x2
  1681                           
  1682  0072                     ??__Umul8_16:	
  1683                           ; 1 bytes @ 0x2
  1684                           
  1685  0072                     ??_isspace:	
  1686                           ; 1 bytes @ 0x2
  1687                           
  1688  0072                     ??_ADC_GetConversion:	
  1689                           ; 1 bytes @ 0x2
  1690                           
  1691  0072                     Lcd_Cmd@a:	
  1692                           ; 1 bytes @ 0x2
  1693                           
  1694  0072                     Lcd_Write_Char@temp:	
  1695                           ; 1 bytes @ 0x2
  1696                           
  1697  0072                     EnviarTexto_UART@st_pt:	
  1698                           ; 1 bytes @ 0x2
  1699                           
  1700  0072                     fputc@fp:	
  1701                           ; 1 bytes @ 0x2
  1702                           
  1703  0072                     ___wmul@multiplicand:	
  1704                           ; 1 bytes @ 0x2
  1705                           
  1706  0072                     strncmp@n:	
  1707                           ; 2 bytes @ 0x2
  1708                           
  1709                           
  1710                           ; 2 bytes @ 0x2
  1711  0072                     	ds	1
  1712  0073                     ??_fputc:	
  1713  0073                     ??_Lcd_Clear:	
  1714                           ; 1 bytes @ 0x3
  1715                           
  1716  0073                     ?_Lcd_Set_Cursor:	
  1717                           ; 1 bytes @ 0x3
  1718                           
  1719  0073                     ??_Lcd_Init:	
  1720                           ; 1 bytes @ 0x3
  1721                           
  1722  0073                     ADC_GetConversion@channel:	
  1723                           ; 1 bytes @ 0x3
  1724                           
  1725  0073                     Lcd_Set_Cursor@b:	
  1726                           ; 1 bytes @ 0x3
  1727                           
  1728  0073                     Lcd_Write_Char@y:	
  1729                           ; 1 bytes @ 0x3
  1730                           
  1731  0073                     strlen@a:	
  1732                           ; 1 bytes @ 0x3
  1733                           
  1734                           
  1735                           ; 1 bytes @ 0x3
  1736  0073                     	ds	1
  1737  0074                     ??___fpclassifyf:	
  1738  0074                     ??_strncmp:	
  1739                           ; 1 bytes @ 0x4
  1740                           
  1741  0074                     ??_Lcd_Set_Cursor:	
  1742                           ; 1 bytes @ 0x4
  1743                           
  1744  0074                     ??___wmul:	
  1745                           ; 1 bytes @ 0x4
  1746                           
  1747  0074                     ??___flneg:	
  1748                           ; 1 bytes @ 0x4
  1749                           
  1750  0074                     ??___fltol:	
  1751                           ; 1 bytes @ 0x4
  1752                           
  1753  0074                     ??___xxtofl:	
  1754                           ; 1 bytes @ 0x4
  1755                           
  1756  0074                     Lcd_Write_Char@a:	
  1757                           ; 1 bytes @ 0x4
  1758                           
  1759  0074                     _isspace$1069:	
  1760                           ; 1 bytes @ 0x4
  1761                           
  1762  0074                     strlen@s:	
  1763                           ; 1 bytes @ 0x4
  1764                           
  1765  0074                     ___wmul@product:	
  1766                           ; 1 bytes @ 0x4
  1767                           
  1768  0074                     strcpy@s:	
  1769                           ; 2 bytes @ 0x4
  1770                           
  1771  0074                     __Umul8_16@product:	
  1772                           ; 2 bytes @ 0x4
  1773                           
  1774  0074                     ___fleq@ff2:	
  1775                           ; 2 bytes @ 0x4
  1776                           
  1777  0074                     ___fldiv@b:	
  1778                           ; 4 bytes @ 0x4
  1779                           
  1780                           
  1781                           ; 4 bytes @ 0x4
  1782  0074                     	ds	1
  1783  0075                     ?_Lcd_Write_String:	
  1784  0075                     strncmp@_l:	
  1785                           ; 1 bytes @ 0x5
  1786                           
  1787  0075                     Lcd_Write_String@a:	
  1788                           ; 1 bytes @ 0x5
  1789                           
  1790                           
  1791                           ; 2 bytes @ 0x5
  1792  0075                     	ds	1
  1793  0076                     ?_tolower:	
  1794  0076                     ?_atoi:	
  1795                           ; 2 bytes @ 0x6
  1796                           
  1797  0076                     Lcd_Set_Cursor@a:	
  1798                           ; 2 bytes @ 0x6
  1799                           
  1800  0076                     strcpy@d:	
  1801                           ; 1 bytes @ 0x6
  1802                           
  1803  0076                     atoi@s:	
  1804                           ; 1 bytes @ 0x6
  1805                           
  1806  0076                     strncmp@r:	
  1807                           ; 2 bytes @ 0x6
  1808                           
  1809  0076                     tolower@c:	
  1810                           ; 2 bytes @ 0x6
  1811                           
  1812  0076                     __Umul8_16@word_mpld:	
  1813                           ; 2 bytes @ 0x6
  1814                           
  1815                           
  1816                           ; 2 bytes @ 0x6
  1817  0076                     	ds	1
  1818  0077                     ??_Lcd_Write_String:	
  1819  0077                     Lcd_Set_Cursor@z:	
  1820                           ; 1 bytes @ 0x7
  1821                           
  1822  0077                     strcpy@dest:	
  1823                           ; 1 bytes @ 0x7
  1824                           
  1825                           
  1826                           ; 1 bytes @ 0x7
  1827  0077                     	ds	1
  1828  0078                     ??_tolower:	
  1829  0078                     ??_atoi:	
  1830                           ; 1 bytes @ 0x8
  1831                           
  1832  0078                     ??___fleq:	
  1833                           ; 1 bytes @ 0x8
  1834                           
  1835  0078                     ??___fldiv:	
  1836                           ; 1 bytes @ 0x8
  1837                           
  1838  0078                     ?_fputs:	
  1839                           ; 1 bytes @ 0x8
  1840                           
  1841  0078                     Lcd_Set_Cursor@y:	
  1842                           ; 2 bytes @ 0x8
  1843                           
  1844  0078                     ___xxtofl@sign:	
  1845                           ; 1 bytes @ 0x8
  1846                           
  1847  0078                     fputs@fp:	
  1848                           ; 1 bytes @ 0x8
  1849                           
  1850  0078                     strncmp@l:	
  1851                           ; 1 bytes @ 0x8
  1852                           
  1853  0078                     __Umul8_16@multiplier:	
  1854                           ; 1 bytes @ 0x8
  1855                           
  1856  0078                     Lcd_Write_String@i:	
  1857                           ; 1 bytes @ 0x8
  1858                           
  1859                           
  1860                           ; 2 bytes @ 0x8
  1861  0078                     	ds	1
  1862  0079                     ??_fputs:	
  1863  0079                     Lcd_Set_Cursor@temp:	
  1864                           ; 1 bytes @ 0x9
  1865                           
  1866  0079                     ___fltol@sign1:	
  1867                           ; 1 bytes @ 0x9
  1868                           
  1869  0079                     ___xxtofl@exp:	
  1870                           ; 1 bytes @ 0x9
  1871                           
  1872                           
  1873                           ; 1 bytes @ 0x9
  1874  0079                     	ds	1
  1875  007A                     ___fltol@exp1:	
  1876  007A                     ___xxtofl@arg:	
  1877                           ; 1 bytes @ 0xA
  1878                           
  1879                           
  1880                           ; 4 bytes @ 0xA
  1881  007A                     	ds	1
  1882  007B                     ??___awdiv:	
  1883  007B                     ??___awmod:	
  1884                           ; 1 bytes @ 0xB
  1885                           
  1886                           
  1887                           ; 1 bytes @ 0xB
  1888  007B                     	ds	1
  1889  007C                     ??_pad:	
  1890  007C                     ___awmod@counter:	
  1891                           ; 1 bytes @ 0xC
  1892                           
  1893  007C                     _tolower$1154:	
  1894                           ; 1 bytes @ 0xC
  1895                           
  1896                           
  1897                           ; 2 bytes @ 0xC
  1898  007C                     	ds	1
  1899  007D                     ___awmod@sign:	
  1900                           
  1901                           ; 1 bytes @ 0xD
  1902  007D                     	ds	1
  1903  007E                     ??_Lcd_float:	
  1904  007E                     ??_ComprobarALarmaS1:	
  1905                           ; 1 bytes @ 0xE
  1906                           
  1907  007E                     ??_ComprobarALarmaS2:	
  1908                           ; 1 bytes @ 0xE
  1909                           
  1910  007E                     ??___flsub:	
  1911                           ; 1 bytes @ 0xE
  1912                           
  1913                           
  1914                           	psect	cstackBANK0
  1915  0020                     __pcstackBANK0:	
  1916                           ; 1 bytes @ 0xE
  1917                           
  1918  0020                     ?___awdiv:	
  1919  0020                     ?___awmod:	
  1920                           ; 2 bytes @ 0x0
  1921                           
  1922  0020                     ?___flmul:	
  1923                           ; 2 bytes @ 0x0
  1924                           
  1925  0020                     fputs@c:	
  1926                           ; 4 bytes @ 0x0
  1927                           
  1928  0020                     ___awdiv@divisor:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931  0020                     ___awmod@divisor:	
  1932                           ; 2 bytes @ 0x0
  1933                           
  1934  0020                     ___fpclassifyf@e:	
  1935                           ; 2 bytes @ 0x0
  1936                           
  1937  0020                     atoi@neg:	
  1938                           ; 2 bytes @ 0x0
  1939                           
  1940  0020                     ___fldiv@rem:	
  1941                           ; 2 bytes @ 0x0
  1942                           
  1943  0020                     ___flmul@b:	
  1944                           ; 4 bytes @ 0x0
  1945                           
  1946                           
  1947                           ; 4 bytes @ 0x0
  1948  0020                     	ds	1
  1949  0021                     fputs@i:	
  1950                           
  1951                           ; 2 bytes @ 0x1
  1952  0021                     	ds	1
  1953  0022                     ___awdiv@dividend:	
  1954  0022                     ___awmod@dividend:	
  1955                           ; 2 bytes @ 0x2
  1956                           
  1957  0022                     _atoi$1038:	
  1958                           ; 2 bytes @ 0x2
  1959                           
  1960  0022                     ___fpclassifyf@u:	
  1961                           ; 2 bytes @ 0x2
  1962                           
  1963                           
  1964                           ; 4 bytes @ 0x2
  1965  0022                     	ds	1
  1966  0023                     fputs@s:	
  1967                           
  1968                           ; 1 bytes @ 0x3
  1969  0023                     	ds	1
  1970  0024                     ?_pad:	
  1971  0024                     pad@buf:	
  1972                           ; 2 bytes @ 0x4
  1973                           
  1974  0024                     ___awdiv@counter:	
  1975                           ; 1 bytes @ 0x4
  1976                           
  1977  0024                     ___fldiv@sign:	
  1978                           ; 1 bytes @ 0x4
  1979                           
  1980  0024                     _atoi$1040:	
  1981                           ; 1 bytes @ 0x4
  1982                           
  1983  0024                     ___flmul@a:	
  1984                           ; 2 bytes @ 0x4
  1985                           
  1986                           
  1987                           ; 4 bytes @ 0x4
  1988  0024                     	ds	1
  1989  0025                     ___awdiv@sign:	
  1990  0025                     pad@p:	
  1991                           ; 1 bytes @ 0x5
  1992                           
  1993  0025                     ___fldiv@new_exp:	
  1994                           ; 2 bytes @ 0x5
  1995                           
  1996                           
  1997                           ; 2 bytes @ 0x5
  1998  0025                     	ds	1
  1999  0026                     _atoi$1039:	
  2000  0026                     ___awdiv@quotient:	
  2001                           ; 1 bytes @ 0x6
  2002                           
  2003                           
  2004                           ; 2 bytes @ 0x6
  2005  0026                     	ds	1
  2006  0027                     pad@i:	
  2007  0027                     atoi@n:	
  2008                           ; 2 bytes @ 0x7
  2009                           
  2010  0027                     ___fldiv@grs:	
  2011                           ; 2 bytes @ 0x7
  2012                           
  2013                           
  2014                           ; 4 bytes @ 0x7
  2015  0027                     	ds	1
  2016  0028                     ??_informacion:	
  2017  0028                     ??___flmul:	
  2018                           ; 1 bytes @ 0x8
  2019                           
  2020                           
  2021                           ; 1 bytes @ 0x8
  2022  0028                     	ds	1
  2023  0029                     pad@w:	
  2024                           
  2025                           ; 2 bytes @ 0x9
  2026  0029                     	ds	2
  2027  002B                     pad@fp:	
  2028  002B                     ___fldiv@bexp:	
  2029                           ; 1 bytes @ 0xB
  2030                           
  2031                           
  2032                           ; 1 bytes @ 0xB
  2033  002B                     	ds	1
  2034  002C                     ___fldiv@aexp:	
  2035                           
  2036                           ; 1 bytes @ 0xC
  2037  002C                     	ds	1
  2038  002D                     ?_floorf:	
  2039  002D                     ___flmul@sign:	
  2040                           ; 4 bytes @ 0xD
  2041                           
  2042  002D                     floorf@x:	
  2043                           ; 1 bytes @ 0xD
  2044                           
  2045                           
  2046                           ; 4 bytes @ 0xD
  2047  002D                     	ds	1
  2048  002E                     ___flmul@aexp:	
  2049                           
  2050                           ; 1 bytes @ 0xE
  2051  002E                     	ds	1
  2052  002F                     ___flmul@grs:	
  2053                           
  2054                           ; 4 bytes @ 0xF
  2055  002F                     	ds	2
  2056  0031                     ??_floorf:	
  2057                           
  2058                           ; 1 bytes @ 0x11
  2059  0031                     	ds	2
  2060  0033                     ___flmul@bexp:	
  2061                           
  2062                           ; 1 bytes @ 0x13
  2063  0033                     	ds	1
  2064  0034                     ___flmul@prod:	
  2065                           
  2066                           ; 4 bytes @ 0x14
  2067  0034                     	ds	3
  2068  0037                     floorf@m:	
  2069                           
  2070                           ; 4 bytes @ 0x17
  2071  0037                     	ds	1
  2072  0038                     ___flmul@temp:	
  2073                           
  2074                           ; 2 bytes @ 0x18
  2075  0038                     	ds	2
  2076  003A                     ?___flge:	
  2077  003A                     ?___fladd:	
  2078                           ; 1 bit 
  2079                           
  2080  003A                     ___flge@ff1:	
  2081                           ; 4 bytes @ 0x1A
  2082                           
  2083  003A                     ___fladd@b:	
  2084                           ; 4 bytes @ 0x1A
  2085                           
  2086                           
  2087                           ; 4 bytes @ 0x1A
  2088  003A                     	ds	1
  2089  003B                     floorf@e:	
  2090                           
  2091                           ; 2 bytes @ 0x1B
  2092  003B                     	ds	2
  2093  003D                     floorf@u:	
  2094                           
  2095                           ; 4 bytes @ 0x1D
  2096  003D                     	ds	1
  2097  003E                     ___flge@ff2:	
  2098  003E                     ___fladd@a:	
  2099                           ; 4 bytes @ 0x1E
  2100                           
  2101                           
  2102                           ; 4 bytes @ 0x1E
  2103  003E                     	ds	4
  2104  0042                     ??___flge:	
  2105  0042                     ??___fladd:	
  2106                           ; 1 bytes @ 0x22
  2107                           
  2108                           
  2109                           ; 1 bytes @ 0x22
  2110  0042                     	ds	8
  2111  004A                     ___fladd@signs:	
  2112                           
  2113                           ; 1 bytes @ 0x2A
  2114  004A                     	ds	1
  2115  004B                     ___fladd@aexp:	
  2116                           
  2117                           ; 1 bytes @ 0x2B
  2118  004B                     	ds	1
  2119  004C                     ___fladd@bexp:	
  2120                           
  2121                           ; 1 bytes @ 0x2C
  2122  004C                     	ds	1
  2123  004D                     ___fladd@grs:	
  2124                           
  2125                           ; 1 bytes @ 0x2D
  2126  004D                     	ds	1
  2127  004E                     ?___flsub:	
  2128  004E                     ___flsub@a:	
  2129                           ; 4 bytes @ 0x2E
  2130                           
  2131                           
  2132                           ; 4 bytes @ 0x2E
  2133  004E                     	ds	4
  2134  0052                     ___flsub@b:	
  2135                           
  2136                           ; 4 bytes @ 0x32
  2137  0052                     	ds	4
  2138  0056                     ?_efgtoa:	
  2139  0056                     efgtoa@f:	
  2140                           ; 2 bytes @ 0x36
  2141                           
  2142                           
  2143                           ; 4 bytes @ 0x36
  2144  0056                     	ds	4
  2145  005A                     efgtoa@c:	
  2146                           
  2147                           ; 1 bytes @ 0x3A
  2148  005A                     	ds	1
  2149  005B                     ??_efgtoa:	
  2150                           
  2151                           ; 1 bytes @ 0x3B
  2152  005B                     	ds	4
  2153  005F                     ?_vfpfcnvrt:	
  2154  005F                     vfpfcnvrt@fmt:	
  2155                           ; 2 bytes @ 0x3F
  2156                           
  2157                           
  2158                           ; 1 bytes @ 0x3F
  2159  005F                     	ds	1
  2160  0060                     vfpfcnvrt@ap:	
  2161                           
  2162                           ; 1 bytes @ 0x40
  2163  0060                     	ds	1
  2164  0061                     ??_vfpfcnvrt:	
  2165                           
  2166                           ; 1 bytes @ 0x41
  2167  0061                     	ds	6
  2168  0067                     ?_vfprintf:	
  2169  0067                     vfprintf@fmt:	
  2170                           ; 2 bytes @ 0x47
  2171                           
  2172                           
  2173                           ; 2 bytes @ 0x47
  2174  0067                     	ds	2
  2175  0069                     vfprintf@ap:	
  2176                           
  2177                           ; 1 bytes @ 0x49
  2178  0069                     	ds	1
  2179  006A                     ??_vfprintf:	
  2180                           
  2181                           ; 1 bytes @ 0x4A
  2182  006A                     	ds	2
  2183  006C                     vfprintf@fp:	
  2184                           
  2185                           ; 1 bytes @ 0x4C
  2186  006C                     	ds	1
  2187  006D                     vfprintf@cfmt:	
  2188                           
  2189                           ; 2 bytes @ 0x4D
  2190  006D                     	ds	2
  2191  006F                     ??_sprintf:	
  2192                           
  2193                           ; 1 bytes @ 0x4F
  2194  006F                     	ds	1
  2195                           
  2196                           	psect	maintext
  2197  08C1                     __pmaintext:	
  2198 ;;
  2199 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2200 ;;
  2201 ;; *************** function _main *****************
  2202 ;; Defined at:
  2203 ;;		line 171 in file "main.c"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;		None
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;		None
  2208 ;; Return value:  Size  Location     Type
  2209 ;;                  1    wreg      void 
  2210 ;; Registers used:
  2211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2212 ;; Tracked objects:
  2213 ;;		On entry : B1F/0
  2214 ;;		On exit  : 1E/2
  2215 ;;		Unchanged: 0/0
  2216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2217 ;;      Params:         0       0       0       0       0       0       0       0
  2218 ;;      Locals:         0       0       0       0       0       0       0       0
  2219 ;;      Temps:          0       0       0       2       0       0       0       0
  2220 ;;      Totals:         0       0       0       2       0       0       0       0
  2221 ;;Total ram usage:        2 bytes
  2222 ;; Hardware stack levels required when called:   10
  2223 ;; This function calls:
  2224 ;;		_ADC_GetConversion
  2225 ;;		_ADC_Initialize
  2226 ;;		_ADC_SelectChannel
  2227 ;;		_ComprobarALarmaS1
  2228 ;;		_ComprobarALarmaS2
  2229 ;;		_EnviarTexto_UART
  2230 ;;		_Imprimir_LCD
  2231 ;;		_Iniciar_Puertos
  2232 ;;		_Iniciar_UART
  2233 ;;		_Lcd_Clear
  2234 ;;		_Lcd_Init
  2235 ;;		_Lcd_Set_Cursor
  2236 ;;		_Lcd_Write_String
  2237 ;;		_SYSTEM_Initialize
  2238 ;;		___fladd
  2239 ;;		___flmul
  2240 ;;		___xxtofl
  2241 ;;		_informacion
  2242 ;; This function is called by:
  2243 ;;		Startup code after reset
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _main
  2249  08C1                     _main:	
  2250                           
  2251                           ;main.c: 174:     SYSTEM_Initialize();
  2252                           
  2253                           ;incstack = 0
  2254                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2255  08C1  319E  265A  3188   	fcall	_SYSTEM_Initialize
  2256                           
  2257                           ;main.c: 175:     Iniciar_Puertos();
  2258  08C4  3190  2003  3188   	fcall	_Iniciar_Puertos
  2259                           
  2260                           ;main.c: 176:     Lcd_Init();
  2261  08C7  3190  2093  3188   	fcall	_Lcd_Init
  2262                           
  2263                           ;main.c: 177:     Lcd_Clear();
  2264  08CA  319E  262D  3188   	fcall	_Lcd_Clear
  2265                           
  2266                           ;main.c: 178:     ADC_Initialize();
  2267  08CD  319E  2635  3188   	fcall	_ADC_Initialize
  2268                           
  2269                           ;main.c: 179:     Iniciar_UART();
  2270  08D0  319E  264F  3188   	fcall	_Iniciar_UART
  2271  08D3                     l4481:	
  2272                           
  2273                           ;main.c: 182:     {;main.c: 183:         Imprimir_LCD();
  2274  08D3  3197  271A  3188   	fcall	_Imprimir_LCD
  2275                           
  2276                           ;main.c: 184:         estadoSwitch=PORTCbits.RC0;
  2277  08D6  0020               	movlb	0	; select bank0
  2278  08D7  080E               	movf	14,w	;volatile
  2279  08D8  3901               	andlw	1
  2280  08D9  0022               	movlb	2	; select bank2
  2281  08DA  00D4               	movwf	??_main^(0+256)
  2282  08DB  01D5               	clrf	(??_main^(0+256)+1)
  2283  08DC  0854               	movf	??_main^(0+256),w
  2284  08DD  00C0               	movwf	_estadoSwitch^(0+256)
  2285  08DE  0855               	movf	(??_main+1)^(0+256),w
  2286  08DF  00C1               	movwf	(_estadoSwitch+1)^(0+256)
  2287                           
  2288                           ;main.c: 186:         switch(estadoSwitch){
  2289  08E0  29A3               	goto	l4509
  2290  08E1                     l4485:	
  2291                           
  2292                           ;main.c: 188:                 Lcd_Set_Cursor(1,8);
  2293  08E1  3008               	movlw	8
  2294  08E2  00D4               	movwf	??_main^(0+256)
  2295  08E3  0854               	movf	??_main^(0+256),w
  2296  08E4  00F3               	movwf	Lcd_Set_Cursor@b
  2297  08E5  3001               	movlw	1
  2298  08E6  3194  2494  3188   	fcall	_Lcd_Set_Cursor
  2299                           
  2300                           ;main.c: 189:                 Lcd_Write_String("OFF");
  2301  08E9  3041               	movlw	low (STR_9| (0+32768))
  2302  08EA  00F5               	movwf	Lcd_Write_String@a
  2303  08EB  3098               	movlw	high (STR_9| (0+32768))
  2304  08EC  00F6               	movwf	Lcd_Write_String@a+1
  2305  08ED  319F  270E  3188   	fcall	_Lcd_Write_String
  2306                           
  2307                           ;main.c: 190:                 break;
  2308  08F0  29B0               	goto	l4511
  2309  08F1                     l4489:	
  2310                           
  2311                           ;main.c: 192:                 Lcd_Set_Cursor(1,8);
  2312  08F1  3008               	movlw	8
  2313  08F2  00D4               	movwf	??_main^(0+256)
  2314  08F3  0854               	movf	??_main^(0+256),w
  2315  08F4  00F3               	movwf	Lcd_Set_Cursor@b
  2316  08F5  3001               	movlw	1
  2317  08F6  3194  2494  3188   	fcall	_Lcd_Set_Cursor
  2318                           
  2319                           ;main.c: 193:                 Lcd_Write_String("ON ");
  2320  08F9  3035               	movlw	low (STR_10| (0+32768))
  2321  08FA  00F5               	movwf	Lcd_Write_String@a
  2322  08FB  3098               	movlw	high (STR_10| (0+32768))
  2323  08FC  00F6               	movwf	Lcd_Write_String@a+1
  2324  08FD  319F  270E  3188   	fcall	_Lcd_Write_String
  2325                           
  2326                           ;main.c: 194:                 ADC_SelectChannel(channel_AN0);
  2327  0900  3000               	movlw	0
  2328  0901  319E  2666  3188   	fcall	_ADC_SelectChannel
  2329                           
  2330                           ;main.c: 195:                 ValorADC[0]=ADC_GetConversion(channel_AN0);
  2331  0904  3000               	movlw	0
  2332  0905  319E  26B1  3188   	fcall	_ADC_GetConversion
  2333  0908  0871               	movf	?_ADC_GetConversion+1,w
  2334  0909  0022               	movlb	2	; select bank2
  2335  090A  00C5               	movwf	(_ValorADC+1)^(0+256)
  2336  090B  0870               	movf	?_ADC_GetConversion,w
  2337  090C  00C4               	movwf	_ValorADC^(0+256)
  2338                           
  2339                           ;main.c: 196:                 ADC_SelectChannel(channel_AN1);
  2340  090D  3001               	movlw	1
  2341  090E  319E  2666  3188   	fcall	_ADC_SelectChannel
  2342                           
  2343                           ;main.c: 197:                 ValorADC[1]=ADC_GetConversion(channel_AN1);
  2344  0911  3001               	movlw	1
  2345  0912  319E  26B1  3188   	fcall	_ADC_GetConversion
  2346  0915  0871               	movf	?_ADC_GetConversion+1,w
  2347  0916  0022               	movlb	2	; select bank2
  2348  0917  00C7               	movwf	((_ValorADC+1)^(0+256)+2)
  2349  0918  0870               	movf	?_ADC_GetConversion,w
  2350  0919  00C6               	movwf	(_ValorADC^(0+256)+2)
  2351                           
  2352                           ;main.c: 198:                 LM335=((ValorADC[0]*0.489)-273);
  2353  091A  30C3               	movlw	195
  2354  091B  0020               	movlb	0	; select bank0
  2355  091C  00BD               	movwf	___fladd@b+3
  2356  091D  3088               	movlw	136
  2357  091E  00BC               	movwf	___fladd@b+2
  2358  091F  3080               	movlw	128
  2359  0920  00BB               	movwf	___fladd@b+1
  2360  0921  3000               	movlw	0
  2361  0922  00BA               	movwf	___fladd@b
  2362  0923  303E               	movlw	62
  2363  0924  00A3               	movwf	___flmul@b+3
  2364  0925  30FA               	movlw	250
  2365  0926  00A2               	movwf	___flmul@b+2
  2366  0927  305E               	movlw	94
  2367  0928  00A1               	movwf	___flmul@b+1
  2368  0929  3035               	movlw	53
  2369  092A  00A0               	movwf	___flmul@b
  2370  092B  0022               	movlb	2	; select bank2
  2371  092C  0844               	movf	_ValorADC^(0+256),w
  2372  092D  00F0               	movwf	___xxtofl@val
  2373  092E  0845               	movf	(_ValorADC+1)^(0+256),w
  2374  092F  00F1               	movwf	___xxtofl@val+1
  2375  0930  01F2               	clrf	___xxtofl@val+2
  2376  0931  01F3               	clrf	___xxtofl@val+3
  2377  0932  3000               	movlw	0
  2378  0933  3195  2514  3188   	fcall	___xxtofl
  2379  0936  0873               	movf	?___xxtofl+3,w
  2380  0937  0020               	movlb	0	; select bank0
  2381  0938  00A7               	movwf	___flmul@a+3
  2382  0939  0872               	movf	?___xxtofl+2,w
  2383  093A  00A6               	movwf	___flmul@a+2
  2384  093B  0871               	movf	?___xxtofl+1,w
  2385  093C  00A5               	movwf	___flmul@a+1
  2386  093D  0870               	movf	?___xxtofl,w
  2387  093E  00A4               	movwf	___flmul@a
  2388  093F  318B  239F  3188   	fcall	___flmul
  2389  0942  0823               	movf	?___flmul+3,w
  2390  0943  00C1               	movwf	___fladd@a+3
  2391  0944  0822               	movf	?___flmul+2,w
  2392  0945  00C0               	movwf	___fladd@a+2
  2393  0946  0821               	movf	?___flmul+1,w
  2394  0947  00BF               	movwf	___fladd@a+1
  2395  0948  0820               	movf	?___flmul,w
  2396  0949  00BE               	movwf	___fladd@a
  2397  094A  3189  21BE  3188   	fcall	___fladd
  2398  094D  083D               	movf	?___fladd+3,w
  2399  094E  0022               	movlb	2	; select bank2
  2400  094F  00AF               	movwf	(_LM335+3)^(0+256)
  2401  0950  0020               	movlb	0	; select bank0
  2402  0951  083C               	movf	?___fladd+2,w
  2403  0952  0022               	movlb	2	; select bank2
  2404  0953  00AE               	movwf	(_LM335+2)^(0+256)
  2405  0954  0020               	movlb	0	; select bank0
  2406  0955  083B               	movf	?___fladd+1,w
  2407  0956  0022               	movlb	2	; select bank2
  2408  0957  00AD               	movwf	(_LM335+1)^(0+256)
  2409  0958  0020               	movlb	0	; select bank0
  2410  0959  083A               	movf	?___fladd,w
  2411  095A  0022               	movlb	2	; select bank2
  2412  095B  00AC               	movwf	_LM335^(0+256)
  2413                           
  2414                           ;main.c: 199:                 PT100=( 0.526*ValorADC[1]-305.263);
  2415  095C  30C3               	movlw	195
  2416  095D  0020               	movlb	0	; select bank0
  2417  095E  00BD               	movwf	___fladd@b+3
  2418  095F  3098               	movlw	152
  2419  0960  00BC               	movwf	___fladd@b+2
  2420  0961  30A1               	movlw	161
  2421  0962  00BB               	movwf	___fladd@b+1
  2422  0963  30AA               	movlw	170
  2423  0964  00BA               	movwf	___fladd@b
  2424  0965  303F               	movlw	63
  2425  0966  00A3               	movwf	___flmul@b+3
  2426  0967  3006               	movlw	6
  2427  0968  00A2               	movwf	___flmul@b+2
  2428  0969  30A7               	movlw	167
  2429  096A  00A1               	movwf	___flmul@b+1
  2430  096B  30F0               	movlw	240
  2431  096C  00A0               	movwf	___flmul@b
  2432  096D  0022               	movlb	2	; select bank2
  2433  096E  0846               	movf	(_ValorADC^(0+256)+2),w
  2434  096F  00F0               	movwf	___xxtofl@val
  2435  0970  0847               	movf	((_ValorADC+1)^(0+256)+2),w
  2436  0971  00F1               	movwf	___xxtofl@val+1
  2437  0972  01F2               	clrf	___xxtofl@val+2
  2438  0973  01F3               	clrf	___xxtofl@val+3
  2439  0974  3000               	movlw	0
  2440  0975  3195  2514  3188   	fcall	___xxtofl
  2441  0978  0873               	movf	?___xxtofl+3,w
  2442  0979  0020               	movlb	0	; select bank0
  2443  097A  00A7               	movwf	___flmul@a+3
  2444  097B  0872               	movf	?___xxtofl+2,w
  2445  097C  00A6               	movwf	___flmul@a+2
  2446  097D  0871               	movf	?___xxtofl+1,w
  2447  097E  00A5               	movwf	___flmul@a+1
  2448  097F  0870               	movf	?___xxtofl,w
  2449  0980  00A4               	movwf	___flmul@a
  2450  0981  318B  239F  3188   	fcall	___flmul
  2451  0984  0823               	movf	?___flmul+3,w
  2452  0985  00C1               	movwf	___fladd@a+3
  2453  0986  0822               	movf	?___flmul+2,w
  2454  0987  00C0               	movwf	___fladd@a+2
  2455  0988  0821               	movf	?___flmul+1,w
  2456  0989  00BF               	movwf	___fladd@a+1
  2457  098A  0820               	movf	?___flmul,w
  2458  098B  00BE               	movwf	___fladd@a
  2459  098C  3189  21BE  3188   	fcall	___fladd
  2460  098F  083D               	movf	?___fladd+3,w
  2461  0990  0022               	movlb	2	; select bank2
  2462  0991  00AB               	movwf	(_PT100+3)^(0+256)
  2463  0992  0020               	movlb	0	; select bank0
  2464  0993  083C               	movf	?___fladd+2,w
  2465  0994  0022               	movlb	2	; select bank2
  2466  0995  00AA               	movwf	(_PT100+2)^(0+256)
  2467  0996  0020               	movlb	0	; select bank0
  2468  0997  083B               	movf	?___fladd+1,w
  2469  0998  0022               	movlb	2	; select bank2
  2470  0999  00A9               	movwf	(_PT100+1)^(0+256)
  2471  099A  0020               	movlb	0	; select bank0
  2472  099B  083A               	movf	?___fladd,w
  2473  099C  0022               	movlb	2	; select bank2
  2474  099D  00A8               	movwf	_PT100^(0+256)
  2475                           
  2476                           ;main.c: 200:                 _delay((unsigned long)((1000)*(4000000/4000000.0)));
  2477  099E  30C8               	movlw	200
  2478  099F                     u5917:	
  2479  099F  3200               	nop2
  2480  09A0  0B89               	decfsz	9,f
  2481  09A1  299F               	goto	u5917
  2482                           
  2483                           ;main.c: 201:                 break;
  2484  09A2  29B0               	goto	l4511
  2485  09A3                     l4509:	
  2486                           
  2487                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2488                           ; Switch size 1, requested type "simple"
  2489                           ; Number of cases is 1, Range of values is 0 to 0
  2490                           ; switch strategies available:
  2491                           ; Name         Instructions Cycles
  2492                           ; simple_byte            4     3 (average)
  2493                           ; direct_byte            8     6 (fixed)
  2494                           ; jumptable            260     6 (fixed)
  2495                           ;	Chosen strategy is simple_byte
  2496  09A3  0841               	movf	(_estadoSwitch+1)^(0+256),w
  2497  09A4  3A00               	xorlw	0	; case 0
  2498  09A5  1903               	skipnz
  2499  09A6  29A8               	goto	l4571
  2500  09A7  29B0               	goto	l4511
  2501  09A8                     l4571:	
  2502                           
  2503                           ; Switch size 1, requested type "simple"
  2504                           ; Number of cases is 2, Range of values is 0 to 1
  2505                           ; switch strategies available:
  2506                           ; Name         Instructions Cycles
  2507                           ; simple_byte            7     4 (average)
  2508                           ; direct_byte           10     6 (fixed)
  2509                           ; jumptable            260     6 (fixed)
  2510                           ;	Chosen strategy is simple_byte
  2511  09A8  0840               	movf	_estadoSwitch^(0+256),w
  2512  09A9  3A00               	xorlw	0	; case 0
  2513  09AA  1903               	skipnz
  2514  09AB  28E1               	goto	l4485
  2515  09AC  3A01               	xorlw	1	; case 1
  2516  09AD  1903               	skipnz
  2517  09AE  28F1               	goto	l4489
  2518  09AF  29B0               	goto	l4511
  2519  09B0                     l4511:	
  2520                           
  2521                           ;main.c: 203:         ComprobarALarmaS1();
  2522  09B0  3192  229B  3188   	fcall	_ComprobarALarmaS1
  2523                           
  2524                           ;main.c: 204:         ComprobarALarmaS2();
  2525  09B3  3191  21FD  3188   	fcall	_ComprobarALarmaS2
  2526                           
  2527                           ;main.c: 205:         informacion();
  2528  09B6  3188  2022  3188   	fcall	_informacion
  2529                           
  2530                           ;main.c: 206:         EnviarTexto_UART(Arreglo);
  2531  09B9  3056               	movlw	(low (_Arreglo| (0+256)))& (0+255)
  2532  09BA  319E  2686  3188   	fcall	_EnviarTexto_UART
  2533  09BD  28D3               	goto	l4481
  2534  09BE                     __end_of_main:	
  2535                           
  2536                           	psect	text1
  2537  0822                     __ptext1:	
  2538 ;; *************** function _informacion *****************
  2539 ;; Defined at:
  2540 ;;		line 136 in file "main.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, pclath, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 1F/2
  2551 ;;		On exit  : 1F/2
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2554 ;;      Params:         0       0       0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0       0       0
  2556 ;;      Temps:          0       1       0       0       0       0       0       0
  2557 ;;      Totals:         0       1       0       0       0       0       0       0
  2558 ;;Total ram usage:        1 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    1
  2561 ;; This function calls:
  2562 ;;		___awdiv
  2563 ;;		___awmod
  2564 ;;		___fltol
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           
  2571                           ;psect for function _informacion
  2572  0822                     _informacion:	
  2573                           
  2574                           ;main.c: 137:     Arreglo[0]=estadoSwitch+'0';
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _informacion: [wreg+status,2+status,0+pclath+cstack]
  2578  0822  0840               	movf	_estadoSwitch^(0+256),w
  2579  0823  3E30               	addlw	48
  2580  0824  0020               	movlb	0	; select bank0
  2581  0825  00A8               	movwf	??_informacion
  2582  0826  0828               	movf	??_informacion,w
  2583  0827  0022               	movlb	2	; select bank2
  2584  0828  00D6               	movwf	_Arreglo^(0+256)
  2585                           
  2586                           ;main.c: 138:     Arreglo[1]=((int)LM335/10)+'0';
  2587  0829  300A               	movlw	10
  2588  082A  0020               	movlb	0	; select bank0
  2589  082B  00A0               	movwf	___awdiv@divisor
  2590  082C  3000               	movlw	0
  2591  082D  00A1               	movwf	___awdiv@divisor+1
  2592  082E  0022               	movlb	2	; select bank2
  2593  082F  082F               	movf	(_LM335+3)^(0+256),w
  2594  0830  00F3               	movwf	___fltol@f1+3
  2595  0831  082E               	movf	(_LM335+2)^(0+256),w
  2596  0832  00F2               	movwf	___fltol@f1+2
  2597  0833  082D               	movf	(_LM335+1)^(0+256),w
  2598  0834  00F1               	movwf	___fltol@f1+1
  2599  0835  082C               	movf	_LM335^(0+256),w
  2600  0836  00F0               	movwf	___fltol@f1
  2601  0837  3193  233C  3188   	fcall	___fltol
  2602  083A  0871               	movf	?___fltol+1,w
  2603  083B  0020               	movlb	0	; select bank0
  2604  083C  00A3               	movwf	___awdiv@dividend+1
  2605  083D  0870               	movf	?___fltol,w
  2606  083E  00A2               	movwf	___awdiv@dividend
  2607  083F  3192  22EB  3188   	fcall	___awdiv
  2608  0842  0820               	movf	?___awdiv,w
  2609  0843  3E30               	addlw	48
  2610  0844  00A8               	movwf	??_informacion
  2611  0845  0828               	movf	??_informacion,w
  2612  0846  0022               	movlb	2	; select bank2
  2613  0847  00D7               	movwf	(_Arreglo^(0+256)+1)
  2614                           
  2615                           ;main.c: 139:     Arreglo[2]=((int)LM335%10)+'0';
  2616  0848  300A               	movlw	10
  2617  0849  0020               	movlb	0	; select bank0
  2618  084A  00A0               	movwf	___awmod@divisor
  2619  084B  3000               	movlw	0
  2620  084C  00A1               	movwf	___awmod@divisor+1
  2621  084D  0022               	movlb	2	; select bank2
  2622  084E  082F               	movf	(_LM335+3)^(0+256),w
  2623  084F  00F3               	movwf	___fltol@f1+3
  2624  0850  082E               	movf	(_LM335+2)^(0+256),w
  2625  0851  00F2               	movwf	___fltol@f1+2
  2626  0852  082D               	movf	(_LM335+1)^(0+256),w
  2627  0853  00F1               	movwf	___fltol@f1+1
  2628  0854  082C               	movf	_LM335^(0+256),w
  2629  0855  00F0               	movwf	___fltol@f1
  2630  0856  3193  233C  3188   	fcall	___fltol
  2631  0859  0871               	movf	?___fltol+1,w
  2632  085A  0020               	movlb	0	; select bank0
  2633  085B  00A3               	movwf	___awmod@dividend+1
  2634  085C  0870               	movf	?___fltol,w
  2635  085D  00A2               	movwf	___awmod@dividend
  2636  085E  3190  20D6  3188   	fcall	___awmod
  2637  0861  0820               	movf	?___awmod,w
  2638  0862  3E30               	addlw	48
  2639  0863  00A8               	movwf	??_informacion
  2640  0864  0828               	movf	??_informacion,w
  2641  0865  0022               	movlb	2	; select bank2
  2642  0866  00D8               	movwf	(_Arreglo^(0+256)+2)
  2643                           
  2644                           ;main.c: 140:     Arreglo[3]=((int)PT100/10)+'0';
  2645  0867  300A               	movlw	10
  2646  0868  0020               	movlb	0	; select bank0
  2647  0869  00A0               	movwf	___awdiv@divisor
  2648  086A  3000               	movlw	0
  2649  086B  00A1               	movwf	___awdiv@divisor+1
  2650  086C  0022               	movlb	2	; select bank2
  2651  086D  082B               	movf	(_PT100+3)^(0+256),w
  2652  086E  00F3               	movwf	___fltol@f1+3
  2653  086F  082A               	movf	(_PT100+2)^(0+256),w
  2654  0870  00F2               	movwf	___fltol@f1+2
  2655  0871  0829               	movf	(_PT100+1)^(0+256),w
  2656  0872  00F1               	movwf	___fltol@f1+1
  2657  0873  0828               	movf	_PT100^(0+256),w
  2658  0874  00F0               	movwf	___fltol@f1
  2659  0875  3193  233C  3188   	fcall	___fltol
  2660  0878  0871               	movf	?___fltol+1,w
  2661  0879  0020               	movlb	0	; select bank0
  2662  087A  00A3               	movwf	___awdiv@dividend+1
  2663  087B  0870               	movf	?___fltol,w
  2664  087C  00A2               	movwf	___awdiv@dividend
  2665  087D  3192  22EB  3188   	fcall	___awdiv
  2666  0880  0820               	movf	?___awdiv,w
  2667  0881  3E30               	addlw	48
  2668  0882  00A8               	movwf	??_informacion
  2669  0883  0828               	movf	??_informacion,w
  2670  0884  0022               	movlb	2	; select bank2
  2671  0885  00D9               	movwf	(_Arreglo^(0+256)+3)
  2672                           
  2673                           ;main.c: 141:     Arreglo[4]=((int)PT100%10)+'0';
  2674  0886  300A               	movlw	10
  2675  0887  0020               	movlb	0	; select bank0
  2676  0888  00A0               	movwf	___awmod@divisor
  2677  0889  3000               	movlw	0
  2678  088A  00A1               	movwf	___awmod@divisor+1
  2679  088B  0022               	movlb	2	; select bank2
  2680  088C  082B               	movf	(_PT100+3)^(0+256),w
  2681  088D  00F3               	movwf	___fltol@f1+3
  2682  088E  082A               	movf	(_PT100+2)^(0+256),w
  2683  088F  00F2               	movwf	___fltol@f1+2
  2684  0890  0829               	movf	(_PT100+1)^(0+256),w
  2685  0891  00F1               	movwf	___fltol@f1+1
  2686  0892  0828               	movf	_PT100^(0+256),w
  2687  0893  00F0               	movwf	___fltol@f1
  2688  0894  3193  233C  3188   	fcall	___fltol
  2689  0897  0871               	movf	?___fltol+1,w
  2690  0898  0020               	movlb	0	; select bank0
  2691  0899  00A3               	movwf	___awmod@dividend+1
  2692  089A  0870               	movf	?___fltol,w
  2693  089B  00A2               	movwf	___awmod@dividend
  2694  089C  3190  20D6         	fcall	___awmod
  2695  089E  0820               	movf	?___awmod,w
  2696  089F  3E30               	addlw	48
  2697  08A0  00A8               	movwf	??_informacion
  2698  08A1  0828               	movf	??_informacion,w
  2699  08A2  0022               	movlb	2	; select bank2
  2700  08A3  00DA               	movwf	(_Arreglo^(0+256)+4)
  2701                           
  2702                           ;main.c: 142:     Arreglo[5]=AlarmaS1[0]+'0';
  2703  08A4  0834               	movf	_AlarmaS1^(0+256),w
  2704  08A5  3E30               	addlw	48
  2705  08A6  0020               	movlb	0	; select bank0
  2706  08A7  00A8               	movwf	??_informacion
  2707  08A8  0828               	movf	??_informacion,w
  2708  08A9  0022               	movlb	2	; select bank2
  2709  08AA  00DB               	movwf	(_Arreglo^(0+256)+5)
  2710                           
  2711                           ;main.c: 143:     Arreglo[6]=AlarmaS2[0]+'0';
  2712  08AB  0830               	movf	_AlarmaS2^(0+256),w
  2713  08AC  3E30               	addlw	48
  2714  08AD  0020               	movlb	0	; select bank0
  2715  08AE  00A8               	movwf	??_informacion
  2716  08AF  0828               	movf	??_informacion,w
  2717  08B0  0022               	movlb	2	; select bank2
  2718  08B1  00DC               	movwf	(_Arreglo^(0+256)+6)
  2719                           
  2720                           ;main.c: 144:     Arreglo[7]=AlarmaS1[1]+'0';
  2721  08B2  0836               	movf	(_AlarmaS1^(0+256)+2),w
  2722  08B3  3E30               	addlw	48
  2723  08B4  0020               	movlb	0	; select bank0
  2724  08B5  00A8               	movwf	??_informacion
  2725  08B6  0828               	movf	??_informacion,w
  2726  08B7  0022               	movlb	2	; select bank2
  2727  08B8  00DD               	movwf	(_Arreglo^(0+256)+7)
  2728                           
  2729                           ;main.c: 145:     Arreglo[8]=AlarmaS2[1]+'0';
  2730  08B9  0832               	movf	(_AlarmaS2^(0+256)+2),w
  2731  08BA  3E30               	addlw	48
  2732  08BB  0020               	movlb	0	; select bank0
  2733  08BC  00A8               	movwf	??_informacion
  2734  08BD  0828               	movf	??_informacion,w
  2735  08BE  0022               	movlb	2	; select bank2
  2736  08BF  00DE               	movwf	(_Arreglo^(0+256)+8)
  2737  08C0  0008               	return
  2738  08C1                     __end_of_informacion:	
  2739                           
  2740                           	psect	text2
  2741  1E5A                     __ptext2:	
  2742 ;; *************** function _SYSTEM_Initialize *****************
  2743 ;; Defined at:
  2744 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : B1F/0
  2755 ;;		On exit  : 1F/1
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2758 ;;      Params:         0       0       0       0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    1
  2765 ;; This function calls:
  2766 ;;		_ADC_Initialize
  2767 ;;		_OSCILLATOR_Initialize
  2768 ;;		_PIN_MANAGER_Initialize
  2769 ;;		_WDT_Initialize
  2770 ;; This function is called by:
  2771 ;;		_main
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _SYSTEM_Initialize
  2777  1E5A                     _SYSTEM_Initialize:	
  2778                           
  2779                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2780                           
  2781                           ;incstack = 0
  2782                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2783  1E5A  3188  2000  319E   	fcall	_PIN_MANAGER_Initialize
  2784                           
  2785                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2786  1E5D  319E  261E  319E   	fcall	_OSCILLATOR_Initialize
  2787                           
  2788                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2789  1E60  319E  260E  319E   	fcall	_WDT_Initialize
  2790                           
  2791                           ;mcc_generated_files/mcc.c: 56:     ADC_Initialize();
  2792  1E63  319E  2635         	fcall	_ADC_Initialize
  2793  1E65  0008               	return
  2794  1E66                     __end_of_SYSTEM_Initialize:	
  2795                           
  2796                           	psect	text3
  2797  1E0E                     __ptext3:	
  2798 ;; *************** function _WDT_Initialize *****************
  2799 ;; Defined at:
  2800 ;;		line 69 in file "mcc_generated_files/mcc.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;		None
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;		None
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      void 
  2807 ;; Registers used:
  2808 ;;		wreg
  2809 ;; Tracked objects:
  2810 ;;		On entry : B1F/2
  2811 ;;		On exit  : B1F/1
  2812 ;;		Unchanged: B00/0
  2813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2814 ;;      Params:         0       0       0       0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0
  2817 ;;      Totals:         0       0       0       0       0       0       0       0
  2818 ;;Total ram usage:        0 bytes
  2819 ;; Hardware stack levels used:    1
  2820 ;; This function calls:
  2821 ;;		Nothing
  2822 ;; This function is called by:
  2823 ;;		_SYSTEM_Initialize
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           
  2828                           ;psect for function _WDT_Initialize
  2829  1E0E                     _WDT_Initialize:	
  2830                           
  2831                           ;mcc_generated_files/mcc.c: 72:     WDTCON = 0x16;
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _WDT_Initialize: [wreg]
  2835  1E0E  3016               	movlw	22
  2836  1E0F  0021               	movlb	1	; select bank1
  2837  1E10  0097               	movwf	23	;volatile
  2838  1E11  0008               	return
  2839  1E12                     __end_of_WDT_Initialize:	
  2840                           
  2841                           	psect	text4
  2842  0800                     __ptext4:	
  2843 ;; *************** function _PIN_MANAGER_Initialize *****************
  2844 ;; Defined at:
  2845 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;		None
  2850 ;; Return value:  Size  Location     Type
  2851 ;;                  1    wreg      void 
  2852 ;; Registers used:
  2853 ;;		wreg, status,2
  2854 ;; Tracked objects:
  2855 ;;		On entry : B1F/0
  2856 ;;		On exit  : B1F/2
  2857 ;;		Unchanged: B00/0
  2858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2859 ;;      Params:         0       0       0       0       0       0       0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; This function calls:
  2866 ;;		Nothing
  2867 ;; This function is called by:
  2868 ;;		_SYSTEM_Initialize
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           
  2873                           ;psect for function _PIN_MANAGER_Initialize
  2874  0800                     _PIN_MANAGER_Initialize:	
  2875                           
  2876                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2880  0800  0022               	movlb	2	; select bank2
  2881  0801  0190               	clrf	16	;volatile
  2882                           
  2883                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2884  0802  018F               	clrf	15	;volatile
  2885                           
  2886                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2887  0803  018C               	clrf	12	;volatile
  2888                           
  2889                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2890  0804  018D               	clrf	13	;volatile
  2891                           
  2892                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2893  0805  018E               	clrf	14	;volatile
  2894                           
  2895                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x0F;
  2896  0806  300F               	movlw	15
  2897  0807  0021               	movlb	1	; select bank1
  2898  0808  0090               	movwf	16	;volatile
  2899                           
  2900                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2901  0809  30FF               	movlw	255
  2902  080A  008C               	movwf	12	;volatile
  2903                           
  2904                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2905  080B  30FF               	movlw	255
  2906  080C  008D               	movwf	13	;volatile
  2907                           
  2908                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  2909  080D  30FF               	movlw	255
  2910  080E  008E               	movwf	14	;volatile
  2911                           
  2912                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  2913  080F  30FF               	movlw	255
  2914  0810  008F               	movwf	15	;volatile
  2915                           
  2916                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
  2917  0811  30FF               	movlw	255
  2918  0812  0023               	movlb	3	; select bank3
  2919  0813  008F               	movwf	15	;volatile
  2920                           
  2921                           ;mcc_generated_files/pin_manager.c: 79:     ANSELB = 0x3F;
  2922  0814  303F               	movlw	63
  2923  0815  008D               	movwf	13	;volatile
  2924                           
  2925                           ;mcc_generated_files/pin_manager.c: 80:     ANSELE = 0x07;
  2926  0816  3007               	movlw	7
  2927  0817  0090               	movwf	16	;volatile
  2928                           
  2929                           ;mcc_generated_files/pin_manager.c: 81:     ANSELA = 0x3F;
  2930  0818  303F               	movlw	63
  2931  0819  008C               	movwf	12	;volatile
  2932                           
  2933                           ;mcc_generated_files/pin_manager.c: 86:     WPUE = 0x00;
  2934  081A  0024               	movlb	4	; select bank4
  2935  081B  0190               	clrf	16	;volatile
  2936                           
  2937                           ;mcc_generated_files/pin_manager.c: 87:     WPUB = 0x00;
  2938  081C  018D               	clrf	13	;volatile
  2939                           
  2940                           ;mcc_generated_files/pin_manager.c: 88:     OPTION_REGbits.nWPUEN = 1;
  2941  081D  0021               	movlb	1	; select bank1
  2942  081E  1795               	bsf	21,7	;volatile
  2943                           
  2944                           ;mcc_generated_files/pin_manager.c: 94:     APFCON = 0x00;
  2945  081F  0022               	movlb	2	; select bank2
  2946  0820  019D               	clrf	29	;volatile
  2947  0821  0008               	return
  2948  0822                     __end_of_PIN_MANAGER_Initialize:	
  2949                           
  2950                           	psect	text5
  2951  1E1E                     __ptext5:	
  2952 ;; *************** function _OSCILLATOR_Initialize *****************
  2953 ;; Defined at:
  2954 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;		None
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  1    wreg      void 
  2961 ;; Registers used:
  2962 ;;		wreg, status,2
  2963 ;; Tracked objects:
  2964 ;;		On entry : B1F/2
  2965 ;;		On exit  : B1F/2
  2966 ;;		Unchanged: B00/0
  2967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2968 ;;      Params:         0       0       0       0       0       0       0       0
  2969 ;;      Locals:         0       0       0       0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0
  2971 ;;      Totals:         0       0       0       0       0       0       0       0
  2972 ;;Total ram usage:        0 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_SYSTEM_Initialize
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _OSCILLATOR_Initialize
  2983  1E1E                     _OSCILLATOR_Initialize:	
  2984                           
  2985                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x68;
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2989  1E1E  3068               	movlw	104
  2990  1E1F  0021               	movlb	1	; select bank1
  2991  1E20  0099               	movwf	25	;volatile
  2992                           
  2993                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2994  1E21  0198               	clrf	24	;volatile
  2995                           
  2996                           ;mcc_generated_files/mcc.c: 66:     BORCON = 0x00;
  2997  1E22  0022               	movlb	2	; select bank2
  2998  1E23  0196               	clrf	22	;volatile
  2999  1E24  0008               	return
  3000  1E25                     __end_of_OSCILLATOR_Initialize:	
  3001                           
  3002                           	psect	text6
  3003  1E35                     __ptext6:	
  3004 ;; *************** function _ADC_Initialize *****************
  3005 ;; Defined at:
  3006 ;;		line 67 in file "mcc_generated_files/adc.c"
  3007 ;; Parameters:    Size  Location     Type
  3008 ;;		None
  3009 ;; Auto vars:     Size  Location     Type
  3010 ;;		None
  3011 ;; Return value:  Size  Location     Type
  3012 ;;                  1    wreg      void 
  3013 ;; Registers used:
  3014 ;;		wreg, status,2
  3015 ;; Tracked objects:
  3016 ;;		On entry : 1E/0
  3017 ;;		On exit  : 1F/1
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3020 ;;      Params:         0       0       0       0       0       0       0       0
  3021 ;;      Locals:         0       0       0       0       0       0       0       0
  3022 ;;      Temps:          0       0       0       0       0       0       0       0
  3023 ;;      Totals:         0       0       0       0       0       0       0       0
  3024 ;;Total ram usage:        0 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_SYSTEM_Initialize
  3030 ;;		_main
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _ADC_Initialize
  3036  1E35                     _ADC_Initialize:	
  3037                           
  3038                           ;mcc_generated_files/adc.c: 72:     ADCON0 = 0x01;
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3042  1E35  3001               	movlw	1
  3043  1E36  0021               	movlb	1	; select bank1
  3044  1E37  009D               	movwf	29	;volatile
  3045                           
  3046                           ;mcc_generated_files/adc.c: 75:     ADCON1 = 0x80;
  3047  1E38  3080               	movlw	128
  3048  1E39  009E               	movwf	30	;volatile
  3049                           
  3050                           ;mcc_generated_files/adc.c: 78:     ADRESL = 0x00;
  3051  1E3A  019B               	clrf	27	;volatile
  3052                           
  3053                           ;mcc_generated_files/adc.c: 81:     ADRESH = 0x00;
  3054  1E3B  019C               	clrf	28	;volatile
  3055  1E3C  0008               	return
  3056  1E3D                     __end_of_ADC_Initialize:	
  3057                           
  3058                           	psect	text7
  3059  1093                     __ptext7:	
  3060 ;; *************** function _Lcd_Init *****************
  3061 ;; Defined at:
  3062 ;;		line 74 in file "./lcd.h"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;		None
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0, pclath, cstack
  3071 ;; Tracked objects:
  3072 ;;		On entry : 1F/0
  3073 ;;		On exit  : 1F/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3076 ;;      Params:         0       0       0       0       0       0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0
  3078 ;;      Temps:          1       0       0       0       0       0       0       0
  3079 ;;      Totals:         1       0       0       0       0       0       0       0
  3080 ;;Total ram usage:        1 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    2
  3083 ;; This function calls:
  3084 ;;		_Lcd_Cmd
  3085 ;;		_Lcd_Port
  3086 ;; This function is called by:
  3087 ;;		_main
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           
  3092                           ;psect for function _Lcd_Init
  3093  1093                     _Lcd_Init:	
  3094                           
  3095                           ;./lcd.h: 75:   Lcd_Port(0x00);
  3096                           
  3097                           ;incstack = 0
  3098                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3099  1093  3000               	movlw	0
  3100  1094  319E  269B  3190   	fcall	_Lcd_Port
  3101                           
  3102                           ;./lcd.h: 76:    _delay((unsigned long)((20)*(4000000/4000.0)));
  3103  1097  301A               	movlw	26
  3104  1098  00F3               	movwf	??_Lcd_Init
  3105  1099  30F8               	movlw	248
  3106  109A                     u5927:	
  3107  109A  0B89               	decfsz	9,f
  3108  109B  289A               	goto	u5927
  3109  109C  0BF3               	decfsz	??_Lcd_Init,f
  3110  109D  289A               	goto	u5927
  3111  109E  3200               	nop2
  3112                           
  3113                           ;./lcd.h: 77:   Lcd_Cmd(0x03);
  3114  109F  3003               	movlw	3
  3115  10A0  319E  2673  3190   	fcall	_Lcd_Cmd
  3116                           
  3117                           ;./lcd.h: 78:  _delay((unsigned long)((5)*(4000000/4000.0)));
  3118  10A3  3007               	movlw	7
  3119  10A4  00F3               	movwf	??_Lcd_Init
  3120  10A5  307D               	movlw	125
  3121  10A6                     u5937:	
  3122  10A6  0B89               	decfsz	9,f
  3123  10A7  28A6               	goto	u5937
  3124  10A8  0BF3               	decfsz	??_Lcd_Init,f
  3125  10A9  28A6               	goto	u5937
  3126  10AA  0000               	nop
  3127                           
  3128                           ;./lcd.h: 79:   Lcd_Cmd(0x03);
  3129  10AB  3003               	movlw	3
  3130  10AC  319E  2673  3190   	fcall	_Lcd_Cmd
  3131                           
  3132                           ;./lcd.h: 80:  _delay((unsigned long)((11)*(4000000/4000.0)));
  3133  10AF  300F               	movlw	15
  3134  10B0  00F3               	movwf	??_Lcd_Init
  3135  10B1  3048               	movlw	72
  3136  10B2                     u5947:	
  3137  10B2  0B89               	decfsz	9,f
  3138  10B3  28B2               	goto	u5947
  3139  10B4  0BF3               	decfsz	??_Lcd_Init,f
  3140  10B5  28B2               	goto	u5947
  3141                           
  3142                           ;./lcd.h: 81:   Lcd_Cmd(0x03);
  3143  10B6  3003               	movlw	3
  3144  10B7  319E  2673  3190   	fcall	_Lcd_Cmd
  3145                           
  3146                           ;./lcd.h: 83:   Lcd_Cmd(0x02);
  3147  10BA  3002               	movlw	2
  3148  10BB  319E  2673  3190   	fcall	_Lcd_Cmd
  3149                           
  3150                           ;./lcd.h: 84:   Lcd_Cmd(0x02);
  3151  10BE  3002               	movlw	2
  3152  10BF  319E  2673  3190   	fcall	_Lcd_Cmd
  3153                           
  3154                           ;./lcd.h: 85:   Lcd_Cmd(0x08);
  3155  10C2  3008               	movlw	8
  3156  10C3  319E  2673  3190   	fcall	_Lcd_Cmd
  3157                           
  3158                           ;./lcd.h: 86:   Lcd_Cmd(0x00);
  3159  10C6  3000               	movlw	0
  3160  10C7  319E  2673  3190   	fcall	_Lcd_Cmd
  3161                           
  3162                           ;./lcd.h: 87:   Lcd_Cmd(0x0C);
  3163  10CA  300C               	movlw	12
  3164  10CB  319E  2673  3190   	fcall	_Lcd_Cmd
  3165                           
  3166                           ;./lcd.h: 88:   Lcd_Cmd(0x00);
  3167  10CE  3000               	movlw	0
  3168  10CF  319E  2673  3190   	fcall	_Lcd_Cmd
  3169                           
  3170                           ;./lcd.h: 89:   Lcd_Cmd(0x06);
  3171  10D2  3006               	movlw	6
  3172  10D3  319E  2673         	fcall	_Lcd_Cmd
  3173  10D5  0008               	return
  3174  10D6                     __end_of_Lcd_Init:	
  3175                           
  3176                           	psect	text8
  3177  1E2D                     __ptext8:	
  3178 ;; *************** function _Lcd_Clear *****************
  3179 ;; Defined at:
  3180 ;;		line 35 in file "./lcd.h"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  2  191[None  ] int 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 1F/0
  3191 ;;		On exit  : 1F/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3194 ;;      Params:         0       0       0       0       0       0       0       0
  3195 ;;      Locals:         0       0       0       0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0       0       0       0
  3197 ;;      Totals:         0       0       0       0       0       0       0       0
  3198 ;;Total ram usage:        0 bytes
  3199 ;; Hardware stack levels used:    1
  3200 ;; Hardware stack levels required when called:    2
  3201 ;; This function calls:
  3202 ;;		_Lcd_Cmd
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _Lcd_Clear
  3210  1E2D                     _Lcd_Clear:	
  3211                           
  3212                           ;./lcd.h: 36:  Lcd_Cmd(0);
  3213                           
  3214                           ;incstack = 0
  3215                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3216  1E2D  3000               	movlw	0
  3217  1E2E  319E  2673  319E   	fcall	_Lcd_Cmd
  3218                           
  3219                           ;./lcd.h: 37:  Lcd_Cmd(1);
  3220  1E31  3001               	movlw	1
  3221  1E32  319E  2673         	fcall	_Lcd_Cmd
  3222  1E34  0008               	return
  3223  1E35                     __end_of_Lcd_Clear:	
  3224                           
  3225                           	psect	text9
  3226  1E4F                     __ptext9:	
  3227 ;; *************** function _Iniciar_UART *****************
  3228 ;; Defined at:
  3229 ;;		line 90 in file "main.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;		None
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  1    wreg      void 
  3236 ;; Registers used:
  3237 ;;		wreg
  3238 ;; Tracked objects:
  3239 ;;		On entry : 1F/1
  3240 ;;		On exit  : 1F/3
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3243 ;;      Params:         0       0       0       0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0       0
  3245 ;;      Temps:          0       0       0       0       0       0       0       0
  3246 ;;      Totals:         0       0       0       0       0       0       0       0
  3247 ;;Total ram usage:        0 bytes
  3248 ;; Hardware stack levels used:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function _Iniciar_UART
  3258  1E4F                     _Iniciar_UART:	
  3259                           
  3260                           ;main.c: 92:     TRISCbits.TRISC6=0;
  3261                           
  3262                           ;incstack = 0
  3263                           ; Regs used in _Iniciar_UART: [wreg]
  3264  1E4F  130E               	bcf	14,6	;volatile
  3265                           
  3266                           ;main.c: 93:     TXSTAbits.SYNC=0;
  3267  1E50  0023               	movlb	3	; select bank3
  3268  1E51  121E               	bcf	30,4	;volatile
  3269                           
  3270                           ;main.c: 94:     TXSTAbits.TX9=0;
  3271  1E52  131E               	bcf	30,6	;volatile
  3272                           
  3273                           ;main.c: 95:     TXSTAbits.BRGH=1;
  3274  1E53  151E               	bsf	30,2	;volatile
  3275                           
  3276                           ;main.c: 96:     BRG16=1;
  3277  1E54  159F               	bsf	31,3	;volatile
  3278                           
  3279                           ;main.c: 97:     SPBRG=8;
  3280  1E55  3008               	movlw	8
  3281  1E56  009B               	movwf	27	;volatile
  3282                           
  3283                           ;main.c: 98:     RCSTAbits.SPEN=1;
  3284  1E57  179D               	bsf	29,7	;volatile
  3285                           
  3286                           ;main.c: 99:     TXSTAbits.TXEN=1;
  3287  1E58  169E               	bsf	30,5	;volatile
  3288  1E59  0008               	return
  3289  1E5A                     __end_of_Iniciar_UART:	
  3290                           
  3291                           	psect	text10
  3292  1003                     __ptext10:	
  3293 ;; *************** function _Iniciar_Puertos *****************
  3294 ;; Defined at:
  3295 ;;		line 75 in file "main.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2
  3304 ;; Tracked objects:
  3305 ;;		On entry : 1F/1
  3306 ;;		On exit  : 1F/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3309 ;;      Params:         0       0       0       0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used:    1
  3315 ;; This function calls:
  3316 ;;		Nothing
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322                           
  3323                           ;psect for function _Iniciar_Puertos
  3324  1003                     _Iniciar_Puertos:	
  3325                           
  3326                           ;main.c: 76:     TRISD=0x00;
  3327                           
  3328                           ;incstack = 0
  3329                           ; Regs used in _Iniciar_Puertos: [wreg+status,2]
  3330  1003  018F               	clrf	15	;volatile
  3331                           
  3332                           ;main.c: 77:     TRISC=0x01;
  3333  1004  3001               	movlw	1
  3334  1005  008E               	movwf	14	;volatile
  3335                           
  3336                           ;main.c: 78:     TRISA=0xFF;
  3337  1006  30FF               	movlw	255
  3338  1007  008C               	movwf	12	;volatile
  3339                           
  3340                           ;main.c: 79:     ANSELD=0;
  3341  1008  0023               	movlb	3	; select bank3
  3342  1009  018F               	clrf	15	;volatile
  3343                           
  3344                           ;main.c: 80:     ANSELA = 0x3F;
  3345  100A  303F               	movlw	63
  3346  100B  008C               	movwf	12	;volatile
  3347                           
  3348                           ;main.c: 81:     PORTC=0;
  3349  100C  0020               	movlb	0	; select bank0
  3350  100D  018E               	clrf	14	;volatile
  3351                           
  3352                           ;main.c: 82:     PORTD=0;
  3353  100E  018F               	clrf	15	;volatile
  3354  100F  0008               	return
  3355  1010                     __end_of_Iniciar_Puertos:	
  3356                           
  3357                           	psect	text11
  3358  171A                     __ptext11:	
  3359 ;; *************** function _Imprimir_LCD *****************
  3360 ;; Defined at:
  3361 ;;		line 113 in file "main.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;		None
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 1C/3
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3375 ;;      Params:         0       0       0       0       0       0       0       0
  3376 ;;      Locals:         0       0       0       0       0       0       0       0
  3377 ;;      Temps:          0       0       0       1       0       0       0       0
  3378 ;;      Totals:         0       0       0       1       0       0       0       0
  3379 ;;Total ram usage:        1 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    9
  3382 ;; This function calls:
  3383 ;;		_Lcd_Set_Cursor
  3384 ;;		_Lcd_Write_String
  3385 ;;		_Lcd_float
  3386 ;;		___xxtofl
  3387 ;; This function is called by:
  3388 ;;		_main
  3389 ;; This function uses a non-reentrant model
  3390 ;;
  3391                           
  3392                           
  3393                           ;psect for function _Imprimir_LCD
  3394  171A                     _Imprimir_LCD:	
  3395                           
  3396                           ;main.c: 114:     Lcd_Set_Cursor(1,1);
  3397                           
  3398                           ;incstack = 0
  3399                           ; Regs used in _Imprimir_LCD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3400  171A  01F3               	clrf	Lcd_Set_Cursor@b
  3401  171B  0AF3               	incf	Lcd_Set_Cursor@b,f
  3402  171C  3001               	movlw	1
  3403  171D  3194  2494  3197   	fcall	_Lcd_Set_Cursor
  3404                           
  3405                           ;main.c: 115:     Lcd_Write_String("Switch:");
  3406  1720  3000               	movlw	low (STR_2| (0+32768))
  3407  1721  00F5               	movwf	Lcd_Write_String@a
  3408  1722  3098               	movlw	high (STR_2| (0+32768))
  3409  1723  00F6               	movwf	Lcd_Write_String@a+1
  3410  1724  319F  270E  3197   	fcall	_Lcd_Write_String
  3411                           
  3412                           ;main.c: 116:     Lcd_Set_Cursor(2,1);
  3413  1727  01F3               	clrf	Lcd_Set_Cursor@b
  3414  1728  0AF3               	incf	Lcd_Set_Cursor@b,f
  3415  1729  3002               	movlw	2
  3416  172A  3194  2494  3197   	fcall	_Lcd_Set_Cursor
  3417                           
  3418                           ;main.c: 117:     Lcd_Write_String("LM:");
  3419  172D  3039               	movlw	low (STR_3| (0+32768))
  3420  172E  00F5               	movwf	Lcd_Write_String@a
  3421  172F  3098               	movlw	high (STR_3| (0+32768))
  3422  1730  00F6               	movwf	Lcd_Write_String@a+1
  3423  1731  319F  270E  3197   	fcall	_Lcd_Write_String
  3424                           
  3425                           ;main.c: 118:     Lcd_float(LM335);
  3426  1734  0022               	movlb	2	; select bank2
  3427  1735  082F               	movf	(_LM335+3)^(0+256),w
  3428  1736  0021               	movlb	1	; select bank1
  3429  1737  00EF               	movwf	(Lcd_float@valorf+3)^(0+128)
  3430  1738  0022               	movlb	2	; select bank2
  3431  1739  082E               	movf	(_LM335+2)^(0+256),w
  3432  173A  0021               	movlb	1	; select bank1
  3433  173B  00EE               	movwf	(Lcd_float@valorf+2)^(0+128)
  3434  173C  0022               	movlb	2	; select bank2
  3435  173D  082D               	movf	(_LM335+1)^(0+256),w
  3436  173E  0021               	movlb	1	; select bank1
  3437  173F  00ED               	movwf	(Lcd_float@valorf+1)^(0+128)
  3438  1740  0022               	movlb	2	; select bank2
  3439  1741  082C               	movf	_LM335^(0+256),w
  3440  1742  0021               	movlb	1	; select bank1
  3441  1743  00EC               	movwf	Lcd_float@valorf^(0+128)
  3442  1744  3180  2004  3197   	fcall	_Lcd_float
  3443                           
  3444                           ;main.c: 119:     Lcd_Set_Cursor(2,8);
  3445  1747  3008               	movlw	8
  3446  1748  0022               	movlb	2	; select bank2
  3447  1749  00D3               	movwf	??_Imprimir_LCD^(0+256)
  3448  174A  0853               	movf	??_Imprimir_LCD^(0+256),w
  3449  174B  00F3               	movwf	Lcd_Set_Cursor@b
  3450  174C  3002               	movlw	2
  3451  174D  3194  2494  3197   	fcall	_Lcd_Set_Cursor
  3452                           
  3453                           ;main.c: 120:     Lcd_Write_String("PT:");
  3454  1750  303D               	movlw	low (STR_4| (0+32768))
  3455  1751  00F5               	movwf	Lcd_Write_String@a
  3456  1752  3098               	movlw	high (STR_4| (0+32768))
  3457  1753  00F6               	movwf	Lcd_Write_String@a+1
  3458  1754  319F  270E  3197   	fcall	_Lcd_Write_String
  3459                           
  3460                           ;main.c: 121:     Lcd_float(PT100);
  3461  1757  0022               	movlb	2	; select bank2
  3462  1758  082B               	movf	(_PT100+3)^(0+256),w
  3463  1759  0021               	movlb	1	; select bank1
  3464  175A  00EF               	movwf	(Lcd_float@valorf+3)^(0+128)
  3465  175B  0022               	movlb	2	; select bank2
  3466  175C  082A               	movf	(_PT100+2)^(0+256),w
  3467  175D  0021               	movlb	1	; select bank1
  3468  175E  00EE               	movwf	(Lcd_float@valorf+2)^(0+128)
  3469  175F  0022               	movlb	2	; select bank2
  3470  1760  0829               	movf	(_PT100+1)^(0+256),w
  3471  1761  0021               	movlb	1	; select bank1
  3472  1762  00ED               	movwf	(Lcd_float@valorf+1)^(0+128)
  3473  1763  0022               	movlb	2	; select bank2
  3474  1764  0828               	movf	_PT100^(0+256),w
  3475  1765  0021               	movlb	1	; select bank1
  3476  1766  00EC               	movwf	Lcd_float@valorf^(0+128)
  3477  1767  3180  2004  3197   	fcall	_Lcd_float
  3478                           
  3479                           ;main.c: 122:     Lcd_Set_Cursor(3,1);
  3480  176A  01F3               	clrf	Lcd_Set_Cursor@b
  3481  176B  0AF3               	incf	Lcd_Set_Cursor@b,f
  3482  176C  3003               	movlw	3
  3483  176D  3194  2494  3197   	fcall	_Lcd_Set_Cursor
  3484                           
  3485                           ;main.c: 123:     Lcd_Write_String("INF1:");
  3486  1770  3008               	movlw	low (STR_5| (0+32768))
  3487  1771  00F5               	movwf	Lcd_Write_String@a
  3488  1772  3098               	movlw	high (STR_5| (0+32768))
  3489  1773  00F6               	movwf	Lcd_Write_String@a+1
  3490  1774  319F  270E  3197   	fcall	_Lcd_Write_String
  3491                           
  3492                           ;main.c: 124:     Lcd_float(AlarmaS1[0]);
  3493  1777  0022               	movlb	2	; select bank2
  3494  1778  0834               	movf	_AlarmaS1^(0+256),w
  3495  1779  00F0               	movwf	___xxtofl@val
  3496  177A  0835               	movf	(_AlarmaS1+1)^(0+256),w
  3497  177B  00F1               	movwf	___xxtofl@val+1
  3498  177C  01F2               	clrf	___xxtofl@val+2
  3499  177D  01F3               	clrf	___xxtofl@val+3
  3500  177E  3000               	movlw	0
  3501  177F  3195  2514  3197   	fcall	___xxtofl
  3502  1782  0873               	movf	?___xxtofl+3,w
  3503  1783  0021               	movlb	1	; select bank1
  3504  1784  00EF               	movwf	(Lcd_float@valorf+3)^(0+128)
  3505  1785  0872               	movf	?___xxtofl+2,w
  3506  1786  00EE               	movwf	(Lcd_float@valorf+2)^(0+128)
  3507  1787  0871               	movf	?___xxtofl+1,w
  3508  1788  00ED               	movwf	(Lcd_float@valorf+1)^(0+128)
  3509  1789  0870               	movf	?___xxtofl,w
  3510  178A  00EC               	movwf	Lcd_float@valorf^(0+128)
  3511  178B  3180  2004  3197   	fcall	_Lcd_float
  3512                           
  3513                           ;main.c: 125:     Lcd_Set_Cursor(3,9);
  3514  178E  3009               	movlw	9
  3515  178F  0022               	movlb	2	; select bank2
  3516  1790  00D3               	movwf	??_Imprimir_LCD^(0+256)
  3517  1791  0853               	movf	??_Imprimir_LCD^(0+256),w
  3518  1792  00F3               	movwf	Lcd_Set_Cursor@b
  3519  1793  3003               	movlw	3
  3520  1794  3194  2494  3197   	fcall	_Lcd_Set_Cursor
  3521                           
  3522                           ;main.c: 126:     Lcd_Write_String("SUP1:");
  3523  1797  300E               	movlw	low (STR_6| (0+32768))
  3524  1798  00F5               	movwf	Lcd_Write_String@a
  3525  1799  3098               	movlw	high (STR_6| (0+32768))
  3526  179A  00F6               	movwf	Lcd_Write_String@a+1
  3527  179B  319F  270E  3197   	fcall	_Lcd_Write_String
  3528                           
  3529                           ;main.c: 127:     Lcd_float(AlarmaS1[1]);
  3530  179E  0022               	movlb	2	; select bank2
  3531  179F  0836               	movf	(_AlarmaS1^(0+256)+2),w
  3532  17A0  00F0               	movwf	___xxtofl@val
  3533  17A1  0837               	movf	((_AlarmaS1+1)^(0+256)+2),w
  3534  17A2  00F1               	movwf	___xxtofl@val+1
  3535  17A3  01F2               	clrf	___xxtofl@val+2
  3536  17A4  01F3               	clrf	___xxtofl@val+3
  3537  17A5  3000               	movlw	0
  3538  17A6  3195  2514  3197   	fcall	___xxtofl
  3539  17A9  0873               	movf	?___xxtofl+3,w
  3540  17AA  0021               	movlb	1	; select bank1
  3541  17AB  00EF               	movwf	(Lcd_float@valorf+3)^(0+128)
  3542  17AC  0872               	movf	?___xxtofl+2,w
  3543  17AD  00EE               	movwf	(Lcd_float@valorf+2)^(0+128)
  3544  17AE  0871               	movf	?___xxtofl+1,w
  3545  17AF  00ED               	movwf	(Lcd_float@valorf+1)^(0+128)
  3546  17B0  0870               	movf	?___xxtofl,w
  3547  17B1  00EC               	movwf	Lcd_float@valorf^(0+128)
  3548  17B2  3180  2004  3197   	fcall	_Lcd_float
  3549                           
  3550                           ;main.c: 128:     Lcd_Set_Cursor(4,1);
  3551  17B5  01F3               	clrf	Lcd_Set_Cursor@b
  3552  17B6  0AF3               	incf	Lcd_Set_Cursor@b,f
  3553  17B7  3004               	movlw	4
  3554  17B8  3194  2494  3197   	fcall	_Lcd_Set_Cursor
  3555                           
  3556                           ;main.c: 129:     Lcd_Write_String("INF2:");
  3557  17BB  3014               	movlw	low (STR_7| (0+32768))
  3558  17BC  00F5               	movwf	Lcd_Write_String@a
  3559  17BD  3098               	movlw	high (STR_7| (0+32768))
  3560  17BE  00F6               	movwf	Lcd_Write_String@a+1
  3561  17BF  319F  270E  3197   	fcall	_Lcd_Write_String
  3562                           
  3563                           ;main.c: 130:     Lcd_float(AlarmaS2[0]);
  3564  17C2  0022               	movlb	2	; select bank2
  3565  17C3  0830               	movf	_AlarmaS2^(0+256),w
  3566  17C4  00F0               	movwf	___xxtofl@val
  3567  17C5  0831               	movf	(_AlarmaS2+1)^(0+256),w
  3568  17C6  00F1               	movwf	___xxtofl@val+1
  3569  17C7  01F2               	clrf	___xxtofl@val+2
  3570  17C8  01F3               	clrf	___xxtofl@val+3
  3571  17C9  3000               	movlw	0
  3572  17CA  3195  2514  3197   	fcall	___xxtofl
  3573  17CD  0873               	movf	?___xxtofl+3,w
  3574  17CE  0021               	movlb	1	; select bank1
  3575  17CF  00EF               	movwf	(Lcd_float@valorf+3)^(0+128)
  3576  17D0  0872               	movf	?___xxtofl+2,w
  3577  17D1  00EE               	movwf	(Lcd_float@valorf+2)^(0+128)
  3578  17D2  0871               	movf	?___xxtofl+1,w
  3579  17D3  00ED               	movwf	(Lcd_float@valorf+1)^(0+128)
  3580  17D4  0870               	movf	?___xxtofl,w
  3581  17D5  00EC               	movwf	Lcd_float@valorf^(0+128)
  3582  17D6  3180  2004  3197   	fcall	_Lcd_float
  3583                           
  3584                           ;main.c: 131:     Lcd_Set_Cursor(4,9);
  3585  17D9  3009               	movlw	9
  3586  17DA  0022               	movlb	2	; select bank2
  3587  17DB  00D3               	movwf	??_Imprimir_LCD^(0+256)
  3588  17DC  0853               	movf	??_Imprimir_LCD^(0+256),w
  3589  17DD  00F3               	movwf	Lcd_Set_Cursor@b
  3590  17DE  3004               	movlw	4
  3591  17DF  3194  2494  3197   	fcall	_Lcd_Set_Cursor
  3592                           
  3593                           ;main.c: 132:     Lcd_Write_String("SUP2:");
  3594  17E2  301A               	movlw	low (STR_8| (0+32768))
  3595  17E3  00F5               	movwf	Lcd_Write_String@a
  3596  17E4  3098               	movlw	high (STR_8| (0+32768))
  3597  17E5  00F6               	movwf	Lcd_Write_String@a+1
  3598  17E6  319F  270E  3197   	fcall	_Lcd_Write_String
  3599                           
  3600                           ;main.c: 133:     Lcd_float(AlarmaS2[1]);
  3601  17E9  0022               	movlb	2	; select bank2
  3602  17EA  0832               	movf	(_AlarmaS2^(0+256)+2),w
  3603  17EB  00F0               	movwf	___xxtofl@val
  3604  17EC  0833               	movf	((_AlarmaS2+1)^(0+256)+2),w
  3605  17ED  00F1               	movwf	___xxtofl@val+1
  3606  17EE  01F2               	clrf	___xxtofl@val+2
  3607  17EF  01F3               	clrf	___xxtofl@val+3
  3608  17F0  3000               	movlw	0
  3609  17F1  3195  2514  3197   	fcall	___xxtofl
  3610  17F4  0873               	movf	?___xxtofl+3,w
  3611  17F5  0021               	movlb	1	; select bank1
  3612  17F6  00EF               	movwf	(Lcd_float@valorf+3)^(0+128)
  3613  17F7  0872               	movf	?___xxtofl+2,w
  3614  17F8  00EE               	movwf	(Lcd_float@valorf+2)^(0+128)
  3615  17F9  0871               	movf	?___xxtofl+1,w
  3616  17FA  00ED               	movwf	(Lcd_float@valorf+1)^(0+128)
  3617  17FB  0870               	movf	?___xxtofl,w
  3618  17FC  00EC               	movwf	Lcd_float@valorf^(0+128)
  3619  17FD  3180  2004         	fcall	_Lcd_float
  3620  17FF  0008               	return
  3621  1800                     __end_of_Imprimir_LCD:	
  3622                           
  3623                           	psect	text12
  3624  1514                     __ptext12:	
  3625 ;; *************** function ___xxtofl *****************
  3626 ;; Defined at:
  3627 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
  3628 ;; Parameters:    Size  Location     Type
  3629 ;;  sign            1    wreg     unsigned char 
  3630 ;;  val             4    0[COMMON] long 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  sign            1    8[COMMON] unsigned char 
  3633 ;;  arg             4   10[COMMON] unsigned long 
  3634 ;;  exp             1    9[COMMON] unsigned char 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  4    0[COMMON] unsigned char 
  3637 ;; Registers used:
  3638 ;;		wreg, status,2, status,0
  3639 ;; Tracked objects:
  3640 ;;		On entry : 1F/2
  3641 ;;		On exit  : 1F/2
  3642 ;;		Unchanged: 1F/0
  3643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3644 ;;      Params:         4       0       0       0       0       0       0       0
  3645 ;;      Locals:         6       0       0       0       0       0       0       0
  3646 ;;      Temps:          4       0       0       0       0       0       0       0
  3647 ;;      Totals:        14       0       0       0       0       0       0       0
  3648 ;;Total ram usage:       14 bytes
  3649 ;; Hardware stack levels used:    1
  3650 ;; This function calls:
  3651 ;;		Nothing
  3652 ;; This function is called by:
  3653 ;;		_Imprimir_LCD
  3654 ;;		_main
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           
  3659                           ;psect for function ___xxtofl
  3660  1514                     ___xxtofl:	
  3661                           
  3662                           ;incstack = 0
  3663                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  3664                           ;___xxtofl@sign stored from wreg
  3665  1514  00F8               	movwf	___xxtofl@sign
  3666  1515  0878               	movf	___xxtofl@sign,w
  3667  1516  1D03               	btfss	3,2
  3668  1517  1FF3               	btfss	___xxtofl@val+3,7
  3669  1518  2D29               	goto	l4313
  3670  1519  0970               	comf	___xxtofl@val,w
  3671  151A  00FA               	movwf	___xxtofl@arg
  3672  151B  0971               	comf	___xxtofl@val+1,w
  3673  151C  00FB               	movwf	___xxtofl@arg+1
  3674  151D  0972               	comf	___xxtofl@val+2,w
  3675  151E  00FC               	movwf	___xxtofl@arg+2
  3676  151F  0973               	comf	___xxtofl@val+3,w
  3677  1520  00FD               	movwf	___xxtofl@arg+3
  3678  1521  0AFA               	incf	___xxtofl@arg,f
  3679  1522  1903               	skipnz
  3680  1523  0AFB               	incf	___xxtofl@arg+1,f
  3681  1524  1903               	skipnz
  3682  1525  0AFC               	incf	___xxtofl@arg+2,f
  3683  1526  1903               	skipnz
  3684  1527  0AFD               	incf	___xxtofl@arg+3,f
  3685  1528  2D31               	goto	l1023
  3686  1529                     l4313:	
  3687  1529  0873               	movf	___xxtofl@val+3,w
  3688  152A  00FD               	movwf	___xxtofl@arg+3
  3689  152B  0872               	movf	___xxtofl@val+2,w
  3690  152C  00FC               	movwf	___xxtofl@arg+2
  3691  152D  0871               	movf	___xxtofl@val+1,w
  3692  152E  00FB               	movwf	___xxtofl@arg+1
  3693  152F  0870               	movf	___xxtofl@val,w
  3694  1530  00FA               	movwf	___xxtofl@arg
  3695  1531                     l1023:	
  3696  1531  0873               	movf	___xxtofl@val+3,w
  3697  1532  0472               	iorwf	___xxtofl@val+2,w
  3698  1533  0471               	iorwf	___xxtofl@val+1,w
  3699  1534  0470               	iorwf	___xxtofl@val,w
  3700  1535  1D03               	skipz
  3701  1536  2D40               	goto	l4319
  3702  1537  3000               	movlw	0
  3703  1538  00F3               	movwf	?___xxtofl+3
  3704  1539  3000               	movlw	0
  3705  153A  00F2               	movwf	?___xxtofl+2
  3706  153B  3000               	movlw	0
  3707  153C  00F1               	movwf	?___xxtofl+1
  3708  153D  3000               	movlw	0
  3709  153E  00F0               	movwf	?___xxtofl
  3710  153F  0008               	return
  3711  1540                     l4319:	
  3712  1540  3096               	movlw	150
  3713  1541  00F4               	movwf	??___xxtofl
  3714  1542  0874               	movf	??___xxtofl,w
  3715  1543  00F9               	movwf	___xxtofl@exp
  3716  1544                     l4323:	
  3717  1544  30FE               	movlw	254
  3718  1545  057D               	andwf	___xxtofl@arg+3,w
  3719  1546  1903               	btfsc	3,2
  3720  1547  2D67               	goto	l1029
  3721  1548  3001               	movlw	1
  3722  1549  00F4               	movwf	??___xxtofl
  3723  154A  0874               	movf	??___xxtofl,w
  3724  154B  07F9               	addwf	___xxtofl@exp,f
  3725  154C  3001               	movlw	1
  3726  154D                     u5745:	
  3727  154D  36FD               	lsrf	___xxtofl@arg+3,f
  3728  154E  0CFC               	rrf	___xxtofl@arg+2,f
  3729  154F  0CFB               	rrf	___xxtofl@arg+1,f
  3730  1550  0CFA               	rrf	___xxtofl@arg,f
  3731  1551  0B89               	decfsz	9,f
  3732  1552  2D4D               	goto	u5745
  3733  1553  2D44               	goto	l4323
  3734  1554                     l4325:	
  3735  1554  3001               	movlw	1
  3736  1555  00F4               	movwf	??___xxtofl
  3737  1556  0874               	movf	??___xxtofl,w
  3738  1557  07F9               	addwf	___xxtofl@exp,f
  3739  1558  3001               	movlw	1
  3740  1559  07FA               	addwf	___xxtofl@arg,f
  3741  155A  3000               	movlw	0
  3742  155B  3DFB               	addwfc	___xxtofl@arg+1,f
  3743  155C  3000               	movlw	0
  3744  155D  3DFC               	addwfc	___xxtofl@arg+2,f
  3745  155E  3000               	movlw	0
  3746  155F  3DFD               	addwfc	___xxtofl@arg+3,f
  3747  1560  3001               	movlw	1
  3748  1561                     u5765:	
  3749  1561  36FD               	lsrf	___xxtofl@arg+3,f
  3750  1562  0CFC               	rrf	___xxtofl@arg+2,f
  3751  1563  0CFB               	rrf	___xxtofl@arg+1,f
  3752  1564  0CFA               	rrf	___xxtofl@arg,f
  3753  1565  0B89               	decfsz	9,f
  3754  1566  2D61               	goto	u5765
  3755  1567                     l1029:	
  3756  1567  30FF               	movlw	255
  3757  1568  057D               	andwf	___xxtofl@arg+3,w
  3758  1569  1903               	btfsc	3,2
  3759  156A  2D79               	goto	l4333
  3760  156B  2D54               	goto	l4325
  3761  156C                     l4335:	
  3762  156C  3002               	movlw	2
  3763  156D  0279               	subwf	___xxtofl@exp,w
  3764  156E  1C03               	btfss	3,0
  3765  156F  2D7B               	goto	l1036
  3766  1570  3001               	movlw	1
  3767  1571  02F9               	subwf	___xxtofl@exp,f
  3768  1572  3001               	movlw	1
  3769  1573                     u5785:	
  3770  1573  35FA               	lslf	___xxtofl@arg,f
  3771  1574  0DFB               	rlf	___xxtofl@arg+1,f
  3772  1575  0DFC               	rlf	___xxtofl@arg+2,f
  3773  1576  0DFD               	rlf	___xxtofl@arg+3,f
  3774  1577  0B89               	decfsz	9,f
  3775  1578  2D73               	goto	u5785
  3776  1579                     l4333:	
  3777  1579  1FFC               	btfss	___xxtofl@arg+2,7
  3778  157A  2D6C               	goto	l4335
  3779  157B                     l1036:	
  3780  157B  1879               	btfsc	___xxtofl@exp,0
  3781  157C  2D85               	goto	l1037
  3782  157D  30FF               	movlw	255
  3783  157E  05FA               	andwf	___xxtofl@arg,f
  3784  157F  30FF               	movlw	255
  3785  1580  05FB               	andwf	___xxtofl@arg+1,f
  3786  1581  307F               	movlw	127
  3787  1582  05FC               	andwf	___xxtofl@arg+2,f
  3788  1583  30FF               	movlw	255
  3789  1584  05FD               	andwf	___xxtofl@arg+3,f
  3790  1585                     l1037:	
  3791  1585  1003               	clrc
  3792  1586  0CF9               	rrf	___xxtofl@exp,f
  3793  1587  0879               	movf	___xxtofl@exp,w
  3794  1588  00F4               	movwf	??___xxtofl
  3795  1589  01F5               	clrf	??___xxtofl+1
  3796  158A  01F6               	clrf	??___xxtofl+2
  3797  158B  01F7               	clrf	??___xxtofl+3
  3798  158C  3018               	movlw	24
  3799  158D                     u5825:	
  3800  158D  35F4               	lslf	??___xxtofl,f
  3801  158E  0DF5               	rlf	??___xxtofl+1,f
  3802  158F  0DF6               	rlf	??___xxtofl+2,f
  3803  1590  0DF7               	rlf	??___xxtofl+3,f
  3804  1591  0B89               	decfsz	9,f
  3805  1592  2D8D               	goto	u5825
  3806  1593  0874               	movf	??___xxtofl,w
  3807  1594  04FA               	iorwf	___xxtofl@arg,f
  3808  1595  0875               	movf	??___xxtofl+1,w
  3809  1596  04FB               	iorwf	___xxtofl@arg+1,f
  3810  1597  0876               	movf	??___xxtofl+2,w
  3811  1598  04FC               	iorwf	___xxtofl@arg+2,f
  3812  1599  0877               	movf	??___xxtofl+3,w
  3813  159A  04FD               	iorwf	___xxtofl@arg+3,f
  3814  159B  0878               	movf	___xxtofl@sign,w
  3815  159C  1D03               	btfss	3,2
  3816  159D  1FF3               	btfss	___xxtofl@val+3,7
  3817  159E  2DA0               	goto	l4347
  3818  159F  17FD               	bsf	___xxtofl@arg+3,7
  3819  15A0                     l4347:	
  3820  15A0  087D               	movf	___xxtofl@arg+3,w
  3821  15A1  00F3               	movwf	?___xxtofl+3
  3822  15A2  087C               	movf	___xxtofl@arg+2,w
  3823  15A3  00F2               	movwf	?___xxtofl+2
  3824  15A4  087B               	movf	___xxtofl@arg+1,w
  3825  15A5  00F1               	movwf	?___xxtofl+1
  3826  15A6  087A               	movf	___xxtofl@arg,w
  3827  15A7  00F0               	movwf	?___xxtofl
  3828  15A8  0008               	return
  3829  15A9                     __end_of___xxtofl:	
  3830                           
  3831                           	psect	text13
  3832  0004                     __ptext13:	
  3833 ;; *************** function _Lcd_float *****************
  3834 ;; Defined at:
  3835 ;;		line 84 in file "main.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  valorf          4   76[BANK1 ] float 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  s               2    9[BANK2 ] unsigned char [2]
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  1    wreg      void 
  3842 ;; Registers used:
  3843 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 1F/1
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3849 ;;      Params:         0       0       4       0       0       0       0       0
  3850 ;;      Locals:         0       0       0       2       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0       0       0       0
  3852 ;;      Totals:         0       0       4       2       0       0       0       0
  3853 ;;Total ram usage:        6 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    8
  3856 ;; This function calls:
  3857 ;;		_Lcd_Write_String
  3858 ;;		_sprintf
  3859 ;; This function is called by:
  3860 ;;		_Imprimir_LCD
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864                           
  3865                           ;psect for function _Lcd_float
  3866  0004                     _Lcd_float:	
  3867                           
  3868                           ;main.c: 85:      char s[2];;main.c: 86:      sprintf(s, "%.0f", valorf);
  3869                           
  3870                           ;incstack = 0
  3871                           ; Regs used in _Lcd_float: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3872  0004  3020               	movlw	low (STR_1| (0+32768))
  3873  0005  00E6               	movwf	sprintf@fmt^(0+128)
  3874  0006  3098               	movlw	high (STR_1| (0+32768))
  3875  0007  00E7               	movwf	(sprintf@fmt^(0+128)+1)
  3876  0008  086F               	movf	(Lcd_float@valorf+3)^(0+128),w
  3877  0009  00EB               	movwf	((?_sprintf+3)^(0+128)+2)
  3878  000A  086E               	movf	(Lcd_float@valorf+2)^(0+128),w
  3879  000B  00EA               	movwf	((?_sprintf+2)^(0+128)+2)
  3880  000C  086D               	movf	(Lcd_float@valorf+1)^(0+128),w
  3881  000D  00E9               	movwf	((?_sprintf+1)^(0+128)+2)
  3882  000E  086C               	movf	Lcd_float@valorf^(0+128),w
  3883  000F  00E8               	movwf	(?_sprintf^(0+128)+2)
  3884  0010  3051               	movlw	(low (Lcd_float@s| (0+256)))& (0+255)
  3885  0011  3190  203A  3180   	fcall	_sprintf
  3886                           
  3887                           ;main.c: 87:      Lcd_Write_String(s);
  3888  0014  3051               	movlw	low Lcd_float@s
  3889  0015  00F5               	movwf	Lcd_Write_String@a
  3890  0016  3001               	movlw	high Lcd_float@s
  3891  0017  00F6               	movwf	Lcd_Write_String@a+1
  3892  0018  319F  270E         	fcall	_Lcd_Write_String
  3893  001A  0008               	return
  3894  001B                     __end_of_Lcd_float:	
  3895                           
  3896                           	psect	text14
  3897  103A                     __ptext14:	
  3898 ;; *************** function _sprintf *****************
  3899 ;; Defined at:
  3900 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  s               1    wreg     PTR unsigned char 
  3903 ;;		 -> Lcd_float@s(2), 
  3904 ;;  fmt             2   70[BANK1 ] PTR const unsigned char 
  3905 ;;		 -> STR_1(5), 
  3906 ;; Auto vars:     Size  Location     Type
  3907 ;;  s               1    2[BANK2 ] PTR unsigned char 
  3908 ;;		 -> Lcd_float@s(2), 
  3909 ;;  f               5    4[BANK2 ] struct _IO_FILE
  3910 ;;  ret             2    0        int 
  3911 ;;  ap              1    3[BANK2 ] PTR void [1]
  3912 ;;		 -> ?_sprintf(2), 
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  2   70[BANK1 ] int 
  3915 ;; Registers used:
  3916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 1F/1
  3919 ;;		On exit  : 1F/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3922 ;;      Params:         0       0       6       0       0       0       0       0
  3923 ;;      Locals:         0       0       0       9       0       0       0       0
  3924 ;;      Temps:          0       1       0       0       0       0       0       0
  3925 ;;      Totals:         0       1       6       9       0       0       0       0
  3926 ;;Total ram usage:       16 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    7
  3929 ;; This function calls:
  3930 ;;		_vfprintf
  3931 ;; This function is called by:
  3932 ;;		_Lcd_float
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           
  3936                           
  3937                           ;psect for function _sprintf
  3938  103A                     _sprintf:	
  3939                           
  3940                           ;incstack = 0
  3941                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3942                           ;sprintf@s stored from wreg
  3943  103A  0022               	movlb	2	; select bank2
  3944  103B  00CA               	movwf	sprintf@s^(0+256)
  3945  103C  30E8               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  3946  103D  0020               	movlb	0	; select bank0
  3947  103E  00EF               	movwf	??_sprintf
  3948  103F  086F               	movf	??_sprintf,w
  3949  1040  0022               	movlb	2	; select bank2
  3950  1041  00CB               	movwf	sprintf@ap^(0+256)
  3951  1042  084A               	movf	sprintf@s^(0+256),w
  3952  1043  0020               	movlb	0	; select bank0
  3953  1044  00EF               	movwf	??_sprintf
  3954  1045  086F               	movf	??_sprintf,w
  3955  1046  0022               	movlb	2	; select bank2
  3956  1047  00CC               	movwf	sprintf@f^(0+256)
  3957  1048  01CD               	clrf	(sprintf@f^(0+256)+1)
  3958  1049  01CE               	clrf	((sprintf@f+1)^(0+256)+1)
  3959  104A  01CF               	clrf	(sprintf@f^(0+256)+3)
  3960  104B  01D0               	clrf	((sprintf@f+1)^(0+256)+3)
  3961  104C  0021               	movlb	1	; select bank1
  3962  104D  0867               	movf	(sprintf@fmt+1)^(0+128),w
  3963  104E  0020               	movlb	0	; select bank0
  3964  104F  00E8               	movwf	vfprintf@fmt+1
  3965  1050  0021               	movlb	1	; select bank1
  3966  1051  0866               	movf	sprintf@fmt^(0+128),w
  3967  1052  0020               	movlb	0	; select bank0
  3968  1053  00E7               	movwf	vfprintf@fmt
  3969  1054  304B               	movlw	(low (sprintf@ap| (0+256)))& (0+255)
  3970  1055  00EF               	movwf	??_sprintf
  3971  1056  086F               	movf	??_sprintf,w
  3972  1057  00E9               	movwf	vfprintf@ap
  3973  1058  304C               	movlw	(low (sprintf@f| (0+256)))& (0+255)
  3974  1059  3190  2066         	fcall	_vfprintf
  3975  105B  0022               	movlb	2	; select bank2
  3976  105C  084D               	movf	(sprintf@f^(0+256)+1),w
  3977  105D  074A               	addwf	sprintf@s^(0+256),w
  3978  105E  0020               	movlb	0	; select bank0
  3979  105F  00EF               	movwf	??_sprintf
  3980  1060  086F               	movf	??_sprintf,w
  3981  1061  0086               	movwf	6
  3982  1062  3001               	movlw	1	; select bank2/3
  3983  1063  0087               	movwf	7
  3984  1064  0181               	clrf	1
  3985  1065  0008               	return
  3986  1066                     __end_of_sprintf:	
  3987                           
  3988                           	psect	text15
  3989  1066                     __ptext15:	
  3990 ;; *************** function _vfprintf *****************
  3991 ;; Defined at:
  3992 ;;		line 1368 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;  fp              1    wreg     PTR struct _IO_FILE
  3995 ;;		 -> sprintf@f(5), 
  3996 ;;  fmt             2   71[BANK0 ] PTR const unsigned char 
  3997 ;;		 -> STR_1(5), 
  3998 ;;  ap              1   73[BANK0 ] PTR PTR void 
  3999 ;;		 -> sprintf@ap(1), 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  fp              1   76[BANK0 ] PTR struct _IO_FILE
  4002 ;;		 -> sprintf@f(5), 
  4003 ;;  cfmt            2   77[BANK0 ] PTR unsigned char 
  4004 ;;		 -> STR_1(5), 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  2   71[BANK0 ] int 
  4007 ;; Registers used:
  4008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 1F/0
  4011 ;;		On exit  : 1F/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4014 ;;      Params:         0       3       0       0       0       0       0       0
  4015 ;;      Locals:         0       3       0       0       0       0       0       0
  4016 ;;      Temps:          0       2       0       0       0       0       0       0
  4017 ;;      Totals:         0       8       0       0       0       0       0       0
  4018 ;;Total ram usage:        8 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    6
  4021 ;; This function calls:
  4022 ;;		_vfpfcnvrt
  4023 ;; This function is called by:
  4024 ;;		_sprintf
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function _vfprintf
  4030  1066                     _vfprintf:	
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4034                           ;vfprintf@fp stored from wreg
  4035  1066  00EC               	movwf	vfprintf@fp
  4036                           
  4037                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int v
      +                          fprintf(FILE *fp, const char *fmt, va_list ap);C:\Program Files (x86)\Microchip\xc8\v2.1
      +                          0\pic\sources\c99\common\doprnt.c: 1369: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pi
      +                          c\sources\c99\common\doprnt.c: 1371:     char *cfmt;;C:\Program Files (x86)\Microchip\xc
      +                          8\v2.10\pic\sources\c99\common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4038  1067  0868               	movf	vfprintf@fmt+1,w
  4039  1068  00EE               	movwf	vfprintf@cfmt+1
  4040  1069  0867               	movf	vfprintf@fmt,w
  4041  106A  00ED               	movwf	vfprintf@cfmt
  4042                           
  4043                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     n
      +                          out = 0;
  4044  106B  0022               	movlb	2	; select bank2
  4045  106C  01B8               	clrf	_nout^(0+256)
  4046  106D  01B9               	clrf	(_nout+1)^(0+256)
  4047  106E                     l4181:	
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4049                           
  4050                           
  4051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     w
      +                          hile (*cfmt) {
  4052  106E  0020               	movlb	0	; select bank0
  4053  106F  086D               	movf	vfprintf@cfmt,w
  4054  1070  0084               	movwf	4
  4055  1071  086E               	movf	vfprintf@cfmt+1,w
  4056  1072  0085               	movwf	5
  4057  1073  0012               	moviw fsr0++
  4058  1074  1903               	btfsc	3,2
  4059  1075  288A               	goto	l4183
  4060                           
  4061                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:      
      +                             nout += vfpfcnvrt(fp, &cfmt, ap);
  4062  1076  306D               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  4063  1077  00EA               	movwf	??_vfprintf
  4064  1078  086A               	movf	??_vfprintf,w
  4065  1079  00DF               	movwf	vfpfcnvrt@fmt
  4066  107A  0869               	movf	vfprintf@ap,w
  4067  107B  00EB               	movwf	??_vfprintf+1
  4068  107C  086B               	movf	??_vfprintf+1,w
  4069  107D  00E0               	movwf	vfpfcnvrt@ap
  4070  107E  086C               	movf	vfprintf@fp,w
  4071  107F  318D  25B7  3190   	fcall	_vfpfcnvrt
  4072  1082  085F               	movf	?_vfpfcnvrt,w
  4073  1083  0022               	movlb	2	; select bank2
  4074  1084  07B8               	addwf	_nout^(0+256),f
  4075  1085  0020               	movlb	0	; select bank0
  4076  1086  0860               	movf	?_vfpfcnvrt+1,w
  4077  1087  0022               	movlb	2	; select bank2
  4078  1088  3DB9               	addwfc	(_nout+1)^(0+256),f
  4079  1089  286E               	goto	l4181
  4080  108A                     l4183:	
  4081                           
  4082                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     r
      +                          eturn nout;
  4083  108A  0022               	movlb	2	; select bank2
  4084  108B  0839               	movf	(_nout+1)^(0+256),w
  4085  108C  0020               	movlb	0	; select bank0
  4086  108D  00E8               	movwf	?_vfprintf+1
  4087  108E  0022               	movlb	2	; select bank2
  4088  108F  0838               	movf	_nout^(0+256),w
  4089  1090  0020               	movlb	0	; select bank0
  4090  1091  00E7               	movwf	?_vfprintf
  4091  1092  0008               	return
  4092  1093                     __end_of_vfprintf:	
  4093                           
  4094                           	psect	text16
  4095  0DB7                     __ptext16:	
  4096 ;; *************** function _vfpfcnvrt *****************
  4097 ;; Defined at:
  4098 ;;		line 670 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4099 ;; Parameters:    Size  Location     Type
  4100 ;;  fp              1    wreg     PTR struct _IO_FILE
  4101 ;;		 -> sprintf@f(5), 
  4102 ;;  fmt             1   63[BANK0 ] PTR PTR unsigned char 
  4103 ;;		 -> vfprintf@cfmt(2), 
  4104 ;;  ap              1   64[BANK0 ] PTR PTR void 
  4105 ;;		 -> sprintf@ap(1), 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  fp              1   69[BANK1 ] PTR struct _IO_FILE
  4108 ;;		 -> sprintf@f(5), 
  4109 ;;  llu             8    0        unsigned long long 
  4110 ;;  ll              8    0        long long 
  4111 ;;  f               4   61[BANK1 ] long long 
  4112 ;;  ct              3   65[BANK1 ] unsigned char [3]
  4113 ;;  vp              2    0        PTR void 
  4114 ;;  i               2    0        int 
  4115 ;;  done            2    0        int 
  4116 ;;  cp              2    0        PTR unsigned char 
  4117 ;;  c               1   68[BANK1 ] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2   63[BANK0 ] int 
  4120 ;; Registers used:
  4121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4122 ;; Tracked objects:
  4123 ;;		On entry : 1F/0
  4124 ;;		On exit  : 1F/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4127 ;;      Params:         0       2       0       0       0       0       0       0
  4128 ;;      Locals:         0       0      13       0       0       0       0       0
  4129 ;;      Temps:          0       6       0       0       0       0       0       0
  4130 ;;      Totals:         0       8      13       0       0       0       0       0
  4131 ;;Total ram usage:       21 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    5
  4134 ;; This function calls:
  4135 ;;		_atoi
  4136 ;;		_efgtoa
  4137 ;;		_fputc
  4138 ;;		_isdigit
  4139 ;;		_isupper
  4140 ;;		_strncmp
  4141 ;;		_tolower
  4142 ;; This function is called by:
  4143 ;;		_vfprintf
  4144 ;; This function uses a non-reentrant model
  4145 ;;
  4146                           
  4147                           
  4148                           ;psect for function _vfpfcnvrt
  4149  0DB7                     _vfpfcnvrt:	
  4150                           
  4151                           ;incstack = 0
  4152                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4153                           ;vfpfcnvrt@fp stored from wreg
  4154  0DB7  0021               	movlb	1	; select bank1
  4155  0DB8  00E5               	movwf	vfpfcnvrt@fp^(0+128)
  4156                           
  4157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static
      +                           int vfpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files (x86)\Microchip\xc8\v
      +                          2.10\pic\sources\c99\common\doprnt.c: 671: {;C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files (x86)\Mic
      +                          rochip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files
      +                           (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 674:     long long ll;
  4158  0DB9  0020               	movlb	0	; select bank0
  4159  0DBA  085F               	movf	vfpfcnvrt@fmt,w
  4160  0DBB  0086               	movwf	6
  4161  0DBC  0187               	clrf	7
  4162  0DBD  3F40               	moviw [0]fsr1
  4163  0DBE  00E1               	movwf	??_vfpfcnvrt
  4164  0DBF  3F41               	moviw [1]fsr1
  4165  0DC0  00E2               	movwf	??_vfpfcnvrt+1
  4166  0DC1  0861               	movf	??_vfpfcnvrt,w
  4167  0DC2  0084               	movwf	4
  4168  0DC3  0862               	movf	??_vfpfcnvrt+1,w
  4169  0DC4  0085               	movwf	5
  4170  0DC5  0012               	moviw fsr0++
  4171  0DC6  3A25               	xorlw	37
  4172  0DC7  1D03               	btfss	3,2
  4173  0DC8  2FDB               	goto	l4147
  4174                           
  4175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:       
      +                            ++*fmt;
  4176  0DC9  085F               	movf	vfpfcnvrt@fmt,w
  4177  0DCA  0086               	movwf	6
  4178  0DCB  0187               	clrf	7
  4179  0DCC  3001               	movlw	1
  4180  0DCD  0781               	addwf	1,f
  4181  0DCE  3141               	addfsr 1,1
  4182  0DCF  1803               	skipnc
  4183  0DD0  0A81               	incf	1,f
  4184                           
  4185                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:       
      +                            flags = width = 0;
  4186  0DD1  0022               	movlb	2	; select bank2
  4187  0DD2  01BA               	clrf	_width^(0+256)
  4188  0DD3  01BB               	clrf	(_width+1)^(0+256)
  4189  0DD4  01BE               	clrf	_flags^(0+256)
  4190  0DD5  01BF               	clrf	(_flags+1)^(0+256)
  4191                           
  4192                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:       
      +                            prec = -1;
  4193  0DD6  30FF               	movlw	255
  4194  0DD7  00BC               	movwf	_prec^(0+256)
  4195  0DD8  30FF               	movlw	255
  4196  0DD9  00BD               	movwf	(_prec^(0+256)+1)
  4197                           
  4198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:       
      +                            if ((*fmt)[0] == '.') {
  4199  0DDA  0020               	movlb	0	; select bank0
  4200  0DDB  085F               	movf	vfpfcnvrt@fmt,w
  4201  0DDC  0086               	movwf	6
  4202  0DDD  0187               	clrf	7
  4203  0DDE  3F40               	moviw [0]fsr1
  4204  0DDF  00E1               	movwf	??_vfpfcnvrt
  4205  0DE0  3F41               	moviw [1]fsr1
  4206  0DE1  00E2               	movwf	??_vfpfcnvrt+1
  4207  0DE2  0861               	movf	??_vfpfcnvrt,w
  4208  0DE3  0084               	movwf	4
  4209  0DE4  0862               	movf	??_vfpfcnvrt+1,w
  4210  0DE5  0085               	movwf	5
  4211  0DE6  0012               	moviw fsr0++
  4212  0DE7  3A2E               	xorlw	46
  4213  0DE8  1D03               	btfss	3,2
  4214  0DE9  2E5F               	goto	l4091
  4215                           
  4216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:       
      +                                prec = 0;
  4217  0DEA  0022               	movlb	2	; select bank2
  4218  0DEB  01BC               	clrf	_prec^(0+256)
  4219  0DEC  01BD               	clrf	(_prec+1)^(0+256)
  4220                           
  4221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:       
      +                                ++*fmt;
  4222  0DED  0020               	movlb	0	; select bank0
  4223  0DEE  085F               	movf	vfpfcnvrt@fmt,w
  4224  0DEF  0086               	movwf	6
  4225  0DF0  0187               	clrf	7
  4226  0DF1  3001               	movlw	1
  4227  0DF2  0781               	addwf	1,f
  4228  0DF3  3141               	addfsr 1,1
  4229  0DF4  1803               	skipnc
  4230  0DF5  0A81               	incf	1,f
  4231                           
  4232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:       
      +                                if ((*fmt)[0] == '*') {
  4233  0DF6  085F               	movf	vfpfcnvrt@fmt,w
  4234  0DF7  0086               	movwf	6
  4235  0DF8  0187               	clrf	7
  4236  0DF9  3F40               	moviw [0]fsr1
  4237  0DFA  00E1               	movwf	??_vfpfcnvrt
  4238  0DFB  3F41               	moviw [1]fsr1
  4239  0DFC  00E2               	movwf	??_vfpfcnvrt+1
  4240  0DFD  0861               	movf	??_vfpfcnvrt,w
  4241  0DFE  0084               	movwf	4
  4242  0DFF  0862               	movf	??_vfpfcnvrt+1,w
  4243  0E00  0085               	movwf	5
  4244  0E01  0012               	moviw fsr0++
  4245  0E02  3A2A               	xorlw	42
  4246  0E03  1D03               	btfss	3,2
  4247  0E04  2E1C               	goto	l4081
  4248                           
  4249                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:       
      +                                    ++*fmt;
  4250  0E05  085F               	movf	vfpfcnvrt@fmt,w
  4251  0E06  0086               	movwf	6
  4252  0E07  0187               	clrf	7
  4253  0E08  3001               	movlw	1
  4254  0E09  0781               	addwf	1,f
  4255  0E0A  3141               	addfsr 1,1
  4256  0E0B  1803               	skipnc
  4257  0E0C  0A81               	incf	1,f
  4258                           
  4259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:       
      +                                    prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4260  0E0D  0860               	movf	vfpfcnvrt@ap,w
  4261  0E0E  0086               	movwf	6
  4262  0E0F  3001               	movlw	1	; select bank2/3
  4263  0E10  0087               	movwf	7
  4264  0E11  0801               	movf	1,w
  4265  0E12  0084               	movwf	4
  4266  0E13  0185               	clrf	5
  4267  0E14  3002               	movlw	2
  4268  0E15  0781               	addwf	1,f
  4269  0E16  3F00               	moviw [0]fsr0
  4270  0E17  0022               	movlb	2	; select bank2
  4271  0E18  00BC               	movwf	_prec^(0+256)
  4272  0E19  3F01               	moviw [1]fsr0
  4273  0E1A  00BD               	movwf	(_prec+1)^(0+256)
  4274                           
  4275                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:       
      +                                } else {
  4276  0E1B  2E5F               	goto	l4091
  4277  0E1C                     l4081:	
  4278                           
  4279                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:       
      +                                    prec = atoi(*fmt);
  4280  0E1C  085F               	movf	vfpfcnvrt@fmt,w
  4281  0E1D  0086               	movwf	6
  4282  0E1E  0187               	clrf	7
  4283  0E1F  3F40               	moviw [0]fsr1
  4284  0E20  00F6               	movwf	atoi@s
  4285  0E21  3F41               	moviw [1]fsr1
  4286  0E22  00F7               	movwf	atoi@s+1
  4287  0E23  3195  25A9  318D   	fcall	_atoi
  4288  0E26  0877               	movf	?_atoi+1,w
  4289  0E27  0022               	movlb	2	; select bank2
  4290  0E28  00BD               	movwf	(_prec+1)^(0+256)
  4291  0E29  0876               	movf	?_atoi,w
  4292  0E2A  00BC               	movwf	_prec^(0+256)
  4293                           
  4294                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:       
      +                                    while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4295  0E2B  2E35               	goto	l4085
  4296  0E2C                     l4083:	
  4297                           
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:       
      +                                        ++*fmt;
  4299  0E2C  0020               	movlb	0	; select bank0
  4300  0E2D  085F               	movf	vfpfcnvrt@fmt,w
  4301  0E2E  0086               	movwf	6
  4302  0E2F  0187               	clrf	7
  4303  0E30  3001               	movlw	1
  4304  0E31  0781               	addwf	1,f
  4305  0E32  3141               	addfsr 1,1
  4306  0E33  1803               	skipnc
  4307  0E34  0A81               	incf	1,f
  4308  0E35                     l4085:	
  4309  0E35  0020               	movlb	0	; select bank0
  4310  0E36  085F               	movf	vfpfcnvrt@fmt,w
  4311  0E37  0086               	movwf	6
  4312  0E38  0187               	clrf	7
  4313  0E39  3F40               	moviw [0]fsr1
  4314  0E3A  00E1               	movwf	??_vfpfcnvrt
  4315  0E3B  3F41               	moviw [1]fsr1
  4316  0E3C  00E2               	movwf	??_vfpfcnvrt+1
  4317  0E3D  0861               	movf	??_vfpfcnvrt,w
  4318  0E3E  0084               	movwf	4
  4319  0E3F  0862               	movf	??_vfpfcnvrt+1,w
  4320  0E40  0085               	movwf	5
  4321  0E41  0800               	movf	0,w	;code access
  4322  0E42  3ED0               	addlw	208
  4323  0E43  00E3               	movwf	??_vfpfcnvrt+2
  4324  0E44  30FF               	movlw	255
  4325  0E45  1803               	skipnc
  4326  0E46  3000               	movlw	0
  4327  0E47  00E4               	movwf	??_vfpfcnvrt+3
  4328  0E48  3000               	movlw	0
  4329  0E49  0264               	subwf	??_vfpfcnvrt+3,w
  4330  0E4A  300A               	movlw	10
  4331  0E4B  1903               	skipnz
  4332  0E4C  0263               	subwf	??_vfpfcnvrt+2,w
  4333  0E4D  1803               	btfsc	3,0
  4334  0E4E  2E51               	goto	u5480
  4335  0E4F  3001               	movlw	1
  4336  0E50  2E52               	goto	u5490
  4337  0E51                     u5480:	
  4338  0E51  3000               	movlw	0
  4339  0E52                     u5490:	
  4340  0E52  00E5               	movwf	??_vfpfcnvrt+4
  4341  0E53  01E6               	clrf	??_vfpfcnvrt+5
  4342  0E54  0865               	movf	??_vfpfcnvrt+4,w
  4343  0E55  0021               	movlb	1	; select bank1
  4344  0E56  00D9               	movwf	_vfpfcnvrt$725^(0+128)
  4345  0E57  0020               	movlb	0	; select bank0
  4346  0E58  0866               	movf	??_vfpfcnvrt+5,w
  4347  0E59  0021               	movlb	1	; select bank1
  4348  0E5A  00DA               	movwf	(_vfpfcnvrt$725+1)^(0+128)
  4349  0E5B  0859               	movf	_vfpfcnvrt$725^(0+128),w
  4350  0E5C  045A               	iorwf	(_vfpfcnvrt$725+1)^(0+128),w
  4351  0E5D  1D03               	btfss	3,2
  4352  0E5E  2E2C               	goto	l4083
  4353  0E5F                     l4091:	
  4354                           
  4355                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:       
      +                            ct[0] = tolower((int)(*fmt)[0]);
  4356  0E5F  0020               	movlb	0	; select bank0
  4357  0E60  085F               	movf	vfpfcnvrt@fmt,w
  4358  0E61  0086               	movwf	6
  4359  0E62  0187               	clrf	7
  4360  0E63  3F40               	moviw [0]fsr1
  4361  0E64  00E1               	movwf	??_vfpfcnvrt
  4362  0E65  3F41               	moviw [1]fsr1
  4363  0E66  00E2               	movwf	??_vfpfcnvrt+1
  4364  0E67  0861               	movf	??_vfpfcnvrt,w
  4365  0E68  0084               	movwf	4
  4366  0E69  0862               	movf	??_vfpfcnvrt+1,w
  4367  0E6A  0085               	movwf	5
  4368  0E6B  0800               	movf	0,w	;code access
  4369  0E6C  00E3               	movwf	??_vfpfcnvrt+2
  4370  0E6D  01E4               	clrf	??_vfpfcnvrt+3
  4371  0E6E  0863               	movf	??_vfpfcnvrt+2,w
  4372  0E6F  00F6               	movwf	tolower@c
  4373  0E70  0864               	movf	??_vfpfcnvrt+3,w
  4374  0E71  00F7               	movwf	tolower@c+1
  4375  0E72  319F  27BA  318D   	fcall	_tolower
  4376  0E75  0876               	movf	?_tolower,w
  4377  0E76  00E5               	movwf	??_vfpfcnvrt+4
  4378  0E77  0865               	movf	??_vfpfcnvrt+4,w
  4379  0E78  0021               	movlb	1	; select bank1
  4380  0E79  00E1               	movwf	vfpfcnvrt@ct^(0+128)
  4381                           
  4382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:       
      +                            if (ct[0]) {
  4383  0E7A  0861               	movf	vfpfcnvrt@ct^(0+128),w
  4384  0E7B  1903               	btfsc	3,2
  4385  0E7C  2EBC               	goto	l4101
  4386                           
  4387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:       
      +                                ct[1] = tolower((int)(*fmt)[1]);
  4388  0E7D  0020               	movlb	0	; select bank0
  4389  0E7E  085F               	movf	vfpfcnvrt@fmt,w
  4390  0E7F  0086               	movwf	6
  4391  0E80  0187               	clrf	7
  4392  0E81  3F40               	moviw [0]fsr1
  4393  0E82  00E1               	movwf	??_vfpfcnvrt
  4394  0E83  3F41               	moviw [1]fsr1
  4395  0E84  00E2               	movwf	??_vfpfcnvrt+1
  4396  0E85  3001               	movlw	1
  4397  0E86  0761               	addwf	??_vfpfcnvrt,w
  4398  0E87  0084               	movwf	4
  4399  0E88  0862               	movf	??_vfpfcnvrt+1,w
  4400  0E89  1803               	skipnc
  4401  0E8A  0A62               	incf	??_vfpfcnvrt+1,w
  4402  0E8B  0085               	movwf	5
  4403  0E8C  0800               	movf	0,w	;code access
  4404  0E8D  00E3               	movwf	??_vfpfcnvrt+2
  4405  0E8E  01E4               	clrf	??_vfpfcnvrt+3
  4406  0E8F  0863               	movf	??_vfpfcnvrt+2,w
  4407  0E90  00F6               	movwf	tolower@c
  4408  0E91  0864               	movf	??_vfpfcnvrt+3,w
  4409  0E92  00F7               	movwf	tolower@c+1
  4410  0E93  319F  27BA  318D   	fcall	_tolower
  4411  0E96  0876               	movf	?_tolower,w
  4412  0E97  00E5               	movwf	??_vfpfcnvrt+4
  4413  0E98  0865               	movf	??_vfpfcnvrt+4,w
  4414  0E99  0021               	movlb	1	; select bank1
  4415  0E9A  00E2               	movwf	(vfpfcnvrt@ct^(0+128)+1)
  4416                           
  4417                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:       
      +                                if (ct[1]) {
  4418  0E9B  0862               	movf	(vfpfcnvrt@ct^(0+128)+1),w
  4419  0E9C  1903               	btfsc	3,2
  4420  0E9D  2EBC               	goto	l4101
  4421                           
  4422                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:       
      +                                    ct[2] = tolower((int)(*fmt)[2]);
  4423  0E9E  0020               	movlb	0	; select bank0
  4424  0E9F  085F               	movf	vfpfcnvrt@fmt,w
  4425  0EA0  0086               	movwf	6
  4426  0EA1  0187               	clrf	7
  4427  0EA2  3F40               	moviw [0]fsr1
  4428  0EA3  00E1               	movwf	??_vfpfcnvrt
  4429  0EA4  3F41               	moviw [1]fsr1
  4430  0EA5  00E2               	movwf	??_vfpfcnvrt+1
  4431  0EA6  3002               	movlw	2
  4432  0EA7  0761               	addwf	??_vfpfcnvrt,w
  4433  0EA8  0084               	movwf	4
  4434  0EA9  0862               	movf	??_vfpfcnvrt+1,w
  4435  0EAA  1803               	skipnc
  4436  0EAB  0A62               	incf	??_vfpfcnvrt+1,w
  4437  0EAC  0085               	movwf	5
  4438  0EAD  0800               	movf	0,w	;code access
  4439  0EAE  00E3               	movwf	??_vfpfcnvrt+2
  4440  0EAF  01E4               	clrf	??_vfpfcnvrt+3
  4441  0EB0  0863               	movf	??_vfpfcnvrt+2,w
  4442  0EB1  00F6               	movwf	tolower@c
  4443  0EB2  0864               	movf	??_vfpfcnvrt+3,w
  4444  0EB3  00F7               	movwf	tolower@c+1
  4445  0EB4  319F  27BA  318D   	fcall	_tolower
  4446  0EB7  0876               	movf	?_tolower,w
  4447  0EB8  00E5               	movwf	??_vfpfcnvrt+4
  4448  0EB9  0865               	movf	??_vfpfcnvrt+4,w
  4449  0EBA  0021               	movlb	1	; select bank1
  4450  0EBB  00E3               	movwf	(vfpfcnvrt@ct^(0+128)+2)
  4451  0EBC                     l4101:	
  4452                           
  4453                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:       
      +                            if (ct[0] == 'f') {
  4454  0EBC  3066               	movlw	102
  4455  0EBD  0661               	xorwf	vfpfcnvrt@ct^(0+128),w
  4456  0EBE  1D03               	btfss	3,2
  4457  0EBF  2F0A               	goto	l4113
  4458                           
  4459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:       
      +                                c = (*fmt)[0];
  4460  0EC0  0020               	movlb	0	; select bank0
  4461  0EC1  085F               	movf	vfpfcnvrt@fmt,w
  4462  0EC2  0086               	movwf	6
  4463  0EC3  0187               	clrf	7
  4464  0EC4  3F40               	moviw [0]fsr1
  4465  0EC5  00E1               	movwf	??_vfpfcnvrt
  4466  0EC6  3F41               	moviw [1]fsr1
  4467  0EC7  00E2               	movwf	??_vfpfcnvrt+1
  4468  0EC8  0861               	movf	??_vfpfcnvrt,w
  4469  0EC9  0084               	movwf	4
  4470  0ECA  0862               	movf	??_vfpfcnvrt+1,w
  4471  0ECB  0085               	movwf	5
  4472  0ECC  0800               	movf	0,w	;code access
  4473  0ECD  00E3               	movwf	??_vfpfcnvrt+2
  4474  0ECE  0863               	movf	??_vfpfcnvrt+2,w
  4475  0ECF  0021               	movlb	1	; select bank1
  4476  0ED0  00E4               	movwf	vfpfcnvrt@c^(0+128)
  4477                           
  4478                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:       
      +                                ++*fmt;
  4479  0ED1  0020               	movlb	0	; select bank0
  4480  0ED2  085F               	movf	vfpfcnvrt@fmt,w
  4481  0ED3  0086               	movwf	6
  4482  0ED4  0187               	clrf	7
  4483  0ED5  3001               	movlw	1
  4484  0ED6  0781               	addwf	1,f
  4485  0ED7  3141               	addfsr 1,1
  4486  0ED8  1803               	skipnc
  4487  0ED9  0A81               	incf	1,f
  4488                           
  4489                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:       
      +                                f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4490  0EDA  0860               	movf	vfpfcnvrt@ap,w
  4491  0EDB  0086               	movwf	6
  4492  0EDC  3001               	movlw	1	; select bank2/3
  4493  0EDD  0087               	movwf	7
  4494  0EDE  0801               	movf	1,w
  4495  0EDF  0084               	movwf	4
  4496  0EE0  0185               	clrf	5
  4497  0EE1  3004               	movlw	4
  4498  0EE2  0781               	addwf	1,f
  4499  0EE3  3F00               	moviw [0]fsr0
  4500  0EE4  0021               	movlb	1	; select bank1
  4501  0EE5  00DD               	movwf	vfpfcnvrt@f^(0+128)
  4502  0EE6  3F01               	moviw [1]fsr0
  4503  0EE7  00DE               	movwf	(vfpfcnvrt@f+1)^(0+128)
  4504  0EE8  3F02               	moviw [2]fsr0
  4505  0EE9  00DF               	movwf	(vfpfcnvrt@f+2)^(0+128)
  4506  0EEA  3F03               	moviw [3]fsr0
  4507  0EEB  00E0               	movwf	(vfpfcnvrt@f+3)^(0+128)
  4508                           
  4509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:       
      +                                return efgtoa(fp, f, c);
  4510  0EEC  0860               	movf	(vfpfcnvrt@f+3)^(0+128),w
  4511  0EED  0020               	movlb	0	; select bank0
  4512  0EEE  00D9               	movwf	efgtoa@f+3
  4513  0EEF  0021               	movlb	1	; select bank1
  4514  0EF0  085F               	movf	(vfpfcnvrt@f+2)^(0+128),w
  4515  0EF1  0020               	movlb	0	; select bank0
  4516  0EF2  00D8               	movwf	efgtoa@f+2
  4517  0EF3  0021               	movlb	1	; select bank1
  4518  0EF4  085E               	movf	(vfpfcnvrt@f+1)^(0+128),w
  4519  0EF5  0020               	movlb	0	; select bank0
  4520  0EF6  00D7               	movwf	efgtoa@f+1
  4521  0EF7  0021               	movlb	1	; select bank1
  4522  0EF8  085D               	movf	vfpfcnvrt@f^(0+128),w
  4523  0EF9  0020               	movlb	0	; select bank0
  4524  0EFA  00D6               	movwf	efgtoa@f
  4525  0EFB  0021               	movlb	1	; select bank1
  4526  0EFC  0864               	movf	vfpfcnvrt@c^(0+128),w
  4527  0EFD  0020               	movlb	0	; select bank0
  4528  0EFE  00E1               	movwf	??_vfpfcnvrt
  4529  0EFF  0861               	movf	??_vfpfcnvrt,w
  4530  0F00  00DA               	movwf	efgtoa@c
  4531  0F01  0021               	movlb	1	; select bank1
  4532  0F02  0865               	movf	vfpfcnvrt@fp^(0+128),w
  4533  0F03  3181  2195         	fcall	_efgtoa
  4534  0F05  0857               	movf	?_efgtoa+1,w
  4535  0F06  00E0               	movwf	?_vfpfcnvrt+1
  4536  0F07  0856               	movf	?_efgtoa,w
  4537  0F08  00DF               	movwf	?_vfpfcnvrt
  4538  0F09  0008               	return
  4539  0F0A                     l4113:	
  4540                           
  4541                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:       
      +                            if (!strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4542  0F0A  3045               	movlw	low (STR_19| (0+32768))
  4543  0F0B  00F0               	movwf	strncmp@_r
  4544  0F0C  3098               	movlw	high (STR_19| (0+32768))
  4545  0F0D  00F1               	movwf	strncmp@_r+1
  4546  0F0E  3002               	movlw	2
  4547  0F0F  00F2               	movwf	strncmp@n
  4548  0F10  3000               	movlw	0
  4549  0F11  00F3               	movwf	strncmp@n+1
  4550  0F12  30E1               	movlw	(low (vfpfcnvrt@ct| 0))& (0+255)
  4551  0F13  3191  21AF  318D   	fcall	_strncmp
  4552  0F16  0870               	movf	?_strncmp,w
  4553  0F17  0471               	iorwf	?_strncmp+1,w
  4554  0F18  1D03               	btfss	3,2
  4555  0F19  2FA6               	goto	l4131
  4556                           
  4557                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:       
      +                                if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4558  0F1A  0020               	movlb	0	; select bank0
  4559  0F1B  085F               	movf	vfpfcnvrt@fmt,w
  4560  0F1C  0086               	movwf	6
  4561  0F1D  0187               	clrf	7
  4562  0F1E  3F40               	moviw [0]fsr1
  4563  0F1F  00E1               	movwf	??_vfpfcnvrt
  4564  0F20  3F41               	moviw [1]fsr1
  4565  0F21  00E2               	movwf	??_vfpfcnvrt+1
  4566  0F22  3001               	movlw	1
  4567  0F23  0761               	addwf	??_vfpfcnvrt,w
  4568  0F24  0084               	movwf	4
  4569  0F25  0862               	movf	??_vfpfcnvrt+1,w
  4570  0F26  1803               	skipnc
  4571  0F27  0A62               	incf	??_vfpfcnvrt+1,w
  4572  0F28  0085               	movwf	5
  4573  0F29  0800               	movf	0,w	;code access
  4574  0F2A  00E3               	movwf	??_vfpfcnvrt+2
  4575  0F2B  0863               	movf	??_vfpfcnvrt+2,w
  4576  0F2C  0021               	movlb	1	; select bank1
  4577  0F2D  00E4               	movwf	vfpfcnvrt@c^(0+128)
  4578  0F2E  0020               	movlb	0	; select bank0
  4579  0F2F  085F               	movf	vfpfcnvrt@fmt,w
  4580  0F30  0086               	movwf	6
  4581  0F31  0187               	clrf	7
  4582  0F32  3F40               	moviw [0]fsr1
  4583  0F33  00E1               	movwf	??_vfpfcnvrt
  4584  0F34  3F41               	moviw [1]fsr1
  4585  0F35  00E2               	movwf	??_vfpfcnvrt+1
  4586  0F36  0861               	movf	??_vfpfcnvrt,w
  4587  0F37  0084               	movwf	4
  4588  0F38  0862               	movf	??_vfpfcnvrt+1,w
  4589  0F39  0085               	movwf	5
  4590  0F3A  0800               	movf	0,w	;code access
  4591  0F3B  3EBF               	addlw	191
  4592  0F3C  00E3               	movwf	??_vfpfcnvrt+2
  4593  0F3D  30FF               	movlw	255
  4594  0F3E  1803               	skipnc
  4595  0F3F  3000               	movlw	0
  4596  0F40  00E4               	movwf	??_vfpfcnvrt+3
  4597  0F41  3000               	movlw	0
  4598  0F42  0264               	subwf	??_vfpfcnvrt+3,w
  4599  0F43  301A               	movlw	26
  4600  0F44  1903               	skipnz
  4601  0F45  0263               	subwf	??_vfpfcnvrt+2,w
  4602  0F46  1803               	btfsc	3,0
  4603  0F47  2F4A               	goto	u5550
  4604  0F48  3001               	movlw	1
  4605  0F49  2F4B               	goto	u5560
  4606  0F4A                     u5550:	
  4607  0F4A  3000               	movlw	0
  4608  0F4B                     u5560:	
  4609  0F4B  00E5               	movwf	??_vfpfcnvrt+4
  4610  0F4C  01E6               	clrf	??_vfpfcnvrt+5
  4611  0F4D  0865               	movf	??_vfpfcnvrt+4,w
  4612  0F4E  0021               	movlb	1	; select bank1
  4613  0F4F  00DB               	movwf	_vfpfcnvrt$729^(0+128)
  4614  0F50  0020               	movlb	0	; select bank0
  4615  0F51  0866               	movf	??_vfpfcnvrt+5,w
  4616  0F52  0021               	movlb	1	; select bank1
  4617  0F53  00DC               	movwf	(_vfpfcnvrt$729+1)^(0+128)
  4618  0F54  085B               	movf	_vfpfcnvrt$729^(0+128),w
  4619  0F55  045C               	iorwf	(_vfpfcnvrt$729+1)^(0+128),w
  4620  0F56  1903               	btfsc	3,2
  4621  0F57  2F6B               	goto	l4123
  4622                           
  4623                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:       
      +                                    f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4624  0F58  0020               	movlb	0	; select bank0
  4625  0F59  0860               	movf	vfpfcnvrt@ap,w
  4626  0F5A  0086               	movwf	6
  4627  0F5B  3001               	movlw	1	; select bank2/3
  4628  0F5C  0087               	movwf	7
  4629  0F5D  0801               	movf	1,w
  4630  0F5E  0084               	movwf	4
  4631  0F5F  0185               	clrf	5
  4632  0F60  3004               	movlw	4
  4633  0F61  0781               	addwf	1,f
  4634  0F62  3F00               	moviw [0]fsr0
  4635  0F63  0021               	movlb	1	; select bank1
  4636  0F64  00DD               	movwf	vfpfcnvrt@f^(0+128)
  4637  0F65  3F01               	moviw [1]fsr0
  4638  0F66  00DE               	movwf	(vfpfcnvrt@f+1)^(0+128)
  4639  0F67  3F02               	moviw [2]fsr0
  4640  0F68  00DF               	movwf	(vfpfcnvrt@f+2)^(0+128)
  4641  0F69  3F03               	moviw [3]fsr0
  4642  0F6A  2F7D               	goto	L1
  4643  0F6B                     l4123:	
  4644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:       
      +                                } else {
  4645                           
  4646                           
  4647                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:       
      +                                    f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4648  0F6B  0020               	movlb	0	; select bank0
  4649  0F6C  0860               	movf	vfpfcnvrt@ap,w
  4650  0F6D  0086               	movwf	6
  4651  0F6E  3001               	movlw	1	; select bank2/3
  4652  0F6F  0087               	movwf	7
  4653  0F70  0801               	movf	1,w
  4654  0F71  0084               	movwf	4
  4655  0F72  0185               	clrf	5
  4656  0F73  3004               	movlw	4
  4657  0F74  0781               	addwf	1,f
  4658  0F75  3F00               	moviw [0]fsr0
  4659  0F76  0021               	movlb	1	; select bank1
  4660  0F77  00DD               	movwf	vfpfcnvrt@f^(0+128)
  4661  0F78  3F01               	moviw [1]fsr0
  4662  0F79  00DE               	movwf	(vfpfcnvrt@f+1)^(0+128)
  4663  0F7A  3F02               	moviw [2]fsr0
  4664  0F7B  00DF               	movwf	(vfpfcnvrt@f+2)^(0+128)
  4665  0F7C  3F03               	moviw [3]fsr0
  4666  0F7D                     L1:	
  4667  0F7D  00E0               	movwf	(vfpfcnvrt@f+3)^(0+128)
  4668                           
  4669                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:       
      +                                *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4670  0F7E  0020               	movlb	0	; select bank0
  4671  0F7F  085F               	movf	vfpfcnvrt@fmt,w
  4672  0F80  0086               	movwf	6
  4673  0F81  0187               	clrf	7
  4674  0F82  3002               	movlw	2
  4675  0F83  0781               	addwf	1,f
  4676  0F84  3141               	addfsr 1,1
  4677  0F85  1803               	skipnc
  4678  0F86  0A81               	incf	1,f
  4679                           
  4680                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 938:       
      +                                return efgtoa(fp, f, c);
  4681  0F87  0021               	movlb	1	; select bank1
  4682  0F88  0860               	movf	(vfpfcnvrt@f+3)^(0+128),w
  4683  0F89  0020               	movlb	0	; select bank0
  4684  0F8A  00D9               	movwf	efgtoa@f+3
  4685  0F8B  0021               	movlb	1	; select bank1
  4686  0F8C  085F               	movf	(vfpfcnvrt@f+2)^(0+128),w
  4687  0F8D  0020               	movlb	0	; select bank0
  4688  0F8E  00D8               	movwf	efgtoa@f+2
  4689  0F8F  0021               	movlb	1	; select bank1
  4690  0F90  085E               	movf	(vfpfcnvrt@f+1)^(0+128),w
  4691  0F91  0020               	movlb	0	; select bank0
  4692  0F92  00D7               	movwf	efgtoa@f+1
  4693  0F93  0021               	movlb	1	; select bank1
  4694  0F94  085D               	movf	vfpfcnvrt@f^(0+128),w
  4695  0F95  0020               	movlb	0	; select bank0
  4696  0F96  00D6               	movwf	efgtoa@f
  4697  0F97  0021               	movlb	1	; select bank1
  4698  0F98  0864               	movf	vfpfcnvrt@c^(0+128),w
  4699  0F99  0020               	movlb	0	; select bank0
  4700  0F9A  00E1               	movwf	??_vfpfcnvrt
  4701  0F9B  0861               	movf	??_vfpfcnvrt,w
  4702  0F9C  00DA               	movwf	efgtoa@c
  4703  0F9D  0021               	movlb	1	; select bank1
  4704  0F9E  0865               	movf	vfpfcnvrt@fp^(0+128),w
  4705  0F9F  3181  2195         	fcall	_efgtoa
  4706  0FA1  0857               	movf	?_efgtoa+1,w
  4707  0FA2  00E0               	movwf	?_vfpfcnvrt+1
  4708  0FA3  0856               	movf	?_efgtoa,w
  4709  0FA4  00DF               	movwf	?_vfpfcnvrt
  4710  0FA5  0008               	return
  4711  0FA6                     l4131:	
  4712                           
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:      
      +                             if ((*fmt)[0] == '%') {
  4714  0FA6  0020               	movlb	0	; select bank0
  4715  0FA7  085F               	movf	vfpfcnvrt@fmt,w
  4716  0FA8  0086               	movwf	6
  4717  0FA9  0187               	clrf	7
  4718  0FAA  3F40               	moviw [0]fsr1
  4719  0FAB  00E1               	movwf	??_vfpfcnvrt
  4720  0FAC  3F41               	moviw [1]fsr1
  4721  0FAD  00E2               	movwf	??_vfpfcnvrt+1
  4722  0FAE  0861               	movf	??_vfpfcnvrt,w
  4723  0FAF  0084               	movwf	4
  4724  0FB0  0862               	movf	??_vfpfcnvrt+1,w
  4725  0FB1  0085               	movwf	5
  4726  0FB2  0012               	moviw fsr0++
  4727  0FB3  3A25               	xorlw	37
  4728  0FB4  1D03               	btfss	3,2
  4729  0FB5  2FD0               	goto	l4141
  4730                           
  4731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:      
      +                                 ++*fmt;
  4732  0FB6  085F               	movf	vfpfcnvrt@fmt,w
  4733  0FB7  0086               	movwf	6
  4734  0FB8  0187               	clrf	7
  4735  0FB9  3001               	movlw	1
  4736  0FBA  0781               	addwf	1,f
  4737  0FBB  3141               	addfsr 1,1
  4738  0FBC  1803               	skipnc
  4739  0FBD  0A81               	incf	1,f
  4740                           
  4741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:      
      +                                 fputc((int)'%', fp);
  4742  0FBE  3025               	movlw	37
  4743  0FBF  00F0               	movwf	fputc@c
  4744  0FC0  3000               	movlw	0
  4745  0FC1  00F1               	movwf	fputc@c+1
  4746  0FC2  0021               	movlb	1	; select bank1
  4747  0FC3  0865               	movf	vfpfcnvrt@fp^(0+128),w
  4748  0FC4  0020               	movlb	0	; select bank0
  4749  0FC5  00E1               	movwf	??_vfpfcnvrt
  4750  0FC6  0861               	movf	??_vfpfcnvrt,w
  4751  0FC7  00F2               	movwf	fputc@fp
  4752  0FC8  3191  2163         	fcall	_fputc
  4753  0FCA                     l4137:	
  4754                           
  4755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:      
      +                                 return 1;
  4756  0FCA  3001               	movlw	1
  4757  0FCB  0020               	movlb	0	; select bank0
  4758  0FCC  00DF               	movwf	?_vfpfcnvrt
  4759  0FCD  3000               	movlw	0
  4760  0FCE  00E0               	movwf	?_vfpfcnvrt+1
  4761  0FCF  0008               	return
  4762  0FD0                     l4141:	
  4763                           
  4764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:      
      +                             ++*fmt;
  4765  0FD0  085F               	movf	vfpfcnvrt@fmt,w
  4766  0FD1  0086               	movwf	6
  4767  0FD2  0187               	clrf	7
  4768  0FD3  3001               	movlw	1
  4769  0FD4  0781               	addwf	1,f
  4770  0FD5  3141               	addfsr 1,1
  4771  0FD6  1803               	skipnc
  4772  0FD7  0A81               	incf	1,f
  4773                           
  4774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:      
      +                             return 0;
  4775  0FD8  01DF               	clrf	?_vfpfcnvrt
  4776  0FD9  01E0               	clrf	?_vfpfcnvrt+1
  4777  0FDA  0008               	return
  4778  0FDB                     l4147:	
  4779                           
  4780                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     f
      +                          putc((int)(*fmt)[0], fp);
  4781  0FDB  085F               	movf	vfpfcnvrt@fmt,w
  4782  0FDC  0086               	movwf	6
  4783  0FDD  0187               	clrf	7
  4784  0FDE  3F40               	moviw [0]fsr1
  4785  0FDF  00E1               	movwf	??_vfpfcnvrt
  4786  0FE0  3F41               	moviw [1]fsr1
  4787  0FE1  00E2               	movwf	??_vfpfcnvrt+1
  4788  0FE2  0861               	movf	??_vfpfcnvrt,w
  4789  0FE3  0084               	movwf	4
  4790  0FE4  0862               	movf	??_vfpfcnvrt+1,w
  4791  0FE5  0085               	movwf	5
  4792  0FE6  0800               	movf	0,w	;code access
  4793  0FE7  00E3               	movwf	??_vfpfcnvrt+2
  4794  0FE8  01E4               	clrf	??_vfpfcnvrt+3
  4795  0FE9  0863               	movf	??_vfpfcnvrt+2,w
  4796  0FEA  00F0               	movwf	fputc@c
  4797  0FEB  0864               	movf	??_vfpfcnvrt+3,w
  4798  0FEC  00F1               	movwf	fputc@c+1
  4799  0FED  0021               	movlb	1	; select bank1
  4800  0FEE  0865               	movf	vfpfcnvrt@fp^(0+128),w
  4801  0FEF  0020               	movlb	0	; select bank0
  4802  0FF0  00E5               	movwf	??_vfpfcnvrt+4
  4803  0FF1  0865               	movf	??_vfpfcnvrt+4,w
  4804  0FF2  00F2               	movwf	fputc@fp
  4805  0FF3  3191  2163  318D   	fcall	_fputc
  4806                           
  4807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     +
      +                          +*fmt;
  4808  0FF6  0020               	movlb	0	; select bank0
  4809  0FF7  085F               	movf	vfpfcnvrt@fmt,w
  4810  0FF8  0086               	movwf	6
  4811  0FF9  0187               	clrf	7
  4812  0FFA  3001               	movlw	1
  4813  0FFB  0781               	addwf	1,f
  4814  0FFC  3141               	addfsr 1,1
  4815  0FFD  1803               	skipnc
  4816  0FFE  0A81               	incf	1,f
  4817  0FFF  2FCA               	goto	l4137
  4818  1000                     __end_of_vfpfcnvrt:	
  4819                           
  4820                           	psect	text17
  4821  11AF                     __ptext17:	
  4822 ;; *************** function _strncmp *****************
  4823 ;; Defined at:
  4824 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  _l              1    wreg     PTR const unsigned char 
  4827 ;;		 -> vfpfcnvrt@ct(3), 
  4828 ;;  _r              2    0[COMMON] PTR const unsigned char 
  4829 ;;		 -> STR_21(3), 
  4830 ;;  n               2    2[COMMON] unsigned int 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  _l              1    5[COMMON] PTR const unsigned char 
  4833 ;;		 -> vfpfcnvrt@ct(3), 
  4834 ;;  r               2    6[COMMON] PTR const unsigned char 
  4835 ;;		 -> STR_21(3), 
  4836 ;;  l               1    8[COMMON] PTR const unsigned char 
  4837 ;;		 -> vfpfcnvrt@ct(3), 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  2    0[COMMON] int 
  4840 ;; Registers used:
  4841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4842 ;; Tracked objects:
  4843 ;;		On entry : 1F/1
  4844 ;;		On exit  : 1F/1
  4845 ;;		Unchanged: 1F/0
  4846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4847 ;;      Params:         4       0       0       0       0       0       0       0
  4848 ;;      Locals:         4       0       0       0       0       0       0       0
  4849 ;;      Temps:          1       0       0       0       0       0       0       0
  4850 ;;      Totals:         9       0       0       0       0       0       0       0
  4851 ;;Total ram usage:        9 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_vfpfcnvrt
  4857 ;; This function uses a non-reentrant model
  4858 ;;
  4859                           
  4860                           
  4861                           ;psect for function _strncmp
  4862  11AF                     _strncmp:	
  4863                           
  4864                           ;incstack = 0
  4865                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
  4866                           ;strncmp@_l stored from wreg
  4867  11AF  00F5               	movwf	strncmp@_l
  4868  11B0  0875               	movf	strncmp@_l,w
  4869  11B1  00F4               	movwf	??_strncmp
  4870  11B2  0874               	movf	??_strncmp,w
  4871  11B3  00F8               	movwf	strncmp@l
  4872  11B4  0871               	movf	strncmp@_r+1,w
  4873  11B5  00F7               	movwf	strncmp@r+1
  4874  11B6  0870               	movf	strncmp@_r,w
  4875  11B7  00F6               	movwf	strncmp@r
  4876  11B8  3001               	movlw	1
  4877  11B9  02F2               	subwf	strncmp@n,f
  4878  11BA  3000               	movlw	0
  4879  11BB  3BF3               	subwfb	strncmp@n+1,f
  4880  11BC  0A72               	incf	strncmp@n,w
  4881  11BD  1D03               	skipz
  4882  11BE  29E9               	goto	l4033
  4883  11BF  0A73               	incf	strncmp@n+1,w
  4884  11C0  1D03               	btfss	3,2
  4885  11C1  29E9               	goto	l4033
  4886  11C2  01F0               	clrf	?_strncmp
  4887  11C3  01F1               	clrf	?_strncmp+1
  4888  11C4  0008               	return
  4889  11C5                     l4035:	
  4890  11C5  0876               	movf	strncmp@r,w
  4891  11C6  0084               	movwf	4
  4892  11C7  0877               	movf	strncmp@r+1,w
  4893  11C8  0085               	movwf	5
  4894  11C9  0012               	moviw fsr0++
  4895  11CA  1903               	btfsc	3,2
  4896  11CB  29EF               	goto	l4041
  4897  11CC  0872               	movf	strncmp@n,w
  4898  11CD  0473               	iorwf	strncmp@n+1,w
  4899  11CE  1903               	btfsc	3,2
  4900  11CF  29EF               	goto	l4041
  4901  11D0  0876               	movf	strncmp@r,w
  4902  11D1  0084               	movwf	4
  4903  11D2  0877               	movf	strncmp@r+1,w
  4904  11D3  0085               	movwf	5
  4905  11D4  0800               	movf	0,w	;code access
  4906  11D5  00F4               	movwf	??_strncmp
  4907  11D6  0878               	movf	strncmp@l,w
  4908  11D7  0086               	movwf	6
  4909  11D8  0187               	clrf	7
  4910  11D9  0801               	movf	1,w
  4911  11DA  0674               	xorwf	??_strncmp,w
  4912  11DB  1D03               	btfss	3,2
  4913  11DC  29EF               	goto	l4041
  4914  11DD  3001               	movlw	1
  4915  11DE  00F4               	movwf	??_strncmp
  4916  11DF  0874               	movf	??_strncmp,w
  4917  11E0  07F8               	addwf	strncmp@l,f
  4918  11E1  3001               	movlw	1
  4919  11E2  07F6               	addwf	strncmp@r,f
  4920  11E3  3000               	movlw	0
  4921  11E4  3DF7               	addwfc	strncmp@r+1,f
  4922  11E5  3001               	movlw	1
  4923  11E6  02F2               	subwf	strncmp@n,f
  4924  11E7  3000               	movlw	0
  4925  11E8  3BF3               	subwfb	strncmp@n+1,f
  4926  11E9                     l4033:	
  4927  11E9  0878               	movf	strncmp@l,w
  4928  11EA  0086               	movwf	6
  4929  11EB  0187               	clrf	7
  4930  11EC  0801               	movf	1,w
  4931  11ED  1D03               	btfss	3,2
  4932  11EE  29C5               	goto	l4035
  4933  11EF                     l4041:	
  4934  11EF  0878               	movf	strncmp@l,w
  4935  11F0  0086               	movwf	6
  4936  11F1  0187               	clrf	7
  4937  11F2  0876               	movf	strncmp@r,w
  4938  11F3  0084               	movwf	4
  4939  11F4  0877               	movf	strncmp@r+1,w
  4940  11F5  0085               	movwf	5
  4941  11F6  0800               	movf	0,w	;code access
  4942  11F7  0201               	subwf	1,w
  4943  11F8  00F0               	movwf	?_strncmp
  4944  11F9  01F1               	clrf	?_strncmp+1
  4945  11FA  1C03               	skipc
  4946  11FB  03F1               	decf	?_strncmp+1,f
  4947  11FC  0008               	return
  4948  11FD                     __end_of_strncmp:	
  4949                           
  4950                           	psect	text18
  4951  0195                     __ptext18:	
  4952 ;; *************** function _efgtoa *****************
  4953 ;; Defined at:
  4954 ;;		line 319 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  fp              1    wreg     PTR struct _IO_FILE
  4957 ;;		 -> sprintf@f(5), 
  4958 ;;  f               4   54[BANK0 ] PTR struct _IO_FILE
  4959 ;;  c               1   58[BANK0 ] unsigned char 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  fp              1   28[BANK1 ] PTR struct _IO_FILE
  4962 ;;		 -> sprintf@f(5), 
  4963 ;;  u               4   53[BANK1 ] PTR struct _IO_FILE
  4964 ;;  g               4   45[BANK1 ] PTR struct _IO_FILE
  4965 ;;  l               4   39[BANK1 ] PTR struct _IO_FILE
  4966 ;;  h               4   35[BANK1 ] PTR struct _IO_FILE
  4967 ;;  ou              4    0[BANK1 ] PTR struct _IO_FILE
  4968 ;;  n               2   51[BANK1 ] int 
  4969 ;;  e               2   49[BANK1 ] int 
  4970 ;;  i               2   43[BANK1 ] int 
  4971 ;;  w               2   32[BANK1 ] int 
  4972 ;;  p               2   29[BANK1 ] int 
  4973 ;;  sign            2   26[BANK1 ] int 
  4974 ;;  d               2   24[BANK1 ] int 
  4975 ;;  ne              2   22[BANK1 ] int 
  4976 ;;  m               2   20[BANK1 ] int 
  4977 ;;  pp              2   18[BANK1 ] int 
  4978 ;;  t               2   16[BANK1 ] int 
  4979 ;;  mode            1   34[BANK1 ] unsigned char 
  4980 ;;  nmode           1   31[BANK1 ] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2   54[BANK0 ] int 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 1F/1
  4987 ;;		On exit  : 1F/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4990 ;;      Params:         0       5       0       0       0       0       0       0
  4991 ;;      Locals:         0       0      57       0       0       0       0       0
  4992 ;;      Temps:          0       4       0       0       0       0       0       0
  4993 ;;      Totals:         0       9      57       0       0       0       0       0
  4994 ;;Total ram usage:       66 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    4
  4997 ;; This function calls:
  4998 ;;		___awdiv
  4999 ;;		___awmod
  5000 ;;		___fladd
  5001 ;;		___fldiv
  5002 ;;		___fleq
  5003 ;;		___flge
  5004 ;;		___flmul
  5005 ;;		___flneg
  5006 ;;		___flsub
  5007 ;;		___fltol
  5008 ;;		___fpclassifyf
  5009 ;;		_floorf
  5010 ;;		_isupper
  5011 ;;		_pad
  5012 ;;		_strcpy
  5013 ;;		_tolower
  5014 ;; This function is called by:
  5015 ;;		_vfpfcnvrt
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _efgtoa
  5021  0195                     _efgtoa:	
  5022                           
  5023                           ;incstack = 0
  5024                           ; Regs used in _efgtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5025                           ;efgtoa@fp stored from wreg
  5026  0195  00BC               	movwf	efgtoa@fp^(0+128)
  5027                           
  5028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static
      +                           int efgtoa(FILE *fp, long double f, char c);C:\Program Files (x86)\Microchip\xc8\v2.10\
      +                          pic\sources\c99\common\doprnt.c: 320: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\s
      +                          ources\c99\common\doprnt.c: 321:     char mode, nmode;;C:\Program Files (x86)\Microchip\
      +                          xc8\v2.10\pic\sources\c99\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, 
      +                          t, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 323:  
      +                             long double g, h, l, ou, u;
  5029  0196  01BA               	clrf	efgtoa@sign^(0+128)
  5030  0197  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  5031                           
  5032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g 
      +                          = f;
  5033  0198  0020               	movlb	0	; select bank0
  5034  0199  0859               	movf	efgtoa@f+3,w
  5035  019A  0021               	movlb	1	; select bank1
  5036  019B  00D0               	movwf	(efgtoa@g+3)^(0+128)
  5037  019C  0020               	movlb	0	; select bank0
  5038  019D  0858               	movf	efgtoa@f+2,w
  5039  019E  0021               	movlb	1	; select bank1
  5040  019F  00CF               	movwf	(efgtoa@g+2)^(0+128)
  5041  01A0  0020               	movlb	0	; select bank0
  5042  01A1  0857               	movf	efgtoa@f+1,w
  5043  01A2  0021               	movlb	1	; select bank1
  5044  01A3  00CE               	movwf	(efgtoa@g+1)^(0+128)
  5045  01A4  0020               	movlb	0	; select bank0
  5046  01A5  0856               	movf	efgtoa@f,w
  5047  01A6  0021               	movlb	1	; select bank1
  5048  01A7  00CD               	movwf	efgtoa@g^(0+128)
  5049                           
  5050                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if
      +                           (g < 0.0) {
  5051  01A8  0850               	movf	(efgtoa@g+3)^(0+128),w
  5052  01A9  0020               	movlb	0	; select bank0
  5053  01AA  00BD               	movwf	___flge@ff1+3
  5054  01AB  0021               	movlb	1	; select bank1
  5055  01AC  084F               	movf	(efgtoa@g+2)^(0+128),w
  5056  01AD  0020               	movlb	0	; select bank0
  5057  01AE  00BC               	movwf	___flge@ff1+2
  5058  01AF  0021               	movlb	1	; select bank1
  5059  01B0  084E               	movf	(efgtoa@g+1)^(0+128),w
  5060  01B1  0020               	movlb	0	; select bank0
  5061  01B2  00BB               	movwf	___flge@ff1+1
  5062  01B3  0021               	movlb	1	; select bank1
  5063  01B4  084D               	movf	efgtoa@g^(0+128),w
  5064  01B5  0020               	movlb	0	; select bank0
  5065  01B6  00BA               	movwf	___flge@ff1
  5066  01B7  3000               	movlw	0
  5067  01B8  00C1               	movwf	___flge@ff2+3
  5068  01B9  3000               	movlw	0
  5069  01BA  00C0               	movwf	___flge@ff2+2
  5070  01BB  3000               	movlw	0
  5071  01BC  00BF               	movwf	___flge@ff2+1
  5072  01BD  3000               	movlw	0
  5073  01BE  00BE               	movwf	___flge@ff2
  5074  01BF  3194  2419  3181   	fcall	___flge
  5075  01C2  1803               	btfsc	3,0
  5076  01C3  29DC               	goto	l3693
  5077                           
  5078                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:       
      +                            sign = 1;
  5079  01C4  3001               	movlw	1
  5080  01C5  0021               	movlb	1	; select bank1
  5081  01C6  00BA               	movwf	efgtoa@sign^(0+128)
  5082  01C7  3000               	movlw	0
  5083  01C8  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  5084                           
  5085                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:       
      +                            g = -g;
  5086  01C9  0850               	movf	(efgtoa@g+3)^(0+128),w
  5087  01CA  00F3               	movwf	___flneg@f1+3
  5088  01CB  084F               	movf	(efgtoa@g+2)^(0+128),w
  5089  01CC  00F2               	movwf	___flneg@f1+2
  5090  01CD  084E               	movf	(efgtoa@g+1)^(0+128),w
  5091  01CE  00F1               	movwf	___flneg@f1+1
  5092  01CF  084D               	movf	efgtoa@g^(0+128),w
  5093  01D0  00F0               	movwf	___flneg@f1
  5094  01D1  319E  263D  3181   	fcall	___flneg
  5095  01D4  0873               	movf	?___flneg+3,w
  5096  01D5  00D0               	movwf	(efgtoa@g+3)^(0+128)
  5097  01D6  0872               	movf	?___flneg+2,w
  5098  01D7  00CF               	movwf	(efgtoa@g+2)^(0+128)
  5099  01D8  0871               	movf	?___flneg+1,w
  5100  01D9  00CE               	movwf	(efgtoa@g+1)^(0+128)
  5101  01DA  0870               	movf	?___flneg,w
  5102  01DB  00CD               	movwf	efgtoa@g^(0+128)
  5103  01DC                     l3693:	
  5104                           
  5105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n 
      +                          = 0;
  5106  01DC  0021               	movlb	1	; select bank1
  5107  01DD  01D3               	clrf	efgtoa@n^(0+128)
  5108  01DE  01D4               	clrf	(efgtoa@n+1)^(0+128)
  5109                           
  5110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w 
      +                          = width;
  5111  01DF  0022               	movlb	2	; select bank2
  5112  01E0  083B               	movf	(_width+1)^(0+256),w
  5113  01E1  0021               	movlb	1	; select bank1
  5114  01E2  00C1               	movwf	(efgtoa@w+1)^(0+128)
  5115  01E3  0022               	movlb	2	; select bank2
  5116  01E4  083A               	movf	_width^(0+256),w
  5117  01E5  0021               	movlb	1	; select bank1
  5118  01E6  00C0               	movwf	efgtoa@w^(0+128)
  5119                           
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if
      +                           (sign || (flags & (1 << 2))) {
  5121  01E7  083A               	movf	efgtoa@sign^(0+128),w
  5122  01E8  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  5123  01E9  1D03               	btfss	3,2
  5124  01EA  29EE               	goto	l3701
  5125  01EB  0022               	movlb	2	; select bank2
  5126  01EC  1D3E               	btfss	_flags^(0+256),2
  5127  01ED  2A08               	goto	l3713
  5128  01EE                     l3701:	
  5129                           
  5130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:       
      +                            dbuf[n] = sign ? '-' : '+';
  5131  01EE  0021               	movlb	1	; select bank1
  5132  01EF  083A               	movf	efgtoa@sign^(0+128),w
  5133  01F0  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  5134  01F1  1D03               	btfss	3,2
  5135  01F2  29F5               	goto	l3705
  5136  01F3  302B               	movlw	43
  5137  01F4  29F6               	goto	L2
  5138  01F5                     l3705:	
  5139  01F5  302D               	movlw	45
  5140  01F6                     L2:	
  5141  01F6  00A4               	movwf	_efgtoa$699^(0+128)
  5142  01F7  3000               	movlw	0
  5143  01F8  00A5               	movwf	(_efgtoa$699^(0+128)+1)
  5144  01F9  0824               	movf	_efgtoa$699^(0+128),w
  5145  01FA  0020               	movlb	0	; select bank0
  5146  01FB  00DB               	movwf	??_efgtoa
  5147  01FC  085B               	movf	??_efgtoa,w
  5148  01FD  0023               	movlb	3	; select bank3
  5149  01FE  00A0               	movwf	_dbuf^(0+384)
  5150                           
  5151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:       
      +                            ++n;
  5152  01FF  3001               	movlw	1
  5153  0200  0021               	movlb	1	; select bank1
  5154  0201  07D3               	addwf	efgtoa@n^(0+128),f
  5155  0202  3000               	movlw	0
  5156  0203  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  5157                           
  5158                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:       
      +                            --w;
  5159  0204  30FF               	movlw	255
  5160  0205  07C0               	addwf	efgtoa@w^(0+128),f
  5161  0206  30FF               	movlw	255
  5162  0207  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5163  0208                     l3713:	
  5164                           
  5165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5166  0208  0021               	movlb	1	; select bank1
  5167  0209  0850               	movf	(efgtoa@g+3)^(0+128),w
  5168  020A  00F3               	movwf	___fpclassifyf@x+3
  5169  020B  084F               	movf	(efgtoa@g+2)^(0+128),w
  5170  020C  00F2               	movwf	___fpclassifyf@x+2
  5171  020D  084E               	movf	(efgtoa@g+1)^(0+128),w
  5172  020E  00F1               	movwf	___fpclassifyf@x+1
  5173  020F  084D               	movf	efgtoa@g^(0+128),w
  5174  0210  00F0               	movwf	___fpclassifyf@x
  5175  0211  3193  23A1  3181   	fcall	___fpclassifyf
  5176  0214  0370               	decf	?___fpclassifyf,w
  5177  0215  0471               	iorwf	?___fpclassifyf+1,w
  5178  0216  1D03               	btfss	3,2
  5179  0217  2A5D               	goto	l3731
  5180  0218  085A               	movf	efgtoa@c,w
  5181  0219  3EBF               	addlw	191
  5182  021A  00DB               	movwf	??_efgtoa
  5183  021B  30FF               	movlw	255
  5184  021C  1803               	skipnc
  5185  021D  3000               	movlw	0
  5186  021E  00DC               	movwf	??_efgtoa+1
  5187  021F  3000               	movlw	0
  5188  0220  025C               	subwf	??_efgtoa+1,w
  5189  0221  301A               	movlw	26
  5190  0222  1903               	skipnz
  5191  0223  025B               	subwf	??_efgtoa,w
  5192  0224  1803               	btfsc	3,0
  5193  0225  2A28               	goto	u4820
  5194  0226  3001               	movlw	1
  5195  0227  2A29               	goto	u4830
  5196  0228                     u4820:	
  5197  0228  3000               	movlw	0
  5198  0229                     u4830:	
  5199  0229  00DD               	movwf	??_efgtoa+2
  5200  022A  01DE               	clrf	??_efgtoa+3
  5201  022B  085D               	movf	??_efgtoa+2,w
  5202  022C  0021               	movlb	1	; select bank1
  5203  022D  00A6               	movwf	_efgtoa$700^(0+128)
  5204  022E  0020               	movlb	0	; select bank0
  5205  022F  085E               	movf	??_efgtoa+3,w
  5206  0230  0021               	movlb	1	; select bank1
  5207  0231  00A7               	movwf	(_efgtoa$700+1)^(0+128)
  5208  0232  0826               	movf	_efgtoa$700^(0+128),w
  5209  0233  0427               	iorwf	(_efgtoa$700+1)^(0+128),w
  5210  0234  1903               	btfsc	3,2
  5211  0235  2A3A               	goto	l3723
  5212                           
  5213                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:       
      +                                strcpy(&dbuf[n], "INF");
  5214  0236  3025               	movlw	low (STR_11| (0+32768))
  5215  0237  00F0               	movwf	strcpy@src
  5216  0238  3098               	movlw	high (STR_11| (0+32768))
  5217  0239  2A3D               	goto	L3
  5218  023A                     l3723:	
  5219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:       
      +                            } else {
  5220                           
  5221                           
  5222                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:       
      +                                strcpy(&dbuf[n], "inf");
  5223  023A  302D               	movlw	low (STR_12| (0+32768))
  5224  023B  00F0               	movwf	strcpy@src
  5225  023C  3098               	movlw	high (STR_12| (0+32768))
  5226  023D                     L3:	
  5227  023D  00F1               	movwf	strcpy@src+1
  5228  023E  0853               	movf	efgtoa@n^(0+128),w
  5229  023F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5230  0240  319F  279B  3181   	fcall	_strcpy
  5231                           
  5232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  5233  0243  30FD               	movlw	253
  5234  0244  07C0               	addwf	efgtoa@w^(0+128),f
  5235  0245  30FF               	movlw	255
  5236  0246  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5237                           
  5238                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:       
      +                            return pad(fp, &dbuf[0], w);
  5239  0247  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5240  0248  0020               	movlb	0	; select bank0
  5241  0249  00DB               	movwf	??_efgtoa
  5242  024A  085B               	movf	??_efgtoa,w
  5243  024B  00A4               	movwf	pad@buf
  5244  024C  0021               	movlb	1	; select bank1
  5245  024D  0841               	movf	(efgtoa@w+1)^(0+128),w
  5246  024E  0020               	movlb	0	; select bank0
  5247  024F  00A6               	movwf	pad@p+1
  5248  0250  0021               	movlb	1	; select bank1
  5249  0251  0840               	movf	efgtoa@w^(0+128),w
  5250  0252  0020               	movlb	0	; select bank0
  5251  0253  00A5               	movwf	pad@p
  5252  0254  0021               	movlb	1	; select bank1
  5253  0255  083C               	movf	efgtoa@fp^(0+128),w
  5254  0256  3192  224C         	fcall	_pad
  5255  0258  0825               	movf	?_pad+1,w
  5256  0259  00D7               	movwf	?_efgtoa+1
  5257  025A  0824               	movf	?_pad,w
  5258  025B  00D6               	movwf	?_efgtoa
  5259  025C  0008               	return
  5260  025D                     l3731:	
  5261                           
  5262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:       
      +                            if ((0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5263  025D  0021               	movlb	1	; select bank1
  5264  025E  0850               	movf	(efgtoa@g+3)^(0+128),w
  5265  025F  00F3               	movwf	___fpclassifyf@x+3
  5266  0260  084F               	movf	(efgtoa@g+2)^(0+128),w
  5267  0261  00F2               	movwf	___fpclassifyf@x+2
  5268  0262  084E               	movf	(efgtoa@g+1)^(0+128),w
  5269  0263  00F1               	movwf	___fpclassifyf@x+1
  5270  0264  084D               	movf	efgtoa@g^(0+128),w
  5271  0265  00F0               	movwf	___fpclassifyf@x
  5272  0266  3193  23A1  3181   	fcall	___fpclassifyf
  5273  0269  0870               	movf	?___fpclassifyf,w
  5274  026A  0471               	iorwf	?___fpclassifyf+1,w
  5275  026B  1D03               	btfss	3,2
  5276  026C  2AB2               	goto	l3749
  5277  026D  085A               	movf	efgtoa@c,w
  5278  026E  3EBF               	addlw	191
  5279  026F  00DB               	movwf	??_efgtoa
  5280  0270  30FF               	movlw	255
  5281  0271  1803               	skipnc
  5282  0272  3000               	movlw	0
  5283  0273  00DC               	movwf	??_efgtoa+1
  5284  0274  3000               	movlw	0
  5285  0275  025C               	subwf	??_efgtoa+1,w
  5286  0276  301A               	movlw	26
  5287  0277  1903               	skipnz
  5288  0278  025B               	subwf	??_efgtoa,w
  5289  0279  1803               	btfsc	3,0
  5290  027A  2A7D               	goto	u4860
  5291  027B  3001               	movlw	1
  5292  027C  2A7E               	goto	u4870
  5293  027D                     u4860:	
  5294  027D  3000               	movlw	0
  5295  027E                     u4870:	
  5296  027E  00DD               	movwf	??_efgtoa+2
  5297  027F  01DE               	clrf	??_efgtoa+3
  5298  0280  085D               	movf	??_efgtoa+2,w
  5299  0281  0021               	movlb	1	; select bank1
  5300  0282  00A8               	movwf	_efgtoa$705^(0+128)
  5301  0283  0020               	movlb	0	; select bank0
  5302  0284  085E               	movf	??_efgtoa+3,w
  5303  0285  0021               	movlb	1	; select bank1
  5304  0286  00A9               	movwf	(_efgtoa$705+1)^(0+128)
  5305  0287  0828               	movf	_efgtoa$705^(0+128),w
  5306  0288  0429               	iorwf	(_efgtoa$705+1)^(0+128),w
  5307  0289  1903               	btfsc	3,2
  5308  028A  2A8F               	goto	l3741
  5309                           
  5310                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:       
      +                                strcpy(&dbuf[n], "NAN");
  5311  028B  3029               	movlw	low (STR_15| (0+32768))
  5312  028C  00F0               	movwf	strcpy@src
  5313  028D  3098               	movlw	high (STR_15| (0+32768))
  5314  028E  2A92               	goto	L4
  5315  028F                     l3741:	
  5316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:       
      +                            } else {
  5317                           
  5318                           
  5319                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:       
      +                                strcpy(&dbuf[n], "nan");
  5320  028F  3031               	movlw	low (STR_16| (0+32768))
  5321  0290  00F0               	movwf	strcpy@src
  5322  0291  3098               	movlw	high (STR_16| (0+32768))
  5323  0292                     L4:	
  5324  0292  00F1               	movwf	strcpy@src+1
  5325  0293  0853               	movf	efgtoa@n^(0+128),w
  5326  0294  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  5327  0295  319F  279B  3181   	fcall	_strcpy
  5328                           
  5329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 358:       
      +                            w -= ((sizeof("inf")/sizeof("inf"[0]))-1);
  5330  0298  30FD               	movlw	253
  5331  0299  07C0               	addwf	efgtoa@w^(0+128),f
  5332  029A  30FF               	movlw	255
  5333  029B  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  5334                           
  5335                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 359:       
      +                            return pad(fp, &dbuf[0], w);
  5336  029C  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  5337  029D  0020               	movlb	0	; select bank0
  5338  029E  00DB               	movwf	??_efgtoa
  5339  029F  085B               	movf	??_efgtoa,w
  5340  02A0  00A4               	movwf	pad@buf
  5341  02A1  0021               	movlb	1	; select bank1
  5342  02A2  0841               	movf	(efgtoa@w+1)^(0+128),w
  5343  02A3  0020               	movlb	0	; select bank0
  5344  02A4  00A6               	movwf	pad@p+1
  5345  02A5  0021               	movlb	1	; select bank1
  5346  02A6  0840               	movf	efgtoa@w^(0+128),w
  5347  02A7  0020               	movlb	0	; select bank0
  5348  02A8  00A5               	movwf	pad@p
  5349  02A9  0021               	movlb	1	; select bank1
  5350  02AA  083C               	movf	efgtoa@fp^(0+128),w
  5351  02AB  3192  224C         	fcall	_pad
  5352  02AD  0825               	movf	?_pad+1,w
  5353  02AE  00D7               	movwf	?_efgtoa+1
  5354  02AF  0824               	movf	?_pad,w
  5355  02B0  00D6               	movwf	?_efgtoa
  5356  02B1  0008               	return
  5357  02B2                     l3749:	
  5358                           
  5359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u 
      +                          = 1.0;
  5360  02B2  303F               	movlw	63
  5361  02B3  0021               	movlb	1	; select bank1
  5362  02B4  00D8               	movwf	(efgtoa@u+3)^(0+128)
  5363  02B5  3080               	movlw	128
  5364  02B6  00D7               	movwf	(efgtoa@u+2)^(0+128)
  5365  02B7  3000               	movlw	0
  5366  02B8  00D6               	movwf	(efgtoa@u+1)^(0+128)
  5367  02B9  3000               	movlw	0
  5368  02BA  00D5               	movwf	efgtoa@u^(0+128)
  5369                           
  5370                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e 
      +                          = 0;
  5371  02BB  01D1               	clrf	efgtoa@e^(0+128)
  5372  02BC  01D2               	clrf	(efgtoa@e+1)^(0+128)
  5373                           
  5374                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if
      +                           (!(g == 0.0)) {
  5375  02BD  0850               	movf	(efgtoa@g+3)^(0+128),w
  5376  02BE  00F3               	movwf	___fleq@ff1+3
  5377  02BF  084F               	movf	(efgtoa@g+2)^(0+128),w
  5378  02C0  00F2               	movwf	___fleq@ff1+2
  5379  02C1  084E               	movf	(efgtoa@g+1)^(0+128),w
  5380  02C2  00F1               	movwf	___fleq@ff1+1
  5381  02C3  084D               	movf	efgtoa@g^(0+128),w
  5382  02C4  00F0               	movwf	___fleq@ff1
  5383  02C5  3000               	movlw	0
  5384  02C6  00F7               	movwf	___fleq@ff2+3
  5385  02C7  3000               	movlw	0
  5386  02C8  00F6               	movwf	___fleq@ff2+2
  5387  02C9  3000               	movlw	0
  5388  02CA  00F5               	movwf	___fleq@ff2+1
  5389  02CB  3000               	movlw	0
  5390  02CC  00F4               	movwf	___fleq@ff2
  5391  02CD  3191  211B  3181   	fcall	___fleq
  5392  02D0  1C03               	btfss	3,0
  5393  02D1  2B01               	goto	l3761
  5394  02D2  2B7F               	goto	l3769
  5395  02D3                     l3757:	
  5396                           
  5397                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:       
      +                                u = u*10.0;
  5398  02D3  3041               	movlw	65
  5399  02D4  00A3               	movwf	___flmul@b+3
  5400  02D5  3020               	movlw	32
  5401  02D6  00A2               	movwf	___flmul@b+2
  5402  02D7  3000               	movlw	0
  5403  02D8  00A1               	movwf	___flmul@b+1
  5404  02D9  3000               	movlw	0
  5405  02DA  00A0               	movwf	___flmul@b
  5406  02DB  0021               	movlb	1	; select bank1
  5407  02DC  0858               	movf	(efgtoa@u+3)^(0+128),w
  5408  02DD  0020               	movlb	0	; select bank0
  5409  02DE  00A7               	movwf	___flmul@a+3
  5410  02DF  0021               	movlb	1	; select bank1
  5411  02E0  0857               	movf	(efgtoa@u+2)^(0+128),w
  5412  02E1  0020               	movlb	0	; select bank0
  5413  02E2  00A6               	movwf	___flmul@a+2
  5414  02E3  0021               	movlb	1	; select bank1
  5415  02E4  0856               	movf	(efgtoa@u+1)^(0+128),w
  5416  02E5  0020               	movlb	0	; select bank0
  5417  02E6  00A5               	movwf	___flmul@a+1
  5418  02E7  0021               	movlb	1	; select bank1
  5419  02E8  0855               	movf	efgtoa@u^(0+128),w
  5420  02E9  0020               	movlb	0	; select bank0
  5421  02EA  00A4               	movwf	___flmul@a
  5422  02EB  318B  239F  3181   	fcall	___flmul
  5423  02EE  0823               	movf	?___flmul+3,w
  5424  02EF  0021               	movlb	1	; select bank1
  5425  02F0  00D8               	movwf	(efgtoa@u+3)^(0+128)
  5426  02F1  0020               	movlb	0	; select bank0
  5427  02F2  0822               	movf	?___flmul+2,w
  5428  02F3  0021               	movlb	1	; select bank1
  5429  02F4  00D7               	movwf	(efgtoa@u+2)^(0+128)
  5430  02F5  0020               	movlb	0	; select bank0
  5431  02F6  0821               	movf	?___flmul+1,w
  5432  02F7  0021               	movlb	1	; select bank1
  5433  02F8  00D6               	movwf	(efgtoa@u+1)^(0+128)
  5434  02F9  0020               	movlb	0	; select bank0
  5435  02FA  0820               	movf	?___flmul,w
  5436  02FB  0021               	movlb	1	; select bank1
  5437  02FC  00D5               	movwf	efgtoa@u^(0+128)
  5438                           
  5439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:       
      +                                ++e;
  5440  02FD  3001               	movlw	1
  5441  02FE  07D1               	addwf	efgtoa@e^(0+128),f
  5442  02FF  3000               	movlw	0
  5443  0300  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  5444  0301                     l3761:	
  5445                           
  5446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:       
      +                            while (!(g < (u*10.0))) {
  5447  0301  0850               	movf	(efgtoa@g+3)^(0+128),w
  5448  0302  0020               	movlb	0	; select bank0
  5449  0303  00BD               	movwf	___flge@ff1+3
  5450  0304  0021               	movlb	1	; select bank1
  5451  0305  084F               	movf	(efgtoa@g+2)^(0+128),w
  5452  0306  0020               	movlb	0	; select bank0
  5453  0307  00BC               	movwf	___flge@ff1+2
  5454  0308  0021               	movlb	1	; select bank1
  5455  0309  084E               	movf	(efgtoa@g+1)^(0+128),w
  5456  030A  0020               	movlb	0	; select bank0
  5457  030B  00BB               	movwf	___flge@ff1+1
  5458  030C  0021               	movlb	1	; select bank1
  5459  030D  084D               	movf	efgtoa@g^(0+128),w
  5460  030E  0020               	movlb	0	; select bank0
  5461  030F  00BA               	movwf	___flge@ff1
  5462  0310  3041               	movlw	65
  5463  0311  00A3               	movwf	___flmul@b+3
  5464  0312  3020               	movlw	32
  5465  0313  00A2               	movwf	___flmul@b+2
  5466  0314  3000               	movlw	0
  5467  0315  00A1               	movwf	___flmul@b+1
  5468  0316  3000               	movlw	0
  5469  0317  00A0               	movwf	___flmul@b
  5470  0318  0021               	movlb	1	; select bank1
  5471  0319  0858               	movf	(efgtoa@u+3)^(0+128),w
  5472  031A  0020               	movlb	0	; select bank0
  5473  031B  00A7               	movwf	___flmul@a+3
  5474  031C  0021               	movlb	1	; select bank1
  5475  031D  0857               	movf	(efgtoa@u+2)^(0+128),w
  5476  031E  0020               	movlb	0	; select bank0
  5477  031F  00A6               	movwf	___flmul@a+2
  5478  0320  0021               	movlb	1	; select bank1
  5479  0321  0856               	movf	(efgtoa@u+1)^(0+128),w
  5480  0322  0020               	movlb	0	; select bank0
  5481  0323  00A5               	movwf	___flmul@a+1
  5482  0324  0021               	movlb	1	; select bank1
  5483  0325  0855               	movf	efgtoa@u^(0+128),w
  5484  0326  0020               	movlb	0	; select bank0
  5485  0327  00A4               	movwf	___flmul@a
  5486  0328  318B  239F  3181   	fcall	___flmul
  5487  032B  0823               	movf	?___flmul+3,w
  5488  032C  00C1               	movwf	___flge@ff2+3
  5489  032D  0822               	movf	?___flmul+2,w
  5490  032E  00C0               	movwf	___flge@ff2+2
  5491  032F  0821               	movf	?___flmul+1,w
  5492  0330  00BF               	movwf	___flge@ff2+1
  5493  0331  0820               	movf	?___flmul,w
  5494  0332  00BE               	movwf	___flge@ff2
  5495  0333  3194  2419  3181   	fcall	___flge
  5496  0336  1C03               	btfss	3,0
  5497  0337  2B5A               	goto	l3767
  5498  0338  2AD3               	goto	l3757
  5499  0339                     l3763:	
  5500                           
  5501                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:       
      +                                u = u/10.0;
  5502  0339  3041               	movlw	65
  5503  033A  00F3               	movwf	___fldiv@a+3
  5504  033B  3020               	movlw	32
  5505  033C  00F2               	movwf	___fldiv@a+2
  5506  033D  3000               	movlw	0
  5507  033E  00F1               	movwf	___fldiv@a+1
  5508  033F  3000               	movlw	0
  5509  0340  00F0               	movwf	___fldiv@a
  5510  0341  0021               	movlb	1	; select bank1
  5511  0342  0858               	movf	(efgtoa@u+3)^(0+128),w
  5512  0343  00F7               	movwf	___fldiv@b+3
  5513  0344  0857               	movf	(efgtoa@u+2)^(0+128),w
  5514  0345  00F6               	movwf	___fldiv@b+2
  5515  0346  0856               	movf	(efgtoa@u+1)^(0+128),w
  5516  0347  00F5               	movwf	___fldiv@b+1
  5517  0348  0855               	movf	efgtoa@u^(0+128),w
  5518  0349  00F4               	movwf	___fldiv@b
  5519  034A  3180  201B  3181   	fcall	___fldiv
  5520  034D  0873               	movf	?___fldiv+3,w
  5521  034E  0021               	movlb	1	; select bank1
  5522  034F  00D8               	movwf	(efgtoa@u+3)^(0+128)
  5523  0350  0872               	movf	?___fldiv+2,w
  5524  0351  00D7               	movwf	(efgtoa@u+2)^(0+128)
  5525  0352  0871               	movf	?___fldiv+1,w
  5526  0353  00D6               	movwf	(efgtoa@u+1)^(0+128)
  5527  0354  0870               	movf	?___fldiv,w
  5528  0355  00D5               	movwf	efgtoa@u^(0+128)
  5529                           
  5530                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:       
      +                                --e;
  5531  0356  30FF               	movlw	255
  5532  0357  07D1               	addwf	efgtoa@e^(0+128),f
  5533  0358  30FF               	movlw	255
  5534  0359  3DD2               	addwfc	(efgtoa@e+1)^(0+128),f
  5535  035A                     l3767:	
  5536                           
  5537                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:       
      +                            while (g < u) {
  5538  035A  0021               	movlb	1	; select bank1
  5539  035B  0850               	movf	(efgtoa@g+3)^(0+128),w
  5540  035C  0020               	movlb	0	; select bank0
  5541  035D  00BD               	movwf	___flge@ff1+3
  5542  035E  0021               	movlb	1	; select bank1
  5543  035F  084F               	movf	(efgtoa@g+2)^(0+128),w
  5544  0360  0020               	movlb	0	; select bank0
  5545  0361  00BC               	movwf	___flge@ff1+2
  5546  0362  0021               	movlb	1	; select bank1
  5547  0363  084E               	movf	(efgtoa@g+1)^(0+128),w
  5548  0364  0020               	movlb	0	; select bank0
  5549  0365  00BB               	movwf	___flge@ff1+1
  5550  0366  0021               	movlb	1	; select bank1
  5551  0367  084D               	movf	efgtoa@g^(0+128),w
  5552  0368  0020               	movlb	0	; select bank0
  5553  0369  00BA               	movwf	___flge@ff1
  5554  036A  0021               	movlb	1	; select bank1
  5555  036B  0858               	movf	(efgtoa@u+3)^(0+128),w
  5556  036C  0020               	movlb	0	; select bank0
  5557  036D  00C1               	movwf	___flge@ff2+3
  5558  036E  0021               	movlb	1	; select bank1
  5559  036F  0857               	movf	(efgtoa@u+2)^(0+128),w
  5560  0370  0020               	movlb	0	; select bank0
  5561  0371  00C0               	movwf	___flge@ff2+2
  5562  0372  0021               	movlb	1	; select bank1
  5563  0373  0856               	movf	(efgtoa@u+1)^(0+128),w
  5564  0374  0020               	movlb	0	; select bank0
  5565  0375  00BF               	movwf	___flge@ff2+1
  5566  0376  0021               	movlb	1	; select bank1
  5567  0377  0855               	movf	efgtoa@u^(0+128),w
  5568  0378  0020               	movlb	0	; select bank0
  5569  0379  00BE               	movwf	___flge@ff2
  5570  037A  3194  2419  3181   	fcall	___flge
  5571  037D  1C03               	btfss	3,0
  5572  037E  2B39               	goto	l3763
  5573  037F                     l3769:	
  5574                           
  5575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mo
      +                          de = tolower((int)c);
  5576  037F  0020               	movlb	0	; select bank0
  5577  0380  085A               	movf	efgtoa@c,w
  5578  0381  00DB               	movwf	??_efgtoa
  5579  0382  01DC               	clrf	??_efgtoa+1
  5580  0383  085B               	movf	??_efgtoa,w
  5581  0384  00F6               	movwf	tolower@c
  5582  0385  085C               	movf	??_efgtoa+1,w
  5583  0386  00F7               	movwf	tolower@c+1
  5584  0387  319F  27BA  3181   	fcall	_tolower
  5585  038A  0876               	movf	?_tolower,w
  5586  038B  00DD               	movwf	??_efgtoa+2
  5587  038C  085D               	movf	??_efgtoa+2,w
  5588  038D  0021               	movlb	1	; select bank1
  5589  038E  00C2               	movwf	efgtoa@mode^(0+128)
  5590                           
  5591                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nm
      +                          ode = mode;
  5592  038F  0842               	movf	efgtoa@mode^(0+128),w
  5593  0390  0020               	movlb	0	; select bank0
  5594  0391  00DB               	movwf	??_efgtoa
  5595  0392  085B               	movf	??_efgtoa,w
  5596  0393  0021               	movlb	1	; select bank1
  5597  0394  00BF               	movwf	efgtoa@nmode^(0+128)
  5598                           
  5599                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if
      +                           (mode == 'g') {
  5600  0395  3067               	movlw	103
  5601  0396  0642               	xorwf	efgtoa@mode^(0+128),w
  5602  0397  1D03               	btfss	3,2
  5603  0398  2BB5               	goto	l495
  5604                           
  5605                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (
      +                          prec == 0) {
  5606  0399  0022               	movlb	2	; select bank2
  5607  039A  083C               	movf	_prec^(0+256),w
  5608  039B  043D               	iorwf	(_prec+1)^(0+256),w
  5609  039C  1D03               	btfss	3,2
  5610  039D  2BA2               	goto	l496
  5611                           
  5612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    pre
      +                          c = 1;
  5613  039E  3001               	movlw	1
  5614  039F  00BC               	movwf	_prec^(0+256)
  5615  03A0  3000               	movlw	0
  5616  03A1  00BD               	movwf	(_prec^(0+256)+1)
  5617  03A2                     l496:	
  5618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 382:   }
  5619                           
  5620                           
  5621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:       
      +                            p = (0 < prec) ? prec : 6;
  5622  03A2  083D               	movf	(_prec+1)^(0+256),w
  5623  03A3  3A80               	xorlw	128
  5624  03A4  0020               	movlb	0	; select bank0
  5625  03A5  00DB               	movwf	??_efgtoa
  5626  03A6  3080               	movlw	128
  5627  03A7  025B               	subwf	??_efgtoa,w
  5628  03A8  1D03               	skipz
  5629  03A9  2BAD               	goto	u4945
  5630  03AA  3001               	movlw	1
  5631  03AB  0022               	movlb	2	; select bank2
  5632  03AC  023C               	subwf	_prec^(0+256),w
  5633  03AD                     u4945:	
  5634  03AD  1803               	skipnc
  5635  03AE  2BB8               	goto	l3781
  5636  03AF                     l3779:	
  5637  03AF  3006               	movlw	6
  5638  03B0  0021               	movlb	1	; select bank1
  5639  03B1  00BD               	movwf	efgtoa@p^(0+128)
  5640  03B2  3000               	movlw	0
  5641  03B3  00BE               	movwf	(efgtoa@p^(0+128)+1)
  5642  03B4  2BC0               	goto	l3787
  5643  03B5                     l495:	
  5644                           
  5645                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:       
      +                            p = (prec < 0) ? 6 : prec;
  5646  03B5  0022               	movlb	2	; select bank2
  5647  03B6  1BBD               	btfsc	(_prec+1)^(0+256),7
  5648  03B7  2BAF               	goto	l3779
  5649  03B8                     l3781:	
  5650  03B8  0022               	movlb	2	; select bank2
  5651  03B9  083D               	movf	(_prec+1)^(0+256),w
  5652  03BA  0021               	movlb	1	; select bank1
  5653  03BB  00BE               	movwf	(efgtoa@p+1)^(0+128)
  5654  03BC  0022               	movlb	2	; select bank2
  5655  03BD  083C               	movf	_prec^(0+256),w
  5656  03BE  0021               	movlb	1	; select bank1
  5657  03BF  00BD               	movwf	efgtoa@p^(0+128)
  5658  03C0                     l3787:	
  5659                           
  5660                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if
      +                           (mode == 'g') {
  5661  03C0  3067               	movlw	103
  5662  03C1  0642               	xorwf	efgtoa@mode^(0+128),w
  5663  03C2  1D03               	btfss	3,2
  5664  03C3  2BF3               	goto	l506
  5665                           
  5666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:       
      +                            if (!(e < -4) && !((p - 1) < e)) {
  5667  03C4  0852               	movf	(efgtoa@e+1)^(0+128),w
  5668  03C5  3A80               	xorlw	128
  5669  03C6  0020               	movlb	0	; select bank0
  5670  03C7  00DB               	movwf	??_efgtoa
  5671  03C8  307F               	movlw	127
  5672  03C9  025B               	subwf	??_efgtoa,w
  5673  03CA  1D03               	skipz
  5674  03CB  2BCF               	goto	u4975
  5675  03CC  30FC               	movlw	252
  5676  03CD  0021               	movlb	1	; select bank1
  5677  03CE  0251               	subwf	efgtoa@e^(0+128),w
  5678  03CF                     u4975:	
  5679  03CF  1C03               	skipc
  5680  03D0  2BED               	goto	l3795
  5681  03D1  0021               	movlb	1	; select bank1
  5682  03D2  083D               	movf	efgtoa@p^(0+128),w
  5683  03D3  3EFF               	addlw	255
  5684  03D4  0020               	movlb	0	; select bank0
  5685  03D5  00DB               	movwf	??_efgtoa
  5686  03D6  30FF               	movlw	255
  5687  03D7  0021               	movlb	1	; select bank1
  5688  03D8  3D3E               	addwfc	(efgtoa@p+1)^(0+128),w
  5689  03D9  0020               	movlb	0	; select bank0
  5690  03DA  00DC               	movwf	??_efgtoa+1
  5691  03DB  085C               	movf	??_efgtoa+1,w
  5692  03DC  3A80               	xorlw	128
  5693  03DD  00DD               	movwf	??_efgtoa+2
  5694  03DE  0021               	movlb	1	; select bank1
  5695  03DF  0852               	movf	(efgtoa@e+1)^(0+128),w
  5696  03E0  3A80               	xorlw	128
  5697  03E1  0020               	movlb	0	; select bank0
  5698  03E2  025D               	subwf	??_efgtoa+2,w
  5699  03E3  1D03               	skipz
  5700  03E4  2BE9               	goto	u4985
  5701  03E5  0021               	movlb	1	; select bank1
  5702  03E6  0851               	movf	efgtoa@e^(0+128),w
  5703  03E7  0020               	movlb	0	; select bank0
  5704  03E8  025B               	subwf	??_efgtoa,w
  5705  03E9                     u4985:	
  5706  03E9  1C03               	skipc
  5707  03EA  2BED               	goto	l3795
  5708                           
  5709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:       
      +                                nmode = 'f';
  5710  03EB  3066               	movlw	102
  5711  03EC  2BEE               	goto	L5
  5712  03ED                     l3795:	
  5713                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:       
      +                            } else {
  5714                           
  5715                           
  5716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:       
      +                                nmode = 'e';
  5717  03ED  3065               	movlw	101
  5718  03EE                     L5:	
  5719  03EE  0020               	movlb	0	; select bank0
  5720  03EF  00DB               	movwf	??_efgtoa
  5721  03F0  085B               	movf	??_efgtoa,w
  5722  03F1  0021               	movlb	1	; select bank1
  5723  03F2  00BF               	movwf	efgtoa@nmode^(0+128)
  5724  03F3                     l506:	
  5725                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 395:     }
  5726                           
  5727                           
  5728                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m 
      +                          = p;
  5729  03F3  083E               	movf	(efgtoa@p+1)^(0+128),w
  5730  03F4  00B5               	movwf	(efgtoa@m+1)^(0+128)
  5731  03F5  083D               	movf	efgtoa@p^(0+128),w
  5732  03F6  00B4               	movwf	efgtoa@m^(0+128)
  5733                           
  5734                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if
      +                           (!(mode == 'g') || ((nmode == 'f') && (e < 0))) {
  5735  03F7  3067               	movlw	103
  5736  03F8  0642               	xorwf	efgtoa@mode^(0+128),w
  5737  03F9  1D03               	btfss	3,2
  5738  03FA  2C00               	goto	l3803
  5739  03FB  3066               	movlw	102
  5740  03FC  063F               	xorwf	efgtoa@nmode^(0+128),w
  5741  03FD  1903               	btfsc	3,2
  5742  03FE  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  5743  03FF  2C04               	goto	l3805
  5744  0400                     l3803:	
  5745                           
  5746                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:       
      +                            ++m;
  5747  0400  3001               	movlw	1
  5748  0401  07B4               	addwf	efgtoa@m^(0+128),f
  5749  0402  3000               	movlw	0
  5750  0403  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  5751  0404                     l3805:	
  5752                           
  5753                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if
      +                           (nmode == 'f') {
  5754  0404  3066               	movlw	102
  5755  0405  063F               	xorwf	efgtoa@nmode^(0+128),w
  5756  0406  1D03               	btfss	3,2
  5757  0407  2C1C               	goto	l3817
  5758                           
  5759                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:       
      +                            if (e < 0) {
  5760  0408  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  5761  0409  2C14               	goto	l3813
  5762                           
  5763                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:       
      +                                u = 1.0;
  5764  040A  303F               	movlw	63
  5765  040B  00D8               	movwf	(efgtoa@u+3)^(0+128)
  5766  040C  3080               	movlw	128
  5767  040D  00D7               	movwf	(efgtoa@u+2)^(0+128)
  5768  040E  3000               	movlw	0
  5769  040F  00D6               	movwf	(efgtoa@u+1)^(0+128)
  5770  0410  3000               	movlw	0
  5771  0411  00D5               	movwf	efgtoa@u^(0+128)
  5772                           
  5773                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:       
      +                                e = 0;
  5774  0412  01D1               	clrf	efgtoa@e^(0+128)
  5775  0413  01D2               	clrf	(efgtoa@e+1)^(0+128)
  5776  0414                     l3813:	
  5777                           
  5778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:       
      +                            if (!(mode == 'g')) {
  5779  0414  3067               	movlw	103
  5780  0415  0642               	xorwf	efgtoa@mode^(0+128),w
  5781  0416  1903               	btfsc	3,2
  5782  0417  2C1C               	goto	l3817
  5783                           
  5784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:       
      +                                m += e;
  5785  0418  0851               	movf	efgtoa@e^(0+128),w
  5786  0419  07B4               	addwf	efgtoa@m^(0+128),f
  5787  041A  0852               	movf	(efgtoa@e+1)^(0+128),w
  5788  041B  3DB5               	addwfc	(efgtoa@m+1)^(0+128),f
  5789  041C                     l3817:	
  5790                           
  5791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i 
      +                          = 0;
  5792  041C  01CB               	clrf	efgtoa@i^(0+128)
  5793  041D  01CC               	clrf	(efgtoa@i+1)^(0+128)
  5794                           
  5795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h 
      +                          = g;
  5796  041E  0850               	movf	(efgtoa@g+3)^(0+128),w
  5797  041F  00C6               	movwf	(efgtoa@h+3)^(0+128)
  5798  0420  084F               	movf	(efgtoa@g+2)^(0+128),w
  5799  0421  00C5               	movwf	(efgtoa@h+2)^(0+128)
  5800  0422  084E               	movf	(efgtoa@g+1)^(0+128),w
  5801  0423  00C4               	movwf	(efgtoa@h+1)^(0+128)
  5802  0424  084D               	movf	efgtoa@g^(0+128),w
  5803  0425  00C3               	movwf	efgtoa@h^(0+128)
  5804                           
  5805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou
      +                           = u;
  5806  0426  0858               	movf	(efgtoa@u+3)^(0+128),w
  5807  0427  00A3               	movwf	(efgtoa@ou+3)^(0+128)
  5808  0428  0857               	movf	(efgtoa@u+2)^(0+128),w
  5809  0429  00A2               	movwf	(efgtoa@ou+2)^(0+128)
  5810  042A  0856               	movf	(efgtoa@u+1)^(0+128),w
  5811  042B  00A1               	movwf	(efgtoa@ou+1)^(0+128)
  5812  042C  0855               	movf	efgtoa@u^(0+128),w
  5813  042D  00A0               	movwf	efgtoa@ou^(0+128)
  5814  042E                     l3827:	
  5815                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5816                           
  5817                           
  5818                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     wh
      +                          ile (i < m) {
  5819  042E  084C               	movf	(efgtoa@i+1)^(0+128),w
  5820  042F  3A80               	xorlw	128
  5821  0430  0020               	movlb	0	; select bank0
  5822  0431  00DB               	movwf	??_efgtoa
  5823  0432  0021               	movlb	1	; select bank1
  5824  0433  0835               	movf	(efgtoa@m+1)^(0+128),w
  5825  0434  3A80               	xorlw	128
  5826  0435  0020               	movlb	0	; select bank0
  5827  0436  025B               	subwf	??_efgtoa,w
  5828  0437  1D03               	skipz
  5829  0438  2C3C               	goto	u5055
  5830  0439  0021               	movlb	1	; select bank1
  5831  043A  0834               	movf	efgtoa@m^(0+128),w
  5832  043B  024B               	subwf	efgtoa@i^(0+128),w
  5833  043C                     u5055:	
  5834  043C  1803               	btfsc	3,0
  5835  043D  2CEA               	goto	l3829
  5836                           
  5837                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:       
      +                            l = floorf(h/u);
  5838  043E  0021               	movlb	1	; select bank1
  5839  043F  0858               	movf	(efgtoa@u+3)^(0+128),w
  5840  0440  00F3               	movwf	___fldiv@a+3
  5841  0441  0857               	movf	(efgtoa@u+2)^(0+128),w
  5842  0442  00F2               	movwf	___fldiv@a+2
  5843  0443  0856               	movf	(efgtoa@u+1)^(0+128),w
  5844  0444  00F1               	movwf	___fldiv@a+1
  5845  0445  0855               	movf	efgtoa@u^(0+128),w
  5846  0446  00F0               	movwf	___fldiv@a
  5847  0447  0846               	movf	(efgtoa@h+3)^(0+128),w
  5848  0448  00F7               	movwf	___fldiv@b+3
  5849  0449  0845               	movf	(efgtoa@h+2)^(0+128),w
  5850  044A  00F6               	movwf	___fldiv@b+2
  5851  044B  0844               	movf	(efgtoa@h+1)^(0+128),w
  5852  044C  00F5               	movwf	___fldiv@b+1
  5853  044D  0843               	movf	efgtoa@h^(0+128),w
  5854  044E  00F4               	movwf	___fldiv@b
  5855  044F  3180  201B  3181   	fcall	___fldiv
  5856  0452  0873               	movf	?___fldiv+3,w
  5857  0453  00B0               	movwf	floorf@x+3
  5858  0454  0872               	movf	?___fldiv+2,w
  5859  0455  00AF               	movwf	floorf@x+2
  5860  0456  0871               	movf	?___fldiv+1,w
  5861  0457  00AE               	movwf	floorf@x+1
  5862  0458  0870               	movf	?___fldiv,w
  5863  0459  00AD               	movwf	floorf@x
  5864  045A  3196  2648  3181   	fcall	_floorf
  5865  045D  0020               	movlb	0	; select bank0
  5866  045E  0830               	movf	?_floorf+3,w
  5867  045F  0021               	movlb	1	; select bank1
  5868  0460  00CA               	movwf	(efgtoa@l+3)^(0+128)
  5869  0461  0020               	movlb	0	; select bank0
  5870  0462  082F               	movf	?_floorf+2,w
  5871  0463  0021               	movlb	1	; select bank1
  5872  0464  00C9               	movwf	(efgtoa@l+2)^(0+128)
  5873  0465  0020               	movlb	0	; select bank0
  5874  0466  082E               	movf	?_floorf+1,w
  5875  0467  0021               	movlb	1	; select bank1
  5876  0468  00C8               	movwf	(efgtoa@l+1)^(0+128)
  5877  0469  0020               	movlb	0	; select bank0
  5878  046A  082D               	movf	?_floorf,w
  5879  046B  0021               	movlb	1	; select bank1
  5880  046C  00C7               	movwf	efgtoa@l^(0+128)
  5881                           
  5882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:       
      +                            d = (int)l;
  5883  046D  084A               	movf	(efgtoa@l+3)^(0+128),w
  5884  046E  00F3               	movwf	___fltol@f1+3
  5885  046F  0849               	movf	(efgtoa@l+2)^(0+128),w
  5886  0470  00F2               	movwf	___fltol@f1+2
  5887  0471  0848               	movf	(efgtoa@l+1)^(0+128),w
  5888  0472  00F1               	movwf	___fltol@f1+1
  5889  0473  0847               	movf	efgtoa@l^(0+128),w
  5890  0474  00F0               	movwf	___fltol@f1
  5891  0475  3193  233C  3181   	fcall	___fltol
  5892  0478  0871               	movf	?___fltol+1,w
  5893  0479  0021               	movlb	1	; select bank1
  5894  047A  00B9               	movwf	(efgtoa@d+1)^(0+128)
  5895  047B  0870               	movf	?___fltol,w
  5896  047C  00B8               	movwf	efgtoa@d^(0+128)
  5897                           
  5898                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:       
      +                            h -= l*u;
  5899  047D  084A               	movf	(efgtoa@l+3)^(0+128),w
  5900  047E  0020               	movlb	0	; select bank0
  5901  047F  00A7               	movwf	___flmul@a+3
  5902  0480  0021               	movlb	1	; select bank1
  5903  0481  0849               	movf	(efgtoa@l+2)^(0+128),w
  5904  0482  0020               	movlb	0	; select bank0
  5905  0483  00A6               	movwf	___flmul@a+2
  5906  0484  0021               	movlb	1	; select bank1
  5907  0485  0848               	movf	(efgtoa@l+1)^(0+128),w
  5908  0486  0020               	movlb	0	; select bank0
  5909  0487  00A5               	movwf	___flmul@a+1
  5910  0488  0021               	movlb	1	; select bank1
  5911  0489  0847               	movf	efgtoa@l^(0+128),w
  5912  048A  0020               	movlb	0	; select bank0
  5913  048B  00A4               	movwf	___flmul@a
  5914  048C  0021               	movlb	1	; select bank1
  5915  048D  0858               	movf	(efgtoa@u+3)^(0+128),w
  5916  048E  0020               	movlb	0	; select bank0
  5917  048F  00A3               	movwf	___flmul@b+3
  5918  0490  0021               	movlb	1	; select bank1
  5919  0491  0857               	movf	(efgtoa@u+2)^(0+128),w
  5920  0492  0020               	movlb	0	; select bank0
  5921  0493  00A2               	movwf	___flmul@b+2
  5922  0494  0021               	movlb	1	; select bank1
  5923  0495  0856               	movf	(efgtoa@u+1)^(0+128),w
  5924  0496  0020               	movlb	0	; select bank0
  5925  0497  00A1               	movwf	___flmul@b+1
  5926  0498  0021               	movlb	1	; select bank1
  5927  0499  0855               	movf	efgtoa@u^(0+128),w
  5928  049A  0020               	movlb	0	; select bank0
  5929  049B  00A0               	movwf	___flmul@b
  5930  049C  318B  239F  3181   	fcall	___flmul
  5931  049F  0823               	movf	?___flmul+3,w
  5932  04A0  00D1               	movwf	___flsub@a+3
  5933  04A1  0822               	movf	?___flmul+2,w
  5934  04A2  00D0               	movwf	___flsub@a+2
  5935  04A3  0821               	movf	?___flmul+1,w
  5936  04A4  00CF               	movwf	___flsub@a+1
  5937  04A5  0820               	movf	?___flmul,w
  5938  04A6  00CE               	movwf	___flsub@a
  5939  04A7  0021               	movlb	1	; select bank1
  5940  04A8  0846               	movf	(efgtoa@h+3)^(0+128),w
  5941  04A9  0020               	movlb	0	; select bank0
  5942  04AA  00D5               	movwf	___flsub@b+3
  5943  04AB  0021               	movlb	1	; select bank1
  5944  04AC  0845               	movf	(efgtoa@h+2)^(0+128),w
  5945  04AD  0020               	movlb	0	; select bank0
  5946  04AE  00D4               	movwf	___flsub@b+2
  5947  04AF  0021               	movlb	1	; select bank1
  5948  04B0  0844               	movf	(efgtoa@h+1)^(0+128),w
  5949  04B1  0020               	movlb	0	; select bank0
  5950  04B2  00D3               	movwf	___flsub@b+1
  5951  04B3  0021               	movlb	1	; select bank1
  5952  04B4  0843               	movf	efgtoa@h^(0+128),w
  5953  04B5  0020               	movlb	0	; select bank0
  5954  04B6  00D2               	movwf	___flsub@b
  5955  04B7  319F  275F  3181   	fcall	___flsub
  5956  04BA  0851               	movf	?___flsub+3,w
  5957  04BB  0021               	movlb	1	; select bank1
  5958  04BC  00C6               	movwf	(efgtoa@h+3)^(0+128)
  5959  04BD  0020               	movlb	0	; select bank0
  5960  04BE  0850               	movf	?___flsub+2,w
  5961  04BF  0021               	movlb	1	; select bank1
  5962  04C0  00C5               	movwf	(efgtoa@h+2)^(0+128)
  5963  04C1  0020               	movlb	0	; select bank0
  5964  04C2  084F               	movf	?___flsub+1,w
  5965  04C3  0021               	movlb	1	; select bank1
  5966  04C4  00C4               	movwf	(efgtoa@h+1)^(0+128)
  5967  04C5  0020               	movlb	0	; select bank0
  5968  04C6  084E               	movf	?___flsub,w
  5969  04C7  0021               	movlb	1	; select bank1
  5970  04C8  00C3               	movwf	efgtoa@h^(0+128)
  5971                           
  5972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:       
      +                            u = u/10.0;
  5973  04C9  3041               	movlw	65
  5974  04CA  00F3               	movwf	___fldiv@a+3
  5975  04CB  3020               	movlw	32
  5976  04CC  00F2               	movwf	___fldiv@a+2
  5977  04CD  3000               	movlw	0
  5978  04CE  00F1               	movwf	___fldiv@a+1
  5979  04CF  3000               	movlw	0
  5980  04D0  00F0               	movwf	___fldiv@a
  5981  04D1  0858               	movf	(efgtoa@u+3)^(0+128),w
  5982  04D2  00F7               	movwf	___fldiv@b+3
  5983  04D3  0857               	movf	(efgtoa@u+2)^(0+128),w
  5984  04D4  00F6               	movwf	___fldiv@b+2
  5985  04D5  0856               	movf	(efgtoa@u+1)^(0+128),w
  5986  04D6  00F5               	movwf	___fldiv@b+1
  5987  04D7  0855               	movf	efgtoa@u^(0+128),w
  5988  04D8  00F4               	movwf	___fldiv@b
  5989  04D9  3180  201B  3181   	fcall	___fldiv
  5990  04DC  0873               	movf	?___fldiv+3,w
  5991  04DD  0021               	movlb	1	; select bank1
  5992  04DE  00D8               	movwf	(efgtoa@u+3)^(0+128)
  5993  04DF  0872               	movf	?___fldiv+2,w
  5994  04E0  00D7               	movwf	(efgtoa@u+2)^(0+128)
  5995  04E1  0871               	movf	?___fldiv+1,w
  5996  04E2  00D6               	movwf	(efgtoa@u+1)^(0+128)
  5997  04E3  0870               	movf	?___fldiv,w
  5998  04E4  00D5               	movwf	efgtoa@u^(0+128)
  5999                           
  6000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:       
      +                            ++i;
  6001  04E5  3001               	movlw	1
  6002  04E6  07CB               	addwf	efgtoa@i^(0+128),f
  6003  04E7  3000               	movlw	0
  6004  04E8  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  6005  04E9  2C2E               	goto	l3827
  6006  04EA                     l3829:	
  6007                           
  6008                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l 
      +                          = u*5.0;
  6009  04EA  3040               	movlw	64
  6010  04EB  0020               	movlb	0	; select bank0
  6011  04EC  00A3               	movwf	___flmul@b+3
  6012  04ED  30A0               	movlw	160
  6013  04EE  00A2               	movwf	___flmul@b+2
  6014  04EF  3000               	movlw	0
  6015  04F0  00A1               	movwf	___flmul@b+1
  6016  04F1  3000               	movlw	0
  6017  04F2  00A0               	movwf	___flmul@b
  6018  04F3  0021               	movlb	1	; select bank1
  6019  04F4  0858               	movf	(efgtoa@u+3)^(0+128),w
  6020  04F5  0020               	movlb	0	; select bank0
  6021  04F6  00A7               	movwf	___flmul@a+3
  6022  04F7  0021               	movlb	1	; select bank1
  6023  04F8  0857               	movf	(efgtoa@u+2)^(0+128),w
  6024  04F9  0020               	movlb	0	; select bank0
  6025  04FA  00A6               	movwf	___flmul@a+2
  6026  04FB  0021               	movlb	1	; select bank1
  6027  04FC  0856               	movf	(efgtoa@u+1)^(0+128),w
  6028  04FD  0020               	movlb	0	; select bank0
  6029  04FE  00A5               	movwf	___flmul@a+1
  6030  04FF  0021               	movlb	1	; select bank1
  6031  0500  0855               	movf	efgtoa@u^(0+128),w
  6032  0501  0020               	movlb	0	; select bank0
  6033  0502  00A4               	movwf	___flmul@a
  6034  0503  318B  239F  3181   	fcall	___flmul
  6035  0506  0823               	movf	?___flmul+3,w
  6036  0507  0021               	movlb	1	; select bank1
  6037  0508  00CA               	movwf	(efgtoa@l+3)^(0+128)
  6038  0509  0020               	movlb	0	; select bank0
  6039  050A  0822               	movf	?___flmul+2,w
  6040  050B  0021               	movlb	1	; select bank1
  6041  050C  00C9               	movwf	(efgtoa@l+2)^(0+128)
  6042  050D  0020               	movlb	0	; select bank0
  6043  050E  0821               	movf	?___flmul+1,w
  6044  050F  0021               	movlb	1	; select bank1
  6045  0510  00C8               	movwf	(efgtoa@l+1)^(0+128)
  6046  0511  0020               	movlb	0	; select bank0
  6047  0512  0820               	movf	?___flmul,w
  6048  0513  0021               	movlb	1	; select bank1
  6049  0514  00C7               	movwf	efgtoa@l^(0+128)
  6050                           
  6051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if
      +                           (h < l) {
  6052  0515  0846               	movf	(efgtoa@h+3)^(0+128),w
  6053  0516  0020               	movlb	0	; select bank0
  6054  0517  00BD               	movwf	___flge@ff1+3
  6055  0518  0021               	movlb	1	; select bank1
  6056  0519  0845               	movf	(efgtoa@h+2)^(0+128),w
  6057  051A  0020               	movlb	0	; select bank0
  6058  051B  00BC               	movwf	___flge@ff1+2
  6059  051C  0021               	movlb	1	; select bank1
  6060  051D  0844               	movf	(efgtoa@h+1)^(0+128),w
  6061  051E  0020               	movlb	0	; select bank0
  6062  051F  00BB               	movwf	___flge@ff1+1
  6063  0520  0021               	movlb	1	; select bank1
  6064  0521  0843               	movf	efgtoa@h^(0+128),w
  6065  0522  0020               	movlb	0	; select bank0
  6066  0523  00BA               	movwf	___flge@ff1
  6067  0524  0021               	movlb	1	; select bank1
  6068  0525  084A               	movf	(efgtoa@l+3)^(0+128),w
  6069  0526  0020               	movlb	0	; select bank0
  6070  0527  00C1               	movwf	___flge@ff2+3
  6071  0528  0021               	movlb	1	; select bank1
  6072  0529  0849               	movf	(efgtoa@l+2)^(0+128),w
  6073  052A  0020               	movlb	0	; select bank0
  6074  052B  00C0               	movwf	___flge@ff2+2
  6075  052C  0021               	movlb	1	; select bank1
  6076  052D  0848               	movf	(efgtoa@l+1)^(0+128),w
  6077  052E  0020               	movlb	0	; select bank0
  6078  052F  00BF               	movwf	___flge@ff2+1
  6079  0530  0021               	movlb	1	; select bank1
  6080  0531  0847               	movf	efgtoa@l^(0+128),w
  6081  0532  0020               	movlb	0	; select bank0
  6082  0533  00BE               	movwf	___flge@ff2
  6083  0534  3194  2419  3181   	fcall	___flge
  6084  0537  1803               	btfsc	3,0
  6085  0538  2D3C               	goto	l3833
  6086                           
  6087                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:       
      +                            l = 0.0;
  6088  0539  3000               	movlw	0
  6089  053A  0021               	movlb	1	; select bank1
  6090  053B  2D54               	goto	L6
  6091  053C                     l3833:	
  6092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } 
      +                          else {
  6093                           
  6094                           
  6095                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:       
      +                            if ((h == l) && !(d % 2)) {
  6096  053C  0021               	movlb	1	; select bank1
  6097  053D  0846               	movf	(efgtoa@h+3)^(0+128),w
  6098  053E  00F3               	movwf	___fleq@ff1+3
  6099  053F  0845               	movf	(efgtoa@h+2)^(0+128),w
  6100  0540  00F2               	movwf	___fleq@ff1+2
  6101  0541  0844               	movf	(efgtoa@h+1)^(0+128),w
  6102  0542  00F1               	movwf	___fleq@ff1+1
  6103  0543  0843               	movf	efgtoa@h^(0+128),w
  6104  0544  00F0               	movwf	___fleq@ff1
  6105  0545  084A               	movf	(efgtoa@l+3)^(0+128),w
  6106  0546  00F7               	movwf	___fleq@ff2+3
  6107  0547  0849               	movf	(efgtoa@l+2)^(0+128),w
  6108  0548  00F6               	movwf	___fleq@ff2+2
  6109  0549  0848               	movf	(efgtoa@l+1)^(0+128),w
  6110  054A  00F5               	movwf	___fleq@ff2+1
  6111  054B  0847               	movf	efgtoa@l^(0+128),w
  6112  054C  00F4               	movwf	___fleq@ff2
  6113  054D  3191  211B  3181   	fcall	___fleq
  6114  0550  1803               	btfsc	3,0
  6115  0551  1838               	btfsc	efgtoa@d^(0+128),0
  6116  0552  2D5B               	goto	l3839
  6117                           
  6118                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:       
      +                                l = 0.0;
  6119  0553  3000               	movlw	0
  6120  0554                     L6:	
  6121  0554  00CA               	movwf	(efgtoa@l+3)^(0+128)
  6122  0555  3000               	movlw	0
  6123  0556  00C9               	movwf	(efgtoa@l+2)^(0+128)
  6124  0557  3000               	movlw	0
  6125  0558  00C8               	movwf	(efgtoa@l+1)^(0+128)
  6126  0559  3000               	movlw	0
  6127  055A  00C7               	movwf	efgtoa@l^(0+128)
  6128  055B                     l3839:	
  6129                           
  6130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h 
      +                          = g + l;
  6131  055B  084A               	movf	(efgtoa@l+3)^(0+128),w
  6132  055C  0020               	movlb	0	; select bank0
  6133  055D  00BD               	movwf	___fladd@b+3
  6134  055E  0021               	movlb	1	; select bank1
  6135  055F  0849               	movf	(efgtoa@l+2)^(0+128),w
  6136  0560  0020               	movlb	0	; select bank0
  6137  0561  00BC               	movwf	___fladd@b+2
  6138  0562  0021               	movlb	1	; select bank1
  6139  0563  0848               	movf	(efgtoa@l+1)^(0+128),w
  6140  0564  0020               	movlb	0	; select bank0
  6141  0565  00BB               	movwf	___fladd@b+1
  6142  0566  0021               	movlb	1	; select bank1
  6143  0567  0847               	movf	efgtoa@l^(0+128),w
  6144  0568  0020               	movlb	0	; select bank0
  6145  0569  00BA               	movwf	___fladd@b
  6146  056A  0021               	movlb	1	; select bank1
  6147  056B  0850               	movf	(efgtoa@g+3)^(0+128),w
  6148  056C  0020               	movlb	0	; select bank0
  6149  056D  00C1               	movwf	___fladd@a+3
  6150  056E  0021               	movlb	1	; select bank1
  6151  056F  084F               	movf	(efgtoa@g+2)^(0+128),w
  6152  0570  0020               	movlb	0	; select bank0
  6153  0571  00C0               	movwf	___fladd@a+2
  6154  0572  0021               	movlb	1	; select bank1
  6155  0573  084E               	movf	(efgtoa@g+1)^(0+128),w
  6156  0574  0020               	movlb	0	; select bank0
  6157  0575  00BF               	movwf	___fladd@a+1
  6158  0576  0021               	movlb	1	; select bank1
  6159  0577  084D               	movf	efgtoa@g^(0+128),w
  6160  0578  0020               	movlb	0	; select bank0
  6161  0579  00BE               	movwf	___fladd@a
  6162  057A  3189  21BE  3181   	fcall	___fladd
  6163  057D  083D               	movf	?___fladd+3,w
  6164  057E  0021               	movlb	1	; select bank1
  6165  057F  00C6               	movwf	(efgtoa@h+3)^(0+128)
  6166  0580  0020               	movlb	0	; select bank0
  6167  0581  083C               	movf	?___fladd+2,w
  6168  0582  0021               	movlb	1	; select bank1
  6169  0583  00C5               	movwf	(efgtoa@h+2)^(0+128)
  6170  0584  0020               	movlb	0	; select bank0
  6171  0585  083B               	movf	?___fladd+1,w
  6172  0586  0021               	movlb	1	; select bank1
  6173  0587  00C4               	movwf	(efgtoa@h+1)^(0+128)
  6174  0588  0020               	movlb	0	; select bank0
  6175  0589  083A               	movf	?___fladd,w
  6176  058A  0021               	movlb	1	; select bank1
  6177  058B  00C3               	movwf	efgtoa@h^(0+128)
  6178                           
  6179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u 
      +                          = ou;
  6180  058C  0823               	movf	(efgtoa@ou+3)^(0+128),w
  6181  058D  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6182  058E  0822               	movf	(efgtoa@ou+2)^(0+128),w
  6183  058F  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6184  0590  0821               	movf	(efgtoa@ou+1)^(0+128),w
  6185  0591  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6186  0592  0820               	movf	efgtoa@ou^(0+128),w
  6187  0593  00D5               	movwf	efgtoa@u^(0+128)
  6188                           
  6189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne
      +                           = (nmode == 'e') ? 0 : e;
  6190  0594  3065               	movlw	101
  6191  0595  063F               	xorwf	efgtoa@nmode^(0+128),w
  6192  0596  1903               	btfsc	3,2
  6193  0597  2D9D               	goto	l3847
  6194  0598  0852               	movf	(efgtoa@e+1)^(0+128),w
  6195  0599  00B7               	movwf	(efgtoa@ne+1)^(0+128)
  6196  059A  0851               	movf	efgtoa@e^(0+128),w
  6197  059B  00B6               	movwf	efgtoa@ne^(0+128)
  6198  059C  2D9F               	goto	l524
  6199  059D                     l3847:	
  6200  059D  01B6               	clrf	efgtoa@ne^(0+128)
  6201  059E  01B7               	clrf	(efgtoa@ne+1)^(0+128)
  6202  059F                     l524:	
  6203                           
  6204                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp
      +                           = 0;
  6205  059F  01B2               	clrf	efgtoa@pp^(0+128)
  6206  05A0  01B3               	clrf	(efgtoa@pp+1)^(0+128)
  6207                           
  6208                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t 
      +                          = 0;
  6209  05A1  01B0               	clrf	efgtoa@t^(0+128)
  6210  05A2  01B1               	clrf	(efgtoa@t+1)^(0+128)
  6211                           
  6212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i 
      +                          = 0;
  6213  05A3  01CB               	clrf	efgtoa@i^(0+128)
  6214  05A4  01CC               	clrf	(efgtoa@i+1)^(0+128)
  6215                           
  6216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  6217  05A5  2EBA               	goto	l3897
  6218  05A6                     l3849:	
  6219                           
  6220                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:       
      +                            l = floorf(h/u);
  6221  05A6  0021               	movlb	1	; select bank1
  6222  05A7  0858               	movf	(efgtoa@u+3)^(0+128),w
  6223  05A8  00F3               	movwf	___fldiv@a+3
  6224  05A9  0857               	movf	(efgtoa@u+2)^(0+128),w
  6225  05AA  00F2               	movwf	___fldiv@a+2
  6226  05AB  0856               	movf	(efgtoa@u+1)^(0+128),w
  6227  05AC  00F1               	movwf	___fldiv@a+1
  6228  05AD  0855               	movf	efgtoa@u^(0+128),w
  6229  05AE  00F0               	movwf	___fldiv@a
  6230  05AF  0846               	movf	(efgtoa@h+3)^(0+128),w
  6231  05B0  00F7               	movwf	___fldiv@b+3
  6232  05B1  0845               	movf	(efgtoa@h+2)^(0+128),w
  6233  05B2  00F6               	movwf	___fldiv@b+2
  6234  05B3  0844               	movf	(efgtoa@h+1)^(0+128),w
  6235  05B4  00F5               	movwf	___fldiv@b+1
  6236  05B5  0843               	movf	efgtoa@h^(0+128),w
  6237  05B6  00F4               	movwf	___fldiv@b
  6238  05B7  3180  201B  3181   	fcall	___fldiv
  6239  05BA  0873               	movf	?___fldiv+3,w
  6240  05BB  00B0               	movwf	floorf@x+3
  6241  05BC  0872               	movf	?___fldiv+2,w
  6242  05BD  00AF               	movwf	floorf@x+2
  6243  05BE  0871               	movf	?___fldiv+1,w
  6244  05BF  00AE               	movwf	floorf@x+1
  6245  05C0  0870               	movf	?___fldiv,w
  6246  05C1  00AD               	movwf	floorf@x
  6247  05C2  3196  2648  3181   	fcall	_floorf
  6248  05C5  0020               	movlb	0	; select bank0
  6249  05C6  0830               	movf	?_floorf+3,w
  6250  05C7  0021               	movlb	1	; select bank1
  6251  05C8  00CA               	movwf	(efgtoa@l+3)^(0+128)
  6252  05C9  0020               	movlb	0	; select bank0
  6253  05CA  082F               	movf	?_floorf+2,w
  6254  05CB  0021               	movlb	1	; select bank1
  6255  05CC  00C9               	movwf	(efgtoa@l+2)^(0+128)
  6256  05CD  0020               	movlb	0	; select bank0
  6257  05CE  082E               	movf	?_floorf+1,w
  6258  05CF  0021               	movlb	1	; select bank1
  6259  05D0  00C8               	movwf	(efgtoa@l+1)^(0+128)
  6260  05D1  0020               	movlb	0	; select bank0
  6261  05D2  082D               	movf	?_floorf,w
  6262  05D3  0021               	movlb	1	; select bank1
  6263  05D4  00C7               	movwf	efgtoa@l^(0+128)
  6264                           
  6265                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:       
      +                            d = (int)l;
  6266  05D5  084A               	movf	(efgtoa@l+3)^(0+128),w
  6267  05D6  00F3               	movwf	___fltol@f1+3
  6268  05D7  0849               	movf	(efgtoa@l+2)^(0+128),w
  6269  05D8  00F2               	movwf	___fltol@f1+2
  6270  05D9  0848               	movf	(efgtoa@l+1)^(0+128),w
  6271  05DA  00F1               	movwf	___fltol@f1+1
  6272  05DB  0847               	movf	efgtoa@l^(0+128),w
  6273  05DC  00F0               	movwf	___fltol@f1
  6274  05DD  3193  233C  3181   	fcall	___fltol
  6275  05E0  0871               	movf	?___fltol+1,w
  6276  05E1  0021               	movlb	1	; select bank1
  6277  05E2  00B9               	movwf	(efgtoa@d+1)^(0+128)
  6278  05E3  0870               	movf	?___fltol,w
  6279  05E4  00B8               	movwf	efgtoa@d^(0+128)
  6280                           
  6281                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:       
      +                            if (!(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6282  05E5  0022               	movlb	2	; select bank2
  6283  05E6  1A3E               	btfsc	_flags^(0+256),4
  6284  05E7  2DF7               	goto	l3861
  6285  05E8  0021               	movlb	1	; select bank1
  6286  05E9  0838               	movf	efgtoa@d^(0+128),w
  6287  05EA  0439               	iorwf	(efgtoa@d+1)^(0+128),w
  6288  05EB  1D03               	btfss	3,2
  6289  05EC  2DF7               	goto	l3861
  6290  05ED  3067               	movlw	103
  6291  05EE  0642               	xorwf	efgtoa@mode^(0+128),w
  6292  05EF  1903               	btfsc	3,2
  6293  05F0  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  6294  05F1  2DF7               	goto	l3861
  6295                           
  6296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:       
      +                                ++t;
  6297  05F2  3001               	movlw	1
  6298  05F3  07B0               	addwf	efgtoa@t^(0+128),f
  6299  05F4  3000               	movlw	0
  6300  05F5  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  6301                           
  6302                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:       
      +                            } else {
  6303  05F6  2E4A               	goto	l3889
  6304  05F7                     l3861:	
  6305                           
  6306                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:       
      +                                if (!pp && (ne < 0)) {
  6307  05F7  0021               	movlb	1	; select bank1
  6308  05F8  0832               	movf	efgtoa@pp^(0+128),w
  6309  05F9  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  6310  05FA  1903               	btfsc	3,2
  6311  05FB  1FB7               	btfss	(efgtoa@ne+1)^(0+128),7
  6312  05FC  2E16               	goto	l3881
  6313                           
  6314                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:       
      +                                    dbuf[n++] = '.';
  6315  05FD  302E               	movlw	46
  6316  05FE  0020               	movlb	0	; select bank0
  6317  05FF  00DB               	movwf	??_efgtoa
  6318  0600  0021               	movlb	1	; select bank1
  6319  0601  0853               	movf	efgtoa@n^(0+128),w
  6320  0602  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6321  0603  0086               	movwf	6
  6322  0604  3001               	movlw	1	; select bank3/4
  6323  0605  0087               	movwf	7
  6324  0606  0020               	movlb	0	; select bank0
  6325  0607  085B               	movf	??_efgtoa,w
  6326  0608  0081               	movwf	1
  6327  0609  3001               	movlw	1
  6328  060A  0021               	movlb	1	; select bank1
  6329  060B  07D3               	addwf	efgtoa@n^(0+128),f
  6330  060C  3000               	movlw	0
  6331  060D  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6332                           
  6333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:       
      +                                    --w;
  6334  060E  30FF               	movlw	255
  6335  060F  07C0               	addwf	efgtoa@w^(0+128),f
  6336  0610  30FF               	movlw	255
  6337  0611  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6338                           
  6339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:       
      +                                    pp = 1;
  6340  0612  3001               	movlw	1
  6341  0613  00B2               	movwf	efgtoa@pp^(0+128)
  6342  0614  3000               	movlw	0
  6343  0615  00B3               	movwf	(efgtoa@pp^(0+128)+1)
  6344  0616                     l3881:	
  6345                           
  6346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:       
      +                                while (t) {
  6347  0616  0830               	movf	efgtoa@t^(0+128),w
  6348  0617  0431               	iorwf	(efgtoa@t+1)^(0+128),w
  6349  0618  1903               	btfsc	3,2
  6350  0619  2E34               	goto	l3883
  6351                           
  6352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:       
      +                                    dbuf[n++] = '0';
  6353  061A  3030               	movlw	48
  6354  061B  0020               	movlb	0	; select bank0
  6355  061C  00DB               	movwf	??_efgtoa
  6356  061D  0021               	movlb	1	; select bank1
  6357  061E  0853               	movf	efgtoa@n^(0+128),w
  6358  061F  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6359  0620  0086               	movwf	6
  6360  0621  3001               	movlw	1	; select bank3/4
  6361  0622  0087               	movwf	7
  6362  0623  0020               	movlb	0	; select bank0
  6363  0624  085B               	movf	??_efgtoa,w
  6364  0625  0081               	movwf	1
  6365  0626  3001               	movlw	1
  6366  0627  0021               	movlb	1	; select bank1
  6367  0628  07D3               	addwf	efgtoa@n^(0+128),f
  6368  0629  3000               	movlw	0
  6369  062A  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6370                           
  6371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:       
      +                                    --w;
  6372  062B  30FF               	movlw	255
  6373  062C  07C0               	addwf	efgtoa@w^(0+128),f
  6374  062D  30FF               	movlw	255
  6375  062E  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6376                           
  6377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:       
      +                                    --t;
  6378  062F  30FF               	movlw	255
  6379  0630  07B0               	addwf	efgtoa@t^(0+128),f
  6380  0631  30FF               	movlw	255
  6381  0632  3DB1               	addwfc	(efgtoa@t+1)^(0+128),f
  6382  0633  2E16               	goto	l3881
  6383  0634                     l3883:	
  6384                           
  6385                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:       
      +                                dbuf[n++] = '0' + d;
  6386  0634  0838               	movf	efgtoa@d^(0+128),w
  6387  0635  3E30               	addlw	48
  6388  0636  0020               	movlb	0	; select bank0
  6389  0637  00DB               	movwf	??_efgtoa
  6390  0638  0021               	movlb	1	; select bank1
  6391  0639  0853               	movf	efgtoa@n^(0+128),w
  6392  063A  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6393  063B  0086               	movwf	6
  6394  063C  3001               	movlw	1	; select bank3/4
  6395  063D  0087               	movwf	7
  6396  063E  0020               	movlb	0	; select bank0
  6397  063F  085B               	movf	??_efgtoa,w
  6398  0640  0081               	movwf	1
  6399  0641  3001               	movlw	1
  6400  0642  0021               	movlb	1	; select bank1
  6401  0643  07D3               	addwf	efgtoa@n^(0+128),f
  6402  0644  3000               	movlw	0
  6403  0645  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6404                           
  6405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:       
      +                                --w;
  6406  0646  30FF               	movlw	255
  6407  0647  07C0               	addwf	efgtoa@w^(0+128),f
  6408  0648  30FF               	movlw	255
  6409  0649  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6410  064A                     l3889:	
  6411                           
  6412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:       
      +                            h -= l*u;
  6413  064A  084A               	movf	(efgtoa@l+3)^(0+128),w
  6414  064B  0020               	movlb	0	; select bank0
  6415  064C  00A7               	movwf	___flmul@a+3
  6416  064D  0021               	movlb	1	; select bank1
  6417  064E  0849               	movf	(efgtoa@l+2)^(0+128),w
  6418  064F  0020               	movlb	0	; select bank0
  6419  0650  00A6               	movwf	___flmul@a+2
  6420  0651  0021               	movlb	1	; select bank1
  6421  0652  0848               	movf	(efgtoa@l+1)^(0+128),w
  6422  0653  0020               	movlb	0	; select bank0
  6423  0654  00A5               	movwf	___flmul@a+1
  6424  0655  0021               	movlb	1	; select bank1
  6425  0656  0847               	movf	efgtoa@l^(0+128),w
  6426  0657  0020               	movlb	0	; select bank0
  6427  0658  00A4               	movwf	___flmul@a
  6428  0659  0021               	movlb	1	; select bank1
  6429  065A  0858               	movf	(efgtoa@u+3)^(0+128),w
  6430  065B  0020               	movlb	0	; select bank0
  6431  065C  00A3               	movwf	___flmul@b+3
  6432  065D  0021               	movlb	1	; select bank1
  6433  065E  0857               	movf	(efgtoa@u+2)^(0+128),w
  6434  065F  0020               	movlb	0	; select bank0
  6435  0660  00A2               	movwf	___flmul@b+2
  6436  0661  0021               	movlb	1	; select bank1
  6437  0662  0856               	movf	(efgtoa@u+1)^(0+128),w
  6438  0663  0020               	movlb	0	; select bank0
  6439  0664  00A1               	movwf	___flmul@b+1
  6440  0665  0021               	movlb	1	; select bank1
  6441  0666  0855               	movf	efgtoa@u^(0+128),w
  6442  0667  0020               	movlb	0	; select bank0
  6443  0668  00A0               	movwf	___flmul@b
  6444  0669  318B  239F  3181   	fcall	___flmul
  6445  066C  0823               	movf	?___flmul+3,w
  6446  066D  00D1               	movwf	___flsub@a+3
  6447  066E  0822               	movf	?___flmul+2,w
  6448  066F  00D0               	movwf	___flsub@a+2
  6449  0670  0821               	movf	?___flmul+1,w
  6450  0671  00CF               	movwf	___flsub@a+1
  6451  0672  0820               	movf	?___flmul,w
  6452  0673  00CE               	movwf	___flsub@a
  6453  0674  0021               	movlb	1	; select bank1
  6454  0675  0846               	movf	(efgtoa@h+3)^(0+128),w
  6455  0676  0020               	movlb	0	; select bank0
  6456  0677  00D5               	movwf	___flsub@b+3
  6457  0678  0021               	movlb	1	; select bank1
  6458  0679  0845               	movf	(efgtoa@h+2)^(0+128),w
  6459  067A  0020               	movlb	0	; select bank0
  6460  067B  00D4               	movwf	___flsub@b+2
  6461  067C  0021               	movlb	1	; select bank1
  6462  067D  0844               	movf	(efgtoa@h+1)^(0+128),w
  6463  067E  0020               	movlb	0	; select bank0
  6464  067F  00D3               	movwf	___flsub@b+1
  6465  0680  0021               	movlb	1	; select bank1
  6466  0681  0843               	movf	efgtoa@h^(0+128),w
  6467  0682  0020               	movlb	0	; select bank0
  6468  0683  00D2               	movwf	___flsub@b
  6469  0684  319F  275F  3181   	fcall	___flsub
  6470  0687  0851               	movf	?___flsub+3,w
  6471  0688  0021               	movlb	1	; select bank1
  6472  0689  00C6               	movwf	(efgtoa@h+3)^(0+128)
  6473  068A  0020               	movlb	0	; select bank0
  6474  068B  0850               	movf	?___flsub+2,w
  6475  068C  0021               	movlb	1	; select bank1
  6476  068D  00C5               	movwf	(efgtoa@h+2)^(0+128)
  6477  068E  0020               	movlb	0	; select bank0
  6478  068F  084F               	movf	?___flsub+1,w
  6479  0690  0021               	movlb	1	; select bank1
  6480  0691  00C4               	movwf	(efgtoa@h+1)^(0+128)
  6481  0692  0020               	movlb	0	; select bank0
  6482  0693  084E               	movf	?___flsub,w
  6483  0694  0021               	movlb	1	; select bank1
  6484  0695  00C3               	movwf	efgtoa@h^(0+128)
  6485                           
  6486                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:       
      +                            u = u/10.0;
  6487  0696  3041               	movlw	65
  6488  0697  00F3               	movwf	___fldiv@a+3
  6489  0698  3020               	movlw	32
  6490  0699  00F2               	movwf	___fldiv@a+2
  6491  069A  3000               	movlw	0
  6492  069B  00F1               	movwf	___fldiv@a+1
  6493  069C  3000               	movlw	0
  6494  069D  00F0               	movwf	___fldiv@a
  6495  069E  0858               	movf	(efgtoa@u+3)^(0+128),w
  6496  069F  00F7               	movwf	___fldiv@b+3
  6497  06A0  0857               	movf	(efgtoa@u+2)^(0+128),w
  6498  06A1  00F6               	movwf	___fldiv@b+2
  6499  06A2  0856               	movf	(efgtoa@u+1)^(0+128),w
  6500  06A3  00F5               	movwf	___fldiv@b+1
  6501  06A4  0855               	movf	efgtoa@u^(0+128),w
  6502  06A5  00F4               	movwf	___fldiv@b
  6503  06A6  3180  201B  3181   	fcall	___fldiv
  6504  06A9  0873               	movf	?___fldiv+3,w
  6505  06AA  0021               	movlb	1	; select bank1
  6506  06AB  00D8               	movwf	(efgtoa@u+3)^(0+128)
  6507  06AC  0872               	movf	?___fldiv+2,w
  6508  06AD  00D7               	movwf	(efgtoa@u+2)^(0+128)
  6509  06AE  0871               	movf	?___fldiv+1,w
  6510  06AF  00D6               	movwf	(efgtoa@u+1)^(0+128)
  6511  06B0  0870               	movf	?___fldiv,w
  6512  06B1  00D5               	movwf	efgtoa@u^(0+128)
  6513                           
  6514                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:       
      +                            --ne;
  6515  06B2  30FF               	movlw	255
  6516  06B3  07B6               	addwf	efgtoa@ne^(0+128),f
  6517  06B4  30FF               	movlw	255
  6518  06B5  3DB7               	addwfc	(efgtoa@ne+1)^(0+128),f
  6519                           
  6520                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:       
      +                            ++i;
  6521  06B6  3001               	movlw	1
  6522  06B7  07CB               	addwf	efgtoa@i^(0+128),f
  6523  06B8  3000               	movlw	0
  6524  06B9  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  6525  06BA                     l3897:	
  6526                           
  6527                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     wh
      +                          ile ((i < m) && (n < (80 - 5))) {
  6528  06BA  084C               	movf	(efgtoa@i+1)^(0+128),w
  6529  06BB  3A80               	xorlw	128
  6530  06BC  0020               	movlb	0	; select bank0
  6531  06BD  00DB               	movwf	??_efgtoa
  6532  06BE  0021               	movlb	1	; select bank1
  6533  06BF  0835               	movf	(efgtoa@m+1)^(0+128),w
  6534  06C0  3A80               	xorlw	128
  6535  06C1  0020               	movlb	0	; select bank0
  6536  06C2  025B               	subwf	??_efgtoa,w
  6537  06C3  1D03               	skipz
  6538  06C4  2EC8               	goto	u5175
  6539  06C5  0021               	movlb	1	; select bank1
  6540  06C6  0834               	movf	efgtoa@m^(0+128),w
  6541  06C7  024B               	subwf	efgtoa@i^(0+128),w
  6542  06C8                     u5175:	
  6543  06C8  1803               	skipnc
  6544  06C9  2ED8               	goto	l3901
  6545  06CA  0021               	movlb	1	; select bank1
  6546  06CB  0854               	movf	(efgtoa@n+1)^(0+128),w
  6547  06CC  3A80               	xorlw	128
  6548  06CD  0020               	movlb	0	; select bank0
  6549  06CE  00DB               	movwf	??_efgtoa
  6550  06CF  3080               	movlw	128
  6551  06D0  025B               	subwf	??_efgtoa,w
  6552  06D1  1D03               	skipz
  6553  06D2  2ED6               	goto	u5185
  6554  06D3  304B               	movlw	75
  6555  06D4  0021               	movlb	1	; select bank1
  6556  06D5  0253               	subwf	efgtoa@n^(0+128),w
  6557  06D6                     u5185:	
  6558  06D6  1C03               	skipc
  6559  06D7  2DA6               	goto	l3849
  6560  06D8                     l3901:	
  6561                           
  6562                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if
      +                           (!pp && (flags & (1 << 4))) {
  6563  06D8  0021               	movlb	1	; select bank1
  6564  06D9  0832               	movf	efgtoa@pp^(0+128),w
  6565  06DA  0433               	iorwf	(efgtoa@pp+1)^(0+128),w
  6566  06DB  1D03               	btfss	3,2
  6567  06DC  2EF1               	goto	l3909
  6568  06DD  0022               	movlb	2	; select bank2
  6569  06DE  1E3E               	btfss	_flags^(0+256),4
  6570  06DF  2EF1               	goto	l3909
  6571                           
  6572                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:       
      +                            dbuf[n++] = '.';
  6573  06E0  302E               	movlw	46
  6574  06E1  0020               	movlb	0	; select bank0
  6575  06E2  00DB               	movwf	??_efgtoa
  6576  06E3  0021               	movlb	1	; select bank1
  6577  06E4  0853               	movf	efgtoa@n^(0+128),w
  6578  06E5  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6579  06E6  0086               	movwf	6
  6580  06E7  3001               	movlw	1	; select bank3/4
  6581  06E8  0087               	movwf	7
  6582  06E9  0020               	movlb	0	; select bank0
  6583  06EA  085B               	movf	??_efgtoa,w
  6584  06EB  0081               	movwf	1
  6585  06EC  3001               	movlw	1
  6586  06ED  0021               	movlb	1	; select bank1
  6587  06EE  07D3               	addwf	efgtoa@n^(0+128),f
  6588  06EF  3000               	movlw	0
  6589  06F0  3DD4               	addwfc	(efgtoa@n+1)^(0+128),f
  6590  06F1                     l3909:	
  6591                           
  6592                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     db
      +                          uf[n] = '\0';
  6593  06F1  0021               	movlb	1	; select bank1
  6594  06F2  0853               	movf	efgtoa@n^(0+128),w
  6595  06F3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6596  06F4  0086               	movwf	6
  6597  06F5  3001               	movlw	1	; select bank3/4
  6598  06F6  0087               	movwf	7
  6599  06F7  0181               	clrf	1
  6600                           
  6601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if
      +                           (nmode == 'e') {
  6602  06F8  3065               	movlw	101
  6603  06F9  063F               	xorwf	efgtoa@nmode^(0+128),w
  6604  06FA  1D03               	btfss	3,2
  6605  06FB  2FCC               	goto	l3971
  6606                           
  6607                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:       
      +                            i = sizeof(dbuf) - 1;
  6608  06FC  304F               	movlw	79
  6609  06FD  00CB               	movwf	efgtoa@i^(0+128)
  6610  06FE  3000               	movlw	0
  6611  06FF  00CC               	movwf	(efgtoa@i^(0+128)+1)
  6612                           
  6613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:       
      +                            dbuf[i] = '\0';
  6614  0700  084B               	movf	efgtoa@i^(0+128),w
  6615  0701  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6616  0702  0086               	movwf	6
  6617  0703  3001               	movlw	1	; select bank3/4
  6618  0704  0087               	movwf	7
  6619  0705  0181               	clrf	1
  6620                           
  6621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:       
      +                            sign = 0;
  6622  0706  01BA               	clrf	efgtoa@sign^(0+128)
  6623  0707  01BB               	clrf	(efgtoa@sign+1)^(0+128)
  6624                           
  6625                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:       
      +                            if (e < 0) {
  6626  0708  1FD2               	btfss	(efgtoa@e+1)^(0+128),7
  6627  0709  2F13               	goto	l3925
  6628                           
  6629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:       
      +                                sign = 1;
  6630  070A  3001               	movlw	1
  6631  070B  00BA               	movwf	efgtoa@sign^(0+128)
  6632  070C  3000               	movlw	0
  6633  070D  00BB               	movwf	(efgtoa@sign^(0+128)+1)
  6634                           
  6635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:       
      +                                e = -e;
  6636  070E  09D1               	comf	efgtoa@e^(0+128),f
  6637  070F  09D2               	comf	(efgtoa@e+1)^(0+128),f
  6638  0710  0AD1               	incf	efgtoa@e^(0+128),f
  6639  0711  1903               	skipnz
  6640  0712  0AD2               	incf	(efgtoa@e+1)^(0+128),f
  6641  0713                     l3925:	
  6642                           
  6643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:       
      +                            p = 2;
  6644  0713  3002               	movlw	2
  6645  0714  00BD               	movwf	efgtoa@p^(0+128)
  6646  0715  3000               	movlw	0
  6647  0716  00BE               	movwf	(efgtoa@p^(0+128)+1)
  6648  0717                     l3937:	
  6649                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6650                           
  6651                           
  6652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:       
      +                            while (e || (0 < p)) {
  6653  0717  0851               	movf	efgtoa@e^(0+128),w
  6654  0718  0452               	iorwf	(efgtoa@e+1)^(0+128),w
  6655  0719  1903               	btfsc	3,2
  6656  071A  2F5B               	goto	l3939
  6657  071B                     l3927:	
  6658                           
  6659                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:       
      +                                --i;
  6660  071B  30FF               	movlw	255
  6661  071C  0021               	movlb	1	; select bank1
  6662  071D  07CB               	addwf	efgtoa@i^(0+128),f
  6663  071E  30FF               	movlw	255
  6664  071F  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  6665                           
  6666                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:       
      +                                dbuf[i] = '0' + (e % 10);
  6667  0720  300A               	movlw	10
  6668  0721  0020               	movlb	0	; select bank0
  6669  0722  00A0               	movwf	___awmod@divisor
  6670  0723  3000               	movlw	0
  6671  0724  00A1               	movwf	___awmod@divisor+1
  6672  0725  0021               	movlb	1	; select bank1
  6673  0726  0852               	movf	(efgtoa@e+1)^(0+128),w
  6674  0727  0020               	movlb	0	; select bank0
  6675  0728  00A3               	movwf	___awmod@dividend+1
  6676  0729  0021               	movlb	1	; select bank1
  6677  072A  0851               	movf	efgtoa@e^(0+128),w
  6678  072B  0020               	movlb	0	; select bank0
  6679  072C  00A2               	movwf	___awmod@dividend
  6680  072D  3190  20D6  3181   	fcall	___awmod
  6681  0730  0820               	movf	?___awmod,w
  6682  0731  3E30               	addlw	48
  6683  0732  00DB               	movwf	??_efgtoa
  6684  0733  0021               	movlb	1	; select bank1
  6685  0734  084B               	movf	efgtoa@i^(0+128),w
  6686  0735  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6687  0736  0086               	movwf	6
  6688  0737  3001               	movlw	1	; select bank3/4
  6689  0738  0087               	movwf	7
  6690  0739  0020               	movlb	0	; select bank0
  6691  073A  085B               	movf	??_efgtoa,w
  6692  073B  0081               	movwf	1
  6693                           
  6694                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:       
      +                                e = e / 10;
  6695  073C  300A               	movlw	10
  6696  073D  00A0               	movwf	___awdiv@divisor
  6697  073E  3000               	movlw	0
  6698  073F  00A1               	movwf	___awdiv@divisor+1
  6699  0740  0021               	movlb	1	; select bank1
  6700  0741  0852               	movf	(efgtoa@e+1)^(0+128),w
  6701  0742  0020               	movlb	0	; select bank0
  6702  0743  00A3               	movwf	___awdiv@dividend+1
  6703  0744  0021               	movlb	1	; select bank1
  6704  0745  0851               	movf	efgtoa@e^(0+128),w
  6705  0746  0020               	movlb	0	; select bank0
  6706  0747  00A2               	movwf	___awdiv@dividend
  6707  0748  3192  22EB  3181   	fcall	___awdiv
  6708  074B  0821               	movf	?___awdiv+1,w
  6709  074C  0021               	movlb	1	; select bank1
  6710  074D  00D2               	movwf	(efgtoa@e+1)^(0+128)
  6711  074E  0020               	movlb	0	; select bank0
  6712  074F  0820               	movf	?___awdiv,w
  6713  0750  0021               	movlb	1	; select bank1
  6714  0751  00D1               	movwf	efgtoa@e^(0+128)
  6715                           
  6716                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:       
      +                                --p;
  6717  0752  30FF               	movlw	255
  6718  0753  07BD               	addwf	efgtoa@p^(0+128),f
  6719  0754  30FF               	movlw	255
  6720  0755  3DBE               	addwfc	(efgtoa@p+1)^(0+128),f
  6721                           
  6722                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:       
      +                                --w;
  6723  0756  30FF               	movlw	255
  6724  0757  07C0               	addwf	efgtoa@w^(0+128),f
  6725  0758  30FF               	movlw	255
  6726  0759  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6727  075A  2F17               	goto	l3937
  6728  075B                     l3939:	
  6729  075B  083E               	movf	(efgtoa@p+1)^(0+128),w
  6730  075C  3A80               	xorlw	128
  6731  075D  0020               	movlb	0	; select bank0
  6732  075E  00DB               	movwf	??_efgtoa
  6733  075F  3080               	movlw	128
  6734  0760  025B               	subwf	??_efgtoa,w
  6735  0761  1D03               	skipz
  6736  0762  2F66               	goto	u5245
  6737  0763  3001               	movlw	1
  6738  0764  0021               	movlb	1	; select bank1
  6739  0765  023D               	subwf	efgtoa@p^(0+128),w
  6740  0766                     u5245:	
  6741  0766  1803               	skipnc
  6742  0767  2F1B               	goto	l3927
  6743                           
  6744                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:       
      +                            --i;
  6745  0768  30FF               	movlw	255
  6746  0769  0021               	movlb	1	; select bank1
  6747  076A  07CB               	addwf	efgtoa@i^(0+128),f
  6748  076B  30FF               	movlw	255
  6749  076C  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  6750                           
  6751                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:       
      +                            dbuf[i] = sign ? '-' : '+';
  6752  076D  083A               	movf	efgtoa@sign^(0+128),w
  6753  076E  043B               	iorwf	(efgtoa@sign+1)^(0+128),w
  6754  076F  1D03               	btfss	3,2
  6755  0770  2F73               	goto	l3947
  6756  0771  302B               	movlw	43
  6757  0772  2F74               	goto	L7
  6758  0773                     l3947:	
  6759  0773  302D               	movlw	45
  6760  0774                     L7:	
  6761  0774  00AA               	movwf	_efgtoa$709^(0+128)
  6762  0775  3000               	movlw	0
  6763  0776  00AB               	movwf	(_efgtoa$709^(0+128)+1)
  6764  0777  082A               	movf	_efgtoa$709^(0+128),w
  6765  0778  0020               	movlb	0	; select bank0
  6766  0779  00DB               	movwf	??_efgtoa
  6767  077A  0021               	movlb	1	; select bank1
  6768  077B  084B               	movf	efgtoa@i^(0+128),w
  6769  077C  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6770  077D  0086               	movwf	6
  6771  077E  3001               	movlw	1	; select bank3/4
  6772  077F  0087               	movwf	7
  6773  0780  0020               	movlb	0	; select bank0
  6774  0781  085B               	movf	??_efgtoa,w
  6775  0782  0081               	movwf	1
  6776                           
  6777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:       
      +                            --w;
  6778  0783  30FF               	movlw	255
  6779  0784  0021               	movlb	1	; select bank1
  6780  0785  07C0               	addwf	efgtoa@w^(0+128),f
  6781  0786  30FF               	movlw	255
  6782  0787  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6783                           
  6784                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:       
      +                            dbuf[i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6785  0788  30FF               	movlw	255
  6786  0789  07CB               	addwf	efgtoa@i^(0+128),f
  6787  078A  30FF               	movlw	255
  6788  078B  3DCC               	addwfc	(efgtoa@i+1)^(0+128),f
  6789  078C  0020               	movlb	0	; select bank0
  6790  078D  085A               	movf	efgtoa@c,w
  6791  078E  3EBF               	addlw	191
  6792  078F  00DB               	movwf	??_efgtoa
  6793  0790  30FF               	movlw	255
  6794  0791  1803               	skipnc
  6795  0792  3000               	movlw	0
  6796  0793  00DC               	movwf	??_efgtoa+1
  6797  0794  3000               	movlw	0
  6798  0795  025C               	subwf	??_efgtoa+1,w
  6799  0796  301A               	movlw	26
  6800  0797  1903               	skipnz
  6801  0798  025B               	subwf	??_efgtoa,w
  6802  0799  1803               	btfsc	3,0
  6803  079A  2F9D               	goto	u5260
  6804  079B  3001               	movlw	1
  6805  079C  2F9E               	goto	u5270
  6806  079D                     u5260:	
  6807  079D  3000               	movlw	0
  6808  079E                     u5270:	
  6809  079E  00DD               	movwf	??_efgtoa+2
  6810  079F  01DE               	clrf	??_efgtoa+3
  6811  07A0  085D               	movf	??_efgtoa+2,w
  6812  07A1  0021               	movlb	1	; select bank1
  6813  07A2  00AE               	movwf	_efgtoa$711^(0+128)
  6814  07A3  0020               	movlb	0	; select bank0
  6815  07A4  085E               	movf	??_efgtoa+3,w
  6816  07A5  0021               	movlb	1	; select bank1
  6817  07A6  00AF               	movwf	(_efgtoa$711+1)^(0+128)
  6818  07A7  082E               	movf	_efgtoa$711^(0+128),w
  6819  07A8  042F               	iorwf	(_efgtoa$711+1)^(0+128),w
  6820  07A9  1D03               	btfss	3,2
  6821  07AA  2FAD               	goto	l3963
  6822  07AB  3065               	movlw	101
  6823  07AC  2FAE               	goto	L8
  6824  07AD                     l3963:	
  6825  07AD  3045               	movlw	69
  6826  07AE                     L8:	
  6827  07AE  00AC               	movwf	_efgtoa$710^(0+128)
  6828  07AF  3000               	movlw	0
  6829  07B0  00AD               	movwf	(_efgtoa$710^(0+128)+1)
  6830  07B1  082C               	movf	_efgtoa$710^(0+128),w
  6831  07B2  0020               	movlb	0	; select bank0
  6832  07B3  00DB               	movwf	??_efgtoa
  6833  07B4  0021               	movlb	1	; select bank1
  6834  07B5  084B               	movf	efgtoa@i^(0+128),w
  6835  07B6  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6836  07B7  0086               	movwf	6
  6837  07B8  3001               	movlw	1	; select bank3/4
  6838  07B9  0087               	movwf	7
  6839  07BA  0020               	movlb	0	; select bank0
  6840  07BB  085B               	movf	??_efgtoa,w
  6841  07BC  0081               	movwf	1
  6842                           
  6843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:       
      +                            --w;
  6844  07BD  30FF               	movlw	255
  6845  07BE  0021               	movlb	1	; select bank1
  6846  07BF  07C0               	addwf	efgtoa@w^(0+128),f
  6847  07C0  30FF               	movlw	255
  6848  07C1  3DC1               	addwfc	(efgtoa@w+1)^(0+128),f
  6849                           
  6850                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:       
      +                            strcpy(&dbuf[n], &dbuf[i]);
  6851  07C2  084B               	movf	efgtoa@i^(0+128),w
  6852  07C3  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6853  07C4  00F0               	movwf	strcpy@src
  6854  07C5  3001               	movlw	1
  6855  07C6  00F1               	movwf	strcpy@src+1
  6856  07C7  0853               	movf	efgtoa@n^(0+128),w
  6857  07C8  3EA0               	addlw	(low (_dbuf| (0+256)))& (0+255)
  6858  07C9  319F  279B  3181   	fcall	_strcpy
  6859  07CC                     l3971:	
  6860                           
  6861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 502:     re
      +                          turn pad(fp, &dbuf[0], w);
  6862  07CC  30A0               	movlw	(low (_dbuf| (0+256)))& (0+255)
  6863  07CD  0020               	movlb	0	; select bank0
  6864  07CE  00DB               	movwf	??_efgtoa
  6865  07CF  085B               	movf	??_efgtoa,w
  6866  07D0  00A4               	movwf	pad@buf
  6867  07D1  0021               	movlb	1	; select bank1
  6868  07D2  0841               	movf	(efgtoa@w+1)^(0+128),w
  6869  07D3  0020               	movlb	0	; select bank0
  6870  07D4  00A6               	movwf	pad@p+1
  6871  07D5  0021               	movlb	1	; select bank1
  6872  07D6  0840               	movf	efgtoa@w^(0+128),w
  6873  07D7  0020               	movlb	0	; select bank0
  6874  07D8  00A5               	movwf	pad@p
  6875  07D9  0021               	movlb	1	; select bank1
  6876  07DA  083C               	movf	efgtoa@fp^(0+128),w
  6877  07DB  3192  224C         	fcall	_pad
  6878  07DD  0825               	movf	?_pad+1,w
  6879  07DE  00D7               	movwf	?_efgtoa+1
  6880  07DF  0824               	movf	?_pad,w
  6881  07E0  00D6               	movwf	?_efgtoa
  6882  07E1  0008               	return
  6883  07E2                     __end_of_efgtoa:	
  6884                           
  6885                           	psect	text19
  6886  1FBA                     __ptext19:	
  6887 ;; *************** function _tolower *****************
  6888 ;; Defined at:
  6889 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6890 ;; Parameters:    Size  Location     Type
  6891 ;;  c               2    6[COMMON] int 
  6892 ;; Auto vars:     Size  Location     Type
  6893 ;;		None
  6894 ;; Return value:  Size  Location     Type
  6895 ;;                  2    6[COMMON] int 
  6896 ;; Registers used:
  6897 ;;		wreg, status,2, status,0
  6898 ;; Tracked objects:
  6899 ;;		On entry : 1F/0
  6900 ;;		On exit  : 1F/0
  6901 ;;		Unchanged: 1F/0
  6902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6903 ;;      Params:         2       0       0       0       0       0       0       0
  6904 ;;      Locals:         2       0       0       0       0       0       0       0
  6905 ;;      Temps:          4       0       0       0       0       0       0       0
  6906 ;;      Totals:         8       0       0       0       0       0       0       0
  6907 ;;Total ram usage:        8 bytes
  6908 ;; Hardware stack levels used:    1
  6909 ;; Hardware stack levels required when called:    1
  6910 ;; This function calls:
  6911 ;;		_isupper
  6912 ;; This function is called by:
  6913 ;;		_efgtoa
  6914 ;;		_vfpfcnvrt
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           
  6919                           ;psect for function _tolower
  6920  1FBA                     _tolower:	
  6921                           
  6922                           ;incstack = 0
  6923                           ; Regs used in _tolower: [wreg+status,2+status,0]
  6924  1FBA  0876               	movf	tolower@c,w
  6925  1FBB  3EBF               	addlw	191
  6926  1FBC  00F8               	movwf	??_tolower
  6927  1FBD  30FF               	movlw	255
  6928  1FBE  3D77               	addwfc	tolower@c+1,w
  6929  1FBF  00F9               	movwf	??_tolower+1
  6930  1FC0  3000               	movlw	0
  6931  1FC1  0279               	subwf	??_tolower+1,w
  6932  1FC2  301A               	movlw	26
  6933  1FC3  1903               	skipnz
  6934  1FC4  0278               	subwf	??_tolower,w
  6935  1FC5  1803               	btfsc	3,0
  6936  1FC6  2FC9               	goto	u3630
  6937  1FC7  3001               	movlw	1
  6938  1FC8  2FCA               	goto	u3640
  6939  1FC9                     u3630:	
  6940  1FC9  3000               	movlw	0
  6941  1FCA                     u3640:	
  6942  1FCA  00FA               	movwf	??_tolower+2
  6943  1FCB  01FB               	clrf	??_tolower+3
  6944  1FCC  087A               	movf	??_tolower+2,w
  6945  1FCD  00FC               	movwf	_tolower$1154
  6946  1FCE  087B               	movf	??_tolower+3,w
  6947  1FCF  00FD               	movwf	_tolower$1154+1
  6948  1FD0  087C               	movf	_tolower$1154,w
  6949  1FD1  047D               	iorwf	_tolower$1154+1,w
  6950  1FD2  1903               	btfsc	3,2
  6951  1FD3  0008               	return
  6952  1FD4  3020               	movlw	32
  6953  1FD5  0476               	iorwf	tolower@c,w
  6954  1FD6  00F6               	movwf	?_tolower
  6955  1FD7  3000               	movlw	0
  6956  1FD8  0477               	iorwf	tolower@c+1,w
  6957  1FD9  00F7               	movwf	?_tolower+1
  6958  1FDA  0008               	return
  6959  1FDB                     __end_of_tolower:	
  6960                           
  6961                           	psect	text20
  6962  1EDF                     __ptext20:	
  6963 ;; *************** function _isupper *****************
  6964 ;; Defined at:
  6965 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  c               2    0[COMMON] int 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;		None
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  2    0[COMMON] int 
  6972 ;; Registers used:
  6973 ;;		wreg, status,2, status,0
  6974 ;; Tracked objects:
  6975 ;;		On entry : 0/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6979 ;;      Params:         2       0       0       0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0
  6981 ;;      Temps:          4       0       0       0       0       0       0       0
  6982 ;;      Totals:         6       0       0       0       0       0       0       0
  6983 ;;Total ram usage:        6 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; This function calls:
  6986 ;;		Nothing
  6987 ;; This function is called by:
  6988 ;;		_efgtoa
  6989 ;;		_vfpfcnvrt
  6990 ;;		_tolower
  6991 ;; This function uses a non-reentrant model
  6992 ;;
  6993                           
  6994                           
  6995                           ;psect for function _isupper
  6996  1EDF                     _isupper:	
  6997                           
  6998                           ;incstack = 0
  6999                           ; Regs used in _isupper: [wreg+status,2+status,0]
  7000  1EDF  0870               	movf	isupper@c,w
  7001  1EE0  3EBF               	addlw	191
  7002  1EE1  00F2               	movwf	??_isupper
  7003  1EE2  30FF               	movlw	255
  7004  1EE3  3D71               	addwfc	isupper@c+1,w
  7005  1EE4  00F3               	movwf	??_isupper+1
  7006  1EE5  3000               	movlw	0
  7007  1EE6  0273               	subwf	??_isupper+1,w
  7008  1EE7  301A               	movlw	26
  7009  1EE8  1903               	skipnz
  7010  1EE9  0272               	subwf	??_isupper,w
  7011  1EEA  1803               	btfsc	3,0
  7012  1EEB  2EEE               	goto	u3020
  7013  1EEC  3001               	movlw	1
  7014  1EED  2EEF               	goto	u3030
  7015  1EEE                     u3020:	
  7016  1EEE  3000               	movlw	0
  7017  1EEF                     u3030:	
  7018  1EEF  00F4               	movwf	??_isupper+2
  7019  1EF0  01F5               	clrf	??_isupper+3
  7020  1EF1  0874               	movf	??_isupper+2,w
  7021  1EF2  00F0               	movwf	?_isupper
  7022  1EF3  0875               	movf	??_isupper+3,w
  7023  1EF4  00F1               	movwf	?_isupper+1
  7024  1EF5  0008               	return
  7025  1EF6                     __end_of_isupper:	
  7026                           
  7027                           	psect	text21
  7028  1F9B                     __ptext21:	
  7029 ;; *************** function _strcpy *****************
  7030 ;; Defined at:
  7031 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7032 ;; Parameters:    Size  Location     Type
  7033 ;;  dest            1    wreg     PTR unsigned char 
  7034 ;;		 -> dbuf(80), 
  7035 ;;  src             2    0[COMMON] PTR const unsigned char 
  7036 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7037 ;;		 -> dbuf(80), 
  7038 ;; Auto vars:     Size  Location     Type
  7039 ;;  dest            1    7[COMMON] PTR unsigned char 
  7040 ;;		 -> dbuf(80), 
  7041 ;;  s               2    4[COMMON] PTR const unsigned char 
  7042 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7043 ;;		 -> dbuf(80), 
  7044 ;;  d               1    6[COMMON] PTR unsigned char 
  7045 ;;		 -> dbuf(80), 
  7046 ;; Return value:  Size  Location     Type
  7047 ;;                  1    wreg      PTR unsigned char 
  7048 ;; Registers used:
  7049 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7050 ;; Tracked objects:
  7051 ;;		On entry : 1F/1
  7052 ;;		On exit  : 1F/1
  7053 ;;		Unchanged: 1F/0
  7054 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7055 ;;      Params:         2       0       0       0       0       0       0       0
  7056 ;;      Locals:         4       0       0       0       0       0       0       0
  7057 ;;      Temps:          2       0       0       0       0       0       0       0
  7058 ;;      Totals:         8       0       0       0       0       0       0       0
  7059 ;;Total ram usage:        8 bytes
  7060 ;; Hardware stack levels used:    1
  7061 ;; This function calls:
  7062 ;;		Nothing
  7063 ;; This function is called by:
  7064 ;;		_efgtoa
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function _strcpy
  7070  1F9B                     _strcpy:	
  7071                           
  7072                           ;incstack = 0
  7073                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  7074                           ;strcpy@dest stored from wreg
  7075  1F9B  00F7               	movwf	strcpy@dest
  7076  1F9C  0871               	movf	strcpy@src+1,w
  7077  1F9D  00F5               	movwf	strcpy@s+1
  7078  1F9E  0870               	movf	strcpy@src,w
  7079  1F9F  00F4               	movwf	strcpy@s
  7080  1FA0  0877               	movf	strcpy@dest,w
  7081  1FA1  00F2               	movwf	??_strcpy
  7082  1FA2  0872               	movf	??_strcpy,w
  7083  1FA3  00F6               	movwf	strcpy@d
  7084  1FA4                     l3167:	
  7085  1FA4  0876               	movf	strcpy@d,w
  7086  1FA5  0086               	movwf	6
  7087  1FA6  3001               	movlw	1	; select bank2/3
  7088  1FA7  0087               	movwf	7
  7089  1FA8  0AF6               	incf	strcpy@d,f
  7090  1FA9  0875               	movf	strcpy@s+1,w
  7091  1FAA  00F3               	movwf	??_strcpy+1
  7092  1FAB  0874               	movf	strcpy@s,w
  7093  1FAC  00F2               	movwf	??_strcpy
  7094  1FAD  0AF4               	incf	strcpy@s,f
  7095  1FAE  1903               	skipnz
  7096  1FAF  0AF5               	incf	strcpy@s+1,f
  7097  1FB0  0872               	movf	??_strcpy,w
  7098  1FB1  0084               	movwf	4
  7099  1FB2  0873               	movf	??_strcpy+1,w
  7100  1FB3  0085               	movwf	5
  7101  1FB4  0800               	movf	0,w	;code access
  7102  1FB5  3FC0               	movwi [0]fsr1
  7103  1FB6  0889               	movf	9,f
  7104  1FB7  1903               	btfsc	3,2
  7105  1FB8  0008               	return
  7106  1FB9  2FA4               	goto	l3167
  7107  1FBA                     __end_of_strcpy:	
  7108                           
  7109                           	psect	text22
  7110  124C                     __ptext22:	
  7111 ;; *************** function _pad *****************
  7112 ;; Defined at:
  7113 ;;		line 72 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7114 ;; Parameters:    Size  Location     Type
  7115 ;;  fp              1    wreg     PTR struct _IO_FILE
  7116 ;;		 -> sprintf@f(5), 
  7117 ;;  buf             1    4[BANK0 ] PTR unsigned char 
  7118 ;;		 -> dbuf(80), 
  7119 ;;  p               2    5[BANK0 ] int 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
  7122 ;;		 -> sprintf@f(5), 
  7123 ;;  w               2    9[BANK0 ] int 
  7124 ;;  i               2    7[BANK0 ] int 
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  2    4[BANK0 ] int 
  7127 ;; Registers used:
  7128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 1F/1
  7131 ;;		On exit  : 1F/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7134 ;;      Params:         0       3       0       0       0       0       0       0
  7135 ;;      Locals:         0       5       0       0       0       0       0       0
  7136 ;;      Temps:          1       0       0       0       0       0       0       0
  7137 ;;      Totals:         1       8       0       0       0       0       0       0
  7138 ;;Total ram usage:        9 bytes
  7139 ;; Hardware stack levels used:    1
  7140 ;; Hardware stack levels required when called:    3
  7141 ;; This function calls:
  7142 ;;		_fputc
  7143 ;;		_fputs
  7144 ;;		_strlen
  7145 ;; This function is called by:
  7146 ;;		_efgtoa
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           
  7151                           ;psect for function _pad
  7152  124C                     _pad:	
  7153                           
  7154                           ;incstack = 0
  7155                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7156                           ;pad@fp stored from wreg
  7157  124C  0020               	movlb	0	; select bank0
  7158  124D  00AB               	movwf	pad@fp
  7159                           
  7160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static 
      +                          int pad(FILE *fp, char *buf, int p);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 73: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 74:     int i, w;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sourc
      +                          es\c99\common\doprnt.c: 77:     if (flags & (1 << 0)) {
  7161  124E  0022               	movlb	2	; select bank2
  7162  124F  1C3E               	btfss	_flags^(0+256),0
  7163  1250  2A5A               	goto	l3123
  7164                           
  7165                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:        
      +                           fputs((const char *)buf, fp);
  7166  1251  0020               	movlb	0	; select bank0
  7167  1252  082B               	movf	pad@fp,w
  7168  1253  00FC               	movwf	??_pad
  7169  1254  087C               	movf	??_pad,w
  7170  1255  00F8               	movwf	fputs@fp
  7171  1256  0824               	movf	pad@buf,w
  7172  1257  319F  27DB  3192   	fcall	_fputs
  7173  125A                     l3123:	
  7174                           
  7175                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w =
      +                           (p < 0) ? 0 : p;
  7176  125A  0020               	movlb	0	; select bank0
  7177  125B  1BA6               	btfsc	pad@p+1,7
  7178  125C  2A62               	goto	l3127
  7179  125D  0826               	movf	pad@p+1,w
  7180  125E  00AA               	movwf	pad@w+1
  7181  125F  0825               	movf	pad@p,w
  7182  1260  00A9               	movwf	pad@w
  7183  1261  2A64               	goto	l457
  7184  1262                     l3127:	
  7185  1262  01A9               	clrf	pad@w
  7186  1263  01AA               	clrf	pad@w+1
  7187  1264                     l457:	
  7188                           
  7189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i =
      +                           0;
  7190  1264  01A7               	clrf	pad@i
  7191  1265  01A8               	clrf	pad@i+1
  7192  1266                     l3133:	
  7193                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7194                           
  7195                           
  7196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     whi
      +                          le (i < w) {
  7197  1266  0828               	movf	pad@i+1,w
  7198  1267  3A80               	xorlw	128
  7199  1268  00FC               	movwf	??_pad
  7200  1269  082A               	movf	pad@w+1,w
  7201  126A  3A80               	xorlw	128
  7202  126B  027C               	subwf	??_pad,w
  7203  126C  1D03               	skipz
  7204  126D  2A70               	goto	u3525
  7205  126E  0829               	movf	pad@w,w
  7206  126F  0227               	subwf	pad@i,w
  7207  1270                     u3525:	
  7208  1270  1803               	btfsc	3,0
  7209  1271  2A84               	goto	l460
  7210                           
  7211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:        
      +                           fputc(' ', fp);
  7212  1272  3020               	movlw	32
  7213  1273  00F0               	movwf	fputc@c
  7214  1274  3000               	movlw	0
  7215  1275  00F1               	movwf	fputc@c+1
  7216  1276  0020               	movlb	0	; select bank0
  7217  1277  082B               	movf	pad@fp,w
  7218  1278  00FC               	movwf	??_pad
  7219  1279  087C               	movf	??_pad,w
  7220  127A  00F2               	movwf	fputc@fp
  7221  127B  3191  2163  3192   	fcall	_fputc
  7222                           
  7223                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:        
      +                           ++i;
  7224  127E  3001               	movlw	1
  7225  127F  0020               	movlb	0	; select bank0
  7226  1280  07A7               	addwf	pad@i,f
  7227  1281  3000               	movlw	0
  7228  1282  3DA8               	addwfc	pad@i+1,f
  7229  1283  2A66               	goto	l3133
  7230  1284                     l460:	
  7231                           
  7232                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if 
      +                          (!(flags & (1 << 0))) {
  7233  1284  0022               	movlb	2	; select bank2
  7234  1285  183E               	btfsc	_flags^(0+256),0
  7235  1286  2A90               	goto	l3137
  7236                           
  7237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:        
      +                           fputs((const char *)buf, fp);
  7238  1287  0020               	movlb	0	; select bank0
  7239  1288  082B               	movf	pad@fp,w
  7240  1289  00FC               	movwf	??_pad
  7241  128A  087C               	movf	??_pad,w
  7242  128B  00F8               	movwf	fputs@fp
  7243  128C  0824               	movf	pad@buf,w
  7244  128D  319F  27DB  3192   	fcall	_fputs
  7245  1290                     l3137:	
  7246                           
  7247                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     ret
      +                          urn strlen(buf) + w;
  7248  1290  0020               	movlb	0	; select bank0
  7249  1291  0824               	movf	pad@buf,w
  7250  1292  319E  26F6         	fcall	_strlen
  7251  1294  0829               	movf	pad@w,w
  7252  1295  0770               	addwf	?_strlen,w
  7253  1296  00A4               	movwf	?_pad
  7254  1297  082A               	movf	pad@w+1,w
  7255  1298  3D71               	addwfc	?_strlen+1,w
  7256  1299  00A5               	movwf	?_pad+1
  7257  129A  0008               	return
  7258  129B                     __end_of_pad:	
  7259                           
  7260                           	psect	text23
  7261  1EF6                     __ptext23:	
  7262 ;; *************** function _strlen *****************
  7263 ;; Defined at:
  7264 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7265 ;; Parameters:    Size  Location     Type
  7266 ;;  s               1    wreg     PTR const unsigned char 
  7267 ;;		 -> dbuf(80), 
  7268 ;; Auto vars:     Size  Location     Type
  7269 ;;  s               1    4[COMMON] PTR const unsigned char 
  7270 ;;		 -> dbuf(80), 
  7271 ;;  a               1    3[COMMON] PTR const unsigned char 
  7272 ;;		 -> dbuf(80), 
  7273 ;; Return value:  Size  Location     Type
  7274 ;;                  2    0[COMMON] unsigned int 
  7275 ;; Registers used:
  7276 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7277 ;; Tracked objects:
  7278 ;;		On entry : 1F/0
  7279 ;;		On exit  : 1F/0
  7280 ;;		Unchanged: 1F/0
  7281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7282 ;;      Params:         2       0       0       0       0       0       0       0
  7283 ;;      Locals:         2       0       0       0       0       0       0       0
  7284 ;;      Temps:          1       0       0       0       0       0       0       0
  7285 ;;      Totals:         5       0       0       0       0       0       0       0
  7286 ;;Total ram usage:        5 bytes
  7287 ;; Hardware stack levels used:    1
  7288 ;; This function calls:
  7289 ;;		Nothing
  7290 ;; This function is called by:
  7291 ;;		_pad
  7292 ;; This function uses a non-reentrant model
  7293 ;;
  7294                           
  7295                           
  7296                           ;psect for function _strlen
  7297  1EF6                     _strlen:	
  7298                           
  7299                           ;incstack = 0
  7300                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  7301                           ;strlen@s stored from wreg
  7302  1EF6  00F4               	movwf	strlen@s
  7303  1EF7  0874               	movf	strlen@s,w
  7304  1EF8  00F2               	movwf	??_strlen
  7305  1EF9  0872               	movf	??_strlen,w
  7306  1EFA  00F3               	movwf	strlen@a
  7307  1EFB                     l2901:	
  7308  1EFB  0874               	movf	strlen@s,w
  7309  1EFC  0086               	movwf	6
  7310  1EFD  3001               	movlw	1	; select bank2/3
  7311  1EFE  0087               	movwf	7
  7312  1EFF  0801               	movf	1,w
  7313  1F00  1903               	btfsc	3,2
  7314  1F01  2F07               	goto	l2903
  7315  1F02  3001               	movlw	1
  7316  1F03  00F2               	movwf	??_strlen
  7317  1F04  0872               	movf	??_strlen,w
  7318  1F05  07F4               	addwf	strlen@s,f
  7319  1F06  2EFB               	goto	l2901
  7320  1F07                     l2903:	
  7321  1F07  0873               	movf	strlen@a,w
  7322  1F08  0274               	subwf	strlen@s,w
  7323  1F09  00F0               	movwf	?_strlen
  7324  1F0A  01F1               	clrf	?_strlen+1
  7325  1F0B  1BF0               	btfsc	?_strlen,7
  7326  1F0C  03F1               	decf	?_strlen+1,f
  7327  1F0D  0008               	return
  7328  1F0E                     __end_of_strlen:	
  7329                           
  7330                           	psect	text24
  7331  1FDB                     __ptext24:	
  7332 ;; *************** function _fputs *****************
  7333 ;; Defined at:
  7334 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  s               1    wreg     PTR const unsigned char 
  7337 ;;		 -> dbuf(80), 
  7338 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  7339 ;;		 -> sprintf@f(5), 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  7342 ;;		 -> dbuf(80), 
  7343 ;;  i               2    1[BANK0 ] int 
  7344 ;;  c               1    0[BANK0 ] unsigned char 
  7345 ;; Return value:  Size  Location     Type
  7346 ;;                  2    8[COMMON] int 
  7347 ;; Registers used:
  7348 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7349 ;; Tracked objects:
  7350 ;;		On entry : 1F/0
  7351 ;;		On exit  : 1F/0
  7352 ;;		Unchanged: 0/0
  7353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7354 ;;      Params:         1       0       0       0       0       0       0       0
  7355 ;;      Locals:         0       4       0       0       0       0       0       0
  7356 ;;      Temps:          3       0       0       0       0       0       0       0
  7357 ;;      Totals:         4       4       0       0       0       0       0       0
  7358 ;;Total ram usage:        8 bytes
  7359 ;; Hardware stack levels used:    1
  7360 ;; Hardware stack levels required when called:    2
  7361 ;; This function calls:
  7362 ;;		_fputc
  7363 ;; This function is called by:
  7364 ;;		_pad
  7365 ;; This function uses a non-reentrant model
  7366 ;;
  7367                           
  7368                           
  7369                           ;psect for function _fputs
  7370  1FDB                     _fputs:	
  7371                           
  7372                           ;incstack = 0
  7373                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7374                           ;fputs@s stored from wreg
  7375  1FDB  00A3               	movwf	fputs@s
  7376  1FDC  01A1               	clrf	fputs@i
  7377  1FDD  01A2               	clrf	fputs@i+1
  7378  1FDE                     l2895:	
  7379  1FDE  0821               	movf	fputs@i,w
  7380  1FDF  0723               	addwf	fputs@s,w
  7381  1FE0  00F9               	movwf	??_fputs
  7382  1FE1  0879               	movf	??_fputs,w
  7383  1FE2  0086               	movwf	6
  7384  1FE3  3001               	movlw	1	; select bank2/3
  7385  1FE4  0087               	movwf	7
  7386  1FE5  0801               	movf	1,w
  7387  1FE6  00FA               	movwf	??_fputs+1
  7388  1FE7  087A               	movf	??_fputs+1,w
  7389  1FE8  00A0               	movwf	fputs@c
  7390  1FE9  0820               	movf	fputs@c,w
  7391  1FEA  1903               	btfsc	3,2
  7392  1FEB  0008               	return
  7393  1FEC  0820               	movf	fputs@c,w
  7394  1FED  00F9               	movwf	??_fputs
  7395  1FEE  01FA               	clrf	??_fputs+1
  7396  1FEF  0879               	movf	??_fputs,w
  7397  1FF0  00F0               	movwf	fputc@c
  7398  1FF1  087A               	movf	??_fputs+1,w
  7399  1FF2  00F1               	movwf	fputc@c+1
  7400  1FF3  0878               	movf	fputs@fp,w
  7401  1FF4  00FB               	movwf	??_fputs+2
  7402  1FF5  087B               	movf	??_fputs+2,w
  7403  1FF6  00F2               	movwf	fputc@fp
  7404  1FF7  3191  2163  319F   	fcall	_fputc
  7405  1FFA  3001               	movlw	1
  7406  1FFB  0020               	movlb	0	; select bank0
  7407  1FFC  07A1               	addwf	fputs@i,f
  7408  1FFD  3000               	movlw	0
  7409  1FFE  3DA2               	addwfc	fputs@i+1,f
  7410  1FFF  2FDE               	goto	l2895
  7411  2000                     __end_of_fputs:	
  7412                           
  7413                           	psect	text25
  7414  1163                     __ptext25:	
  7415 ;; *************** function _fputc *****************
  7416 ;; Defined at:
  7417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7418 ;; Parameters:    Size  Location     Type
  7419 ;;  c               2    0[COMMON] int 
  7420 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  7421 ;;		 -> sprintf@f(5), 
  7422 ;; Auto vars:     Size  Location     Type
  7423 ;;		None
  7424 ;; Return value:  Size  Location     Type
  7425 ;;                  2    0[COMMON] int 
  7426 ;; Registers used:
  7427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7428 ;; Tracked objects:
  7429 ;;		On entry : 1F/0
  7430 ;;		On exit  : 0/0
  7431 ;;		Unchanged: 0/0
  7432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7433 ;;      Params:         3       0       0       0       0       0       0       0
  7434 ;;      Locals:         0       0       0       0       0       0       0       0
  7435 ;;      Temps:          5       0       0       0       0       0       0       0
  7436 ;;      Totals:         8       0       0       0       0       0       0       0
  7437 ;;Total ram usage:        8 bytes
  7438 ;; Hardware stack levels used:    1
  7439 ;; Hardware stack levels required when called:    1
  7440 ;; This function calls:
  7441 ;;		_putch
  7442 ;; This function is called by:
  7443 ;;		_pad
  7444 ;;		_vfpfcnvrt
  7445 ;;		_fputs
  7446 ;; This function uses a non-reentrant model
  7447 ;;
  7448                           
  7449                           
  7450                           ;psect for function _fputc
  7451  1163                     _fputc:	
  7452                           
  7453                           ;incstack = 0
  7454                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7455  1163  0872               	movf	fputc@fp,w
  7456  1164  1D03               	btfss	3,2
  7457  1165  0872               	movf	fputc@fp,w
  7458  1166  1D03               	btfss	3,2
  7459  1167  296C               	goto	l2879
  7460  1168  0870               	movf	fputc@c,w
  7461  1169  3190  2002         	fcall	_putch
  7462  116B  0008               	return
  7463  116C                     l2879:	
  7464  116C  0872               	movf	fputc@fp,w
  7465  116D  3E03               	addlw	3
  7466  116E  0086               	movwf	6
  7467  116F  3001               	movlw	1	; select bank2/3
  7468  1170  0087               	movwf	7
  7469  1171  0016               	moviw fsr1++
  7470  1172  0401               	iorwf	1,w
  7471  1173  1903               	btfsc	3,2
  7472  1174  2992               	goto	l2883
  7473  1175  0872               	movf	fputc@fp,w
  7474  1176  3E03               	addlw	3
  7475  1177  0086               	movwf	6
  7476  1178  3001               	movlw	1	; select bank2/3
  7477  1179  0087               	movwf	7
  7478  117A  3F40               	moviw [0]fsr1
  7479  117B  00F3               	movwf	??_fputc
  7480  117C  3F41               	moviw [1]fsr1
  7481  117D  00F4               	movwf	??_fputc+1
  7482  117E  0A72               	incf	fputc@fp,w
  7483  117F  0086               	movwf	6
  7484  1180  3001               	movlw	1	; select bank2/3
  7485  1181  0087               	movwf	7
  7486  1182  3F40               	moviw [0]fsr1
  7487  1183  00F5               	movwf	??_fputc+2
  7488  1184  3F41               	moviw [1]fsr1
  7489  1185  00F6               	movwf	??_fputc+3
  7490  1186  0876               	movf	??_fputc+3,w
  7491  1187  3A80               	xorlw	128
  7492  1188  00F7               	movwf	??_fputc+4
  7493  1189  0874               	movf	??_fputc+1,w
  7494  118A  3A80               	xorlw	128
  7495  118B  0277               	subwf	??_fputc+4,w
  7496  118C  1D03               	skipz
  7497  118D  2990               	goto	u2995
  7498  118E  0873               	movf	??_fputc,w
  7499  118F  0275               	subwf	??_fputc+2,w
  7500  1190                     u2995:	
  7501  1190  1803               	skipnc
  7502  1191  0008               	return
  7503  1192                     l2883:	
  7504  1192  0870               	movf	fputc@c,w
  7505  1193  00F3               	movwf	??_fputc
  7506  1194  0872               	movf	fputc@fp,w
  7507  1195  0086               	movwf	6
  7508  1196  3001               	movlw	1	; select bank2/3
  7509  1197  0087               	movwf	7
  7510  1198  0A72               	incf	fputc@fp,w
  7511  1199  0084               	movwf	4
  7512  119A  3001               	movlw	1	; select bank2/3
  7513  119B  0085               	movwf	5
  7514  119C  0800               	movf	0,w
  7515  119D  0701               	addwf	1,w
  7516  119E  00F4               	movwf	??_fputc+1
  7517  119F  0874               	movf	??_fputc+1,w
  7518  11A0  0086               	movwf	6
  7519  11A1  3001               	movlw	1	; select bank2/3
  7520  11A2  0087               	movwf	7
  7521  11A3  0873               	movf	??_fputc,w
  7522  11A4  0081               	movwf	1
  7523  11A5  0A72               	incf	fputc@fp,w
  7524  11A6  0086               	movwf	6
  7525  11A7  3001               	movlw	1	; select bank2/3
  7526  11A8  0087               	movwf	7
  7527  11A9  3001               	movlw	1
  7528  11AA  0781               	addwf	1,f
  7529  11AB  3141               	addfsr 1,1
  7530  11AC  1803               	skipnc
  7531  11AD  0A81               	incf	1,f
  7532  11AE  0008               	return
  7533  11AF                     __end_of_fputc:	
  7534                           
  7535                           	psect	text26
  7536  1002                     __ptext26:	
  7537 ;; *************** function _putch *****************
  7538 ;; Defined at:
  7539 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7540 ;; Parameters:    Size  Location     Type
  7541 ;;  c               1    wreg     unsigned char 
  7542 ;; Auto vars:     Size  Location     Type
  7543 ;;  c               1    0[COMMON] unsigned char 
  7544 ;; Return value:  Size  Location     Type
  7545 ;;                  1    wreg      void 
  7546 ;; Registers used:
  7547 ;;		wreg
  7548 ;; Tracked objects:
  7549 ;;		On entry : 1F/0
  7550 ;;		On exit  : 1F/0
  7551 ;;		Unchanged: 1F/0
  7552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7553 ;;      Params:         0       0       0       0       0       0       0       0
  7554 ;;      Locals:         0       0       0       0       0       0       0       0
  7555 ;;      Temps:          0       0       0       0       0       0       0       0
  7556 ;;      Totals:         0       0       0       0       0       0       0       0
  7557 ;;Total ram usage:        0 bytes
  7558 ;; Hardware stack levels used:    1
  7559 ;; This function calls:
  7560 ;;		Nothing
  7561 ;; This function is called by:
  7562 ;;		_fputc
  7563 ;; This function uses a non-reentrant model
  7564 ;;
  7565                           
  7566                           
  7567                           ;psect for function _putch
  7568  1002                     _putch:	
  7569                           
  7570                           ;incstack = 0
  7571                           ; Regs used in _putch: [wreg]
  7572  1002  0008               	return
  7573  1003                     __end_of_putch:	
  7574                           
  7575                           	psect	text27
  7576  1648                     __ptext27:	
  7577 ;; *************** function _floorf *****************
  7578 ;; Defined at:
  7579 ;;		line 3 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  x               4   13[BANK0 ] float 
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;  u               4   29[BANK0 ] struct .
  7584 ;;  m               4   23[BANK0 ] unsigned long 
  7585 ;;  e               2   27[BANK0 ] int 
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  4   13[BANK0 ] float 
  7588 ;; Registers used:
  7589 ;;		wreg, status,2, status,0
  7590 ;; Tracked objects:
  7591 ;;		On entry : 1F/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7595 ;;      Params:         0       4       0       0       0       0       0       0
  7596 ;;      Locals:         0      10       0       0       0       0       0       0
  7597 ;;      Temps:          0       6       0       0       0       0       0       0
  7598 ;;      Totals:         0      20       0       0       0       0       0       0
  7599 ;;Total ram usage:       20 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; This function calls:
  7602 ;;		Nothing
  7603 ;; This function is called by:
  7604 ;;		_efgtoa
  7605 ;; This function uses a non-reentrant model
  7606 ;;
  7607                           
  7608                           
  7609                           ;psect for function _floorf
  7610  1648                     _floorf:	
  7611                           
  7612                           ;incstack = 0
  7613                           ; Regs used in _floorf: [wreg+status,2+status,0]
  7614  1648  0022               	movlb	2	; select bank2
  7615  1649  0823               	movf	(floorf@F524+3)^(0+256),w
  7616  164A  0020               	movlb	0	; select bank0
  7617  164B  00C0               	movwf	floorf@u+3
  7618  164C  0022               	movlb	2	; select bank2
  7619  164D  0822               	movf	(floorf@F524+2)^(0+256),w
  7620  164E  0020               	movlb	0	; select bank0
  7621  164F  00BF               	movwf	floorf@u+2
  7622  1650  0022               	movlb	2	; select bank2
  7623  1651  0821               	movf	(floorf@F524+1)^(0+256),w
  7624  1652  0020               	movlb	0	; select bank0
  7625  1653  00BE               	movwf	floorf@u+1
  7626  1654  0022               	movlb	2	; select bank2
  7627  1655  0820               	movf	floorf@F524^(0+256),w
  7628  1656  0020               	movlb	0	; select bank0
  7629  1657  00BD               	movwf	floorf@u
  7630  1658  0830               	movf	floorf@x+3,w
  7631  1659  00C0               	movwf	floorf@u+3
  7632  165A  082F               	movf	floorf@x+2,w
  7633  165B  00BF               	movwf	floorf@u+2
  7634  165C  082E               	movf	floorf@x+1,w
  7635  165D  00BE               	movwf	floorf@u+1
  7636  165E  082D               	movf	floorf@x,w
  7637  165F  00BD               	movwf	floorf@u
  7638  1660  083D               	movf	floorf@u,w
  7639  1661  00B1               	movwf	??_floorf
  7640  1662  083E               	movf	floorf@u+1,w
  7641  1663  00B2               	movwf	??_floorf+1
  7642  1664  083F               	movf	floorf@u+2,w
  7643  1665  00B3               	movwf	??_floorf+2
  7644  1666  0840               	movf	floorf@u+3,w
  7645  1667  00B4               	movwf	??_floorf+3
  7646  1668  3017               	movlw	23
  7647  1669                     u3665:	
  7648  1669  36B4               	lsrf	??_floorf+3,f
  7649  166A  0CB3               	rrf	??_floorf+2,f
  7650  166B  0CB2               	rrf	??_floorf+1,f
  7651  166C  0CB1               	rrf	??_floorf,f
  7652  166D  0B89               	decfsz	9,f
  7653  166E  2E69               	goto	u3665
  7654  166F  30FF               	movlw	255
  7655  1670  0531               	andwf	??_floorf,w
  7656  1671  00B5               	movwf	??_floorf+4
  7657  1672  3000               	movlw	0
  7658  1673  0532               	andwf	??_floorf+1,w
  7659  1674  00B6               	movwf	??_floorf+5
  7660  1675  0835               	movf	??_floorf+4,w
  7661  1676  3E81               	addlw	129
  7662  1677  00BB               	movwf	floorf@e
  7663  1678  30FF               	movlw	255
  7664  1679  3D36               	addwfc	??_floorf+5,w
  7665  167A  00BC               	movwf	floorf@e+1
  7666  167B  083C               	movf	floorf@e+1,w
  7667  167C  3A80               	xorlw	128
  7668  167D  00B1               	movwf	??_floorf
  7669  167E  3080               	movlw	128
  7670  167F  0231               	subwf	??_floorf,w
  7671  1680  1D03               	skipz
  7672  1681  2E84               	goto	u3675
  7673  1682  3017               	movlw	23
  7674  1683  023B               	subwf	floorf@e,w
  7675  1684                     u3675:	
  7676  1684  1803               	btfsc	3,0
  7677  1685  0008               	return
  7678  1686  0020               	movlb	0	; select bank0
  7679  1687  1BBC               	btfsc	floorf@e+1,7
  7680  1688  2EDE               	goto	l3199
  7681  1689  30FF               	movlw	255
  7682  168A  00B1               	movwf	??_floorf
  7683  168B  30FF               	movlw	255
  7684  168C  00B2               	movwf	??_floorf+1
  7685  168D  307F               	movlw	127
  7686  168E  00B3               	movwf	??_floorf+2
  7687  168F  3000               	movlw	0
  7688  1690  00B4               	movwf	??_floorf+3
  7689  1691  0A3B               	incf	floorf@e,w
  7690  1692  2E97               	goto	u3690
  7691  1693                     u3695:	
  7692  1693  37B4               	asrf	??_floorf+3,f
  7693  1694  0CB3               	rrf	??_floorf+2,f
  7694  1695  0CB2               	rrf	??_floorf+1,f
  7695  1696  0CB1               	rrf	??_floorf,f
  7696  1697                     u3690:	
  7697  1697  0B89               	decfsz	9,f
  7698  1698  2E93               	goto	u3695
  7699  1699  0834               	movf	??_floorf+3,w
  7700  169A  00BA               	movwf	floorf@m+3
  7701  169B  0833               	movf	??_floorf+2,w
  7702  169C  00B9               	movwf	floorf@m+2
  7703  169D  0832               	movf	??_floorf+1,w
  7704  169E  00B8               	movwf	floorf@m+1
  7705  169F  0831               	movf	??_floorf,w
  7706  16A0  00B7               	movwf	floorf@m
  7707  16A1  083D               	movf	floorf@u,w
  7708  16A2  0537               	andwf	floorf@m,w
  7709  16A3  00B1               	movwf	??_floorf
  7710  16A4  083E               	movf	floorf@u+1,w
  7711  16A5  0538               	andwf	floorf@m+1,w
  7712  16A6  00B2               	movwf	??_floorf+1
  7713  16A7  083F               	movf	floorf@u+2,w
  7714  16A8  0539               	andwf	floorf@m+2,w
  7715  16A9  00B3               	movwf	??_floorf+2
  7716  16AA  0840               	movf	floorf@u+3,w
  7717  16AB  053A               	andwf	floorf@m+3,w
  7718  16AC  00B4               	movwf	??_floorf+3
  7719  16AD  0834               	movf	??_floorf+3,w
  7720  16AE  0433               	iorwf	??_floorf+2,w
  7721  16AF  0432               	iorwf	??_floorf+1,w
  7722  16B0  0431               	iorwf	??_floorf,w
  7723  16B1  1903               	btfsc	3,2
  7724  16B2  0008               	return
  7725  16B3  083D               	movf	floorf@u,w
  7726  16B4  00B1               	movwf	??_floorf
  7727  16B5  083E               	movf	floorf@u+1,w
  7728  16B6  00B2               	movwf	??_floorf+1
  7729  16B7  083F               	movf	floorf@u+2,w
  7730  16B8  00B3               	movwf	??_floorf+2
  7731  16B9  0840               	movf	floorf@u+3,w
  7732  16BA  00B4               	movwf	??_floorf+3
  7733  16BB  301F               	movlw	31
  7734  16BC                     u3715:	
  7735  16BC  36B4               	lsrf	??_floorf+3,f
  7736  16BD  0CB3               	rrf	??_floorf+2,f
  7737  16BE  0CB2               	rrf	??_floorf+1,f
  7738  16BF  0CB1               	rrf	??_floorf,f
  7739  16C0  0B89               	decfsz	9,f
  7740  16C1  2EBC               	goto	u3715
  7741  16C2  0831               	movf	??_floorf,w
  7742  16C3  1903               	btfsc	3,2
  7743  16C4  2ECD               	goto	l3197
  7744  16C5  0837               	movf	floorf@m,w
  7745  16C6  07BD               	addwf	floorf@u,f
  7746  16C7  0838               	movf	floorf@m+1,w
  7747  16C8  3DBE               	addwfc	floorf@u+1,f
  7748  16C9  0839               	movf	floorf@m+2,w
  7749  16CA  3DBF               	addwfc	floorf@u+2,f
  7750  16CB  083A               	movf	floorf@m+3,w
  7751  16CC  3DC0               	addwfc	floorf@u+3,f
  7752  16CD                     l3197:	
  7753  16CD  0937               	comf	floorf@m,w
  7754  16CE  00B1               	movwf	??_floorf
  7755  16CF  0938               	comf	floorf@m+1,w
  7756  16D0  00B2               	movwf	??_floorf+1
  7757  16D1  0939               	comf	floorf@m+2,w
  7758  16D2  00B3               	movwf	??_floorf+2
  7759  16D3  093A               	comf	floorf@m+3,w
  7760  16D4  00B4               	movwf	??_floorf+3
  7761  16D5  0831               	movf	??_floorf,w
  7762  16D6  05BD               	andwf	floorf@u,f
  7763  16D7  0832               	movf	??_floorf+1,w
  7764  16D8  05BE               	andwf	floorf@u+1,f
  7765  16D9  0833               	movf	??_floorf+2,w
  7766  16DA  05BF               	andwf	floorf@u+2,f
  7767  16DB  0834               	movf	??_floorf+3,w
  7768  16DC  05C0               	andwf	floorf@u+3,f
  7769  16DD  2F11               	goto	l1090
  7770  16DE                     l3199:	
  7771  16DE  083D               	movf	floorf@u,w
  7772  16DF  00B1               	movwf	??_floorf
  7773  16E0  083E               	movf	floorf@u+1,w
  7774  16E1  00B2               	movwf	??_floorf+1
  7775  16E2  083F               	movf	floorf@u+2,w
  7776  16E3  00B3               	movwf	??_floorf+2
  7777  16E4  0840               	movf	floorf@u+3,w
  7778  16E5  00B4               	movwf	??_floorf+3
  7779  16E6  301F               	movlw	31
  7780  16E7                     u3735:	
  7781  16E7  36B4               	lsrf	??_floorf+3,f
  7782  16E8  0CB3               	rrf	??_floorf+2,f
  7783  16E9  0CB2               	rrf	??_floorf+1,f
  7784  16EA  0CB1               	rrf	??_floorf,f
  7785  16EB  0B89               	decfsz	9,f
  7786  16EC  2EE7               	goto	u3735
  7787  16ED  0831               	movf	??_floorf,w
  7788  16EE  1D03               	btfss	3,2
  7789  16EF  2EF4               	goto	l3203
  7790  16F0  3000               	movlw	0
  7791  16F1  00C0               	movwf	floorf@u+3
  7792  16F2  3000               	movlw	0
  7793  16F3  2F0C               	goto	L9
  7794  16F4                     l3203:	
  7795  16F4  083D               	movf	floorf@u,w
  7796  16F5  00B1               	movwf	??_floorf
  7797  16F6  083E               	movf	floorf@u+1,w
  7798  16F7  00B2               	movwf	??_floorf+1
  7799  16F8  083F               	movf	floorf@u+2,w
  7800  16F9  00B3               	movwf	??_floorf+2
  7801  16FA  0840               	movf	floorf@u+3,w
  7802  16FB  00B4               	movwf	??_floorf+3
  7803  16FC  3001               	movlw	1
  7804  16FD                     u3755:	
  7805  16FD  35B1               	lslf	??_floorf,f
  7806  16FE  0DB2               	rlf	??_floorf+1,f
  7807  16FF  0DB3               	rlf	??_floorf+2,f
  7808  1700  0DB4               	rlf	??_floorf+3,f
  7809  1701  0B89               	decfsz	9,f
  7810  1702  2EFD               	goto	u3755
  7811  1703  0834               	movf	??_floorf+3,w
  7812  1704  0433               	iorwf	??_floorf+2,w
  7813  1705  0432               	iorwf	??_floorf+1,w
  7814  1706  0431               	iorwf	??_floorf,w
  7815  1707  1903               	skipnz
  7816  1708  2F11               	goto	l1090
  7817  1709  30BF               	movlw	191
  7818  170A  00C0               	movwf	floorf@u+3
  7819  170B  3080               	movlw	128
  7820  170C                     L9:	
  7821  170C  00BF               	movwf	floorf@u+2
  7822  170D  3000               	movlw	0
  7823  170E  00BE               	movwf	floorf@u+1
  7824  170F  3000               	movlw	0
  7825  1710  00BD               	movwf	floorf@u
  7826  1711                     l1090:	
  7827  1711  0840               	movf	floorf@u+3,w
  7828  1712  00B0               	movwf	?_floorf+3
  7829  1713  083F               	movf	floorf@u+2,w
  7830  1714  00AF               	movwf	?_floorf+2
  7831  1715  083E               	movf	floorf@u+1,w
  7832  1716  00AE               	movwf	?_floorf+1
  7833  1717  083D               	movf	floorf@u,w
  7834  1718  00AD               	movwf	?_floorf
  7835  1719  0008               	return
  7836  171A                     __end_of_floorf:	
  7837                           
  7838                           	psect	text28
  7839  13A1                     __ptext28:	
  7840 ;; *************** function ___fpclassifyf *****************
  7841 ;; Defined at:
  7842 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  7843 ;; Parameters:    Size  Location     Type
  7844 ;;  x               4    0[COMMON] float 
  7845 ;; Auto vars:     Size  Location     Type
  7846 ;;  u               4    2[BANK0 ] struct .
  7847 ;;  e               2    0[BANK0 ] int 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  2    0[COMMON] int 
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0
  7852 ;; Tracked objects:
  7853 ;;		On entry : 1F/1
  7854 ;;		On exit  : 1F/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7857 ;;      Params:         4       0       0       0       0       0       0       0
  7858 ;;      Locals:         0       6       0       0       0       0       0       0
  7859 ;;      Temps:          6       0       0       0       0       0       0       0
  7860 ;;      Totals:        10       6       0       0       0       0       0       0
  7861 ;;Total ram usage:       16 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; This function calls:
  7864 ;;		Nothing
  7865 ;; This function is called by:
  7866 ;;		_efgtoa
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           
  7871                           ;psect for function ___fpclassifyf
  7872  13A1                     ___fpclassifyf:	
  7873                           
  7874                           ;incstack = 0
  7875                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  7876  13A1  0022               	movlb	2	; select bank2
  7877  13A2  0827               	movf	(___fpclassifyf@F463+3)^(0+256),w
  7878  13A3  0020               	movlb	0	; select bank0
  7879  13A4  00A5               	movwf	___fpclassifyf@u+3
  7880  13A5  0022               	movlb	2	; select bank2
  7881  13A6  0826               	movf	(___fpclassifyf@F463+2)^(0+256),w
  7882  13A7  0020               	movlb	0	; select bank0
  7883  13A8  00A4               	movwf	___fpclassifyf@u+2
  7884  13A9  0022               	movlb	2	; select bank2
  7885  13AA  0825               	movf	(___fpclassifyf@F463+1)^(0+256),w
  7886  13AB  0020               	movlb	0	; select bank0
  7887  13AC  00A3               	movwf	___fpclassifyf@u+1
  7888  13AD  0022               	movlb	2	; select bank2
  7889  13AE  0824               	movf	___fpclassifyf@F463^(0+256),w
  7890  13AF  0020               	movlb	0	; select bank0
  7891  13B0  00A2               	movwf	___fpclassifyf@u
  7892  13B1  0873               	movf	___fpclassifyf@x+3,w
  7893  13B2  00A5               	movwf	___fpclassifyf@u+3
  7894  13B3  0872               	movf	___fpclassifyf@x+2,w
  7895  13B4  00A4               	movwf	___fpclassifyf@u+2
  7896  13B5  0871               	movf	___fpclassifyf@x+1,w
  7897  13B6  00A3               	movwf	___fpclassifyf@u+1
  7898  13B7  0870               	movf	___fpclassifyf@x,w
  7899  13B8  00A2               	movwf	___fpclassifyf@u
  7900  13B9  0822               	movf	___fpclassifyf@u,w
  7901  13BA  00F4               	movwf	??___fpclassifyf
  7902  13BB  0823               	movf	___fpclassifyf@u+1,w
  7903  13BC  00F5               	movwf	??___fpclassifyf+1
  7904  13BD  0824               	movf	___fpclassifyf@u+2,w
  7905  13BE  00F6               	movwf	??___fpclassifyf+2
  7906  13BF  0825               	movf	___fpclassifyf@u+3,w
  7907  13C0  00F7               	movwf	??___fpclassifyf+3
  7908  13C1  3017               	movlw	23
  7909  13C2                     u3545:	
  7910  13C2  36F7               	lsrf	??___fpclassifyf+3,f
  7911  13C3  0CF6               	rrf	??___fpclassifyf+2,f
  7912  13C4  0CF5               	rrf	??___fpclassifyf+1,f
  7913  13C5  0CF4               	rrf	??___fpclassifyf,f
  7914  13C6  0B89               	decfsz	9,f
  7915  13C7  2BC2               	goto	u3545
  7916  13C8  30FF               	movlw	255
  7917  13C9  0574               	andwf	??___fpclassifyf,w
  7918  13CA  00A0               	movwf	___fpclassifyf@e
  7919  13CB  3000               	movlw	0
  7920  13CC  0575               	andwf	??___fpclassifyf+1,w
  7921  13CD  00A1               	movwf	___fpclassifyf@e+1
  7922  13CE  0820               	movf	___fpclassifyf@e,w
  7923  13CF  0421               	iorwf	___fpclassifyf@e+1,w
  7924  13D0  1D03               	btfss	3,2
  7925  13D1  2BF1               	goto	l3155
  7926  13D2  0822               	movf	___fpclassifyf@u,w
  7927  13D3  00F4               	movwf	??___fpclassifyf
  7928  13D4  0823               	movf	___fpclassifyf@u+1,w
  7929  13D5  00F5               	movwf	??___fpclassifyf+1
  7930  13D6  0824               	movf	___fpclassifyf@u+2,w
  7931  13D7  00F6               	movwf	??___fpclassifyf+2
  7932  13D8  0825               	movf	___fpclassifyf@u+3,w
  7933  13D9  00F7               	movwf	??___fpclassifyf+3
  7934  13DA  3001               	movlw	1
  7935  13DB                     u3565:	
  7936  13DB  35F4               	lslf	??___fpclassifyf,f
  7937  13DC  0DF5               	rlf	??___fpclassifyf+1,f
  7938  13DD  0DF6               	rlf	??___fpclassifyf+2,f
  7939  13DE  0DF7               	rlf	??___fpclassifyf+3,f
  7940  13DF  0B89               	decfsz	9,f
  7941  13E0  2BDB               	goto	u3565
  7942  13E1  0877               	movf	??___fpclassifyf+3,w
  7943  13E2  0476               	iorwf	??___fpclassifyf+2,w
  7944  13E3  0475               	iorwf	??___fpclassifyf+1,w
  7945  13E4  0474               	iorwf	??___fpclassifyf,w
  7946  13E5  1D03               	skipz
  7947  13E6  2BEC               	goto	l3151
  7948  13E7  3002               	movlw	2
  7949  13E8  00F0               	movwf	?___fpclassifyf
  7950  13E9  3000               	movlw	0
  7951  13EA  00F1               	movwf	?___fpclassifyf+1
  7952  13EB  0008               	return
  7953  13EC                     l3151:	
  7954  13EC  3003               	movlw	3
  7955  13ED  00F0               	movwf	?___fpclassifyf
  7956  13EE  3000               	movlw	0
  7957  13EF  00F1               	movwf	?___fpclassifyf+1
  7958  13F0  0008               	return
  7959  13F1                     l3155:	
  7960  13F1  0A20               	incf	___fpclassifyf@e,w
  7961  13F2  0421               	iorwf	___fpclassifyf@e+1,w
  7962  13F3  1D03               	btfss	3,2
  7963  13F4  2C14               	goto	l3161
  7964  13F5  0822               	movf	___fpclassifyf@u,w
  7965  13F6  00F4               	movwf	??___fpclassifyf
  7966  13F7  0823               	movf	___fpclassifyf@u+1,w
  7967  13F8  00F5               	movwf	??___fpclassifyf+1
  7968  13F9  0824               	movf	___fpclassifyf@u+2,w
  7969  13FA  00F6               	movwf	??___fpclassifyf+2
  7970  13FB  0825               	movf	___fpclassifyf@u+3,w
  7971  13FC  00F7               	movwf	??___fpclassifyf+3
  7972  13FD  3009               	movlw	9
  7973  13FE                     u3595:	
  7974  13FE  35F4               	lslf	??___fpclassifyf,f
  7975  13FF  0DF5               	rlf	??___fpclassifyf+1,f
  7976  1400  0DF6               	rlf	??___fpclassifyf+2,f
  7977  1401  0DF7               	rlf	??___fpclassifyf+3,f
  7978  1402  0B89               	decfsz	9,f
  7979  1403  2BFE               	goto	u3595
  7980  1404  0877               	movf	??___fpclassifyf+3,w
  7981  1405  0476               	iorwf	??___fpclassifyf+2,w
  7982  1406  0475               	iorwf	??___fpclassifyf+1,w
  7983  1407  0474               	iorwf	??___fpclassifyf,w
  7984  1408  1D03               	btfss	3,2
  7985  1409  2C0C               	goto	u3600
  7986  140A  3001               	movlw	1
  7987  140B  2C0D               	goto	u3610
  7988  140C                     u3600:	
  7989  140C  3000               	movlw	0
  7990  140D                     u3610:	
  7991  140D  00F8               	movwf	??___fpclassifyf+4
  7992  140E  01F9               	clrf	??___fpclassifyf+5
  7993  140F  0878               	movf	??___fpclassifyf+4,w
  7994  1410  00F0               	movwf	?___fpclassifyf
  7995  1411  0879               	movf	??___fpclassifyf+5,w
  7996  1412  00F1               	movwf	?___fpclassifyf+1
  7997  1413  0008               	return
  7998  1414                     l3161:	
  7999  1414  3004               	movlw	4
  8000  1415  00F0               	movwf	?___fpclassifyf
  8001  1416  3000               	movlw	0
  8002  1417  00F1               	movwf	?___fpclassifyf+1
  8003  1418  0008               	return
  8004  1419                     __end_of___fpclassifyf:	
  8005                           
  8006                           	psect	text29
  8007  133C                     __ptext29:	
  8008 ;; *************** function ___fltol *****************
  8009 ;; Defined at:
  8010 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  8011 ;; Parameters:    Size  Location     Type
  8012 ;;  f1              4    0[COMMON] int 
  8013 ;; Auto vars:     Size  Location     Type
  8014 ;;  exp1            1   10[COMMON] unsigned char 
  8015 ;;  sign1           1    9[COMMON] unsigned char 
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  4    0[COMMON] long 
  8018 ;; Registers used:
  8019 ;;		wreg, status,2, status,0
  8020 ;; Tracked objects:
  8021 ;;		On entry : 1C/2
  8022 ;;		On exit  : 1C/0
  8023 ;;		Unchanged: 1C/0
  8024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8025 ;;      Params:         4       0       0       0       0       0       0       0
  8026 ;;      Locals:         2       0       0       0       0       0       0       0
  8027 ;;      Temps:          5       0       0       0       0       0       0       0
  8028 ;;      Totals:        11       0       0       0       0       0       0       0
  8029 ;;Total ram usage:       11 bytes
  8030 ;; Hardware stack levels used:    1
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_informacion
  8035 ;;		_efgtoa
  8036 ;; This function uses a non-reentrant model
  8037 ;;
  8038                           
  8039                           
  8040                           ;psect for function ___fltol
  8041  133C                     ___fltol:	
  8042                           
  8043                           ;incstack = 0
  8044                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8045  133C  1003               	clrc
  8046  133D  0D72               	rlf	___fltol@f1+2,w
  8047  133E  0D73               	rlf	___fltol@f1+3,w
  8048  133F  00F4               	movwf	??___fltol
  8049  1340  0874               	movf	??___fltol,w
  8050  1341  00FA               	movwf	___fltol@exp1
  8051  1342  087A               	movf	___fltol@exp1,w
  8052  1343  1D03               	btfss	3,2
  8053  1344  2B4E               	goto	l3355
  8054  1345                     l3351:	
  8055  1345  3000               	movlw	0
  8056  1346  00F3               	movwf	?___fltol+3
  8057  1347  3000               	movlw	0
  8058  1348  00F2               	movwf	?___fltol+2
  8059  1349  3000               	movlw	0
  8060  134A  00F1               	movwf	?___fltol+1
  8061  134B  3000               	movlw	0
  8062  134C  00F0               	movwf	?___fltol
  8063  134D  0008               	return
  8064  134E                     l3355:	
  8065  134E  0870               	movf	___fltol@f1,w
  8066  134F  00F4               	movwf	??___fltol
  8067  1350  0871               	movf	___fltol@f1+1,w
  8068  1351  00F5               	movwf	??___fltol+1
  8069  1352  0872               	movf	___fltol@f1+2,w
  8070  1353  00F6               	movwf	??___fltol+2
  8071  1354  0873               	movf	___fltol@f1+3,w
  8072  1355  00F7               	movwf	??___fltol+3
  8073  1356  301F               	movlw	31
  8074  1357                     u4125:	
  8075  1357  36F7               	lsrf	??___fltol+3,f
  8076  1358  0CF6               	rrf	??___fltol+2,f
  8077  1359  0CF5               	rrf	??___fltol+1,f
  8078  135A  0CF4               	rrf	??___fltol,f
  8079  135B  0B89               	decfsz	9,f
  8080  135C  2B57               	goto	u4125
  8081  135D  0874               	movf	??___fltol,w
  8082  135E  00F8               	movwf	??___fltol+4
  8083  135F  0878               	movf	??___fltol+4,w
  8084  1360  00F9               	movwf	___fltol@sign1
  8085  1361  17F2               	bsf	___fltol@f1+2,7
  8086  1362  30FF               	movlw	255
  8087  1363  05F0               	andwf	___fltol@f1,f
  8088  1364  30FF               	movlw	255
  8089  1365  05F1               	andwf	___fltol@f1+1,f
  8090  1366  30FF               	movlw	255
  8091  1367  05F2               	andwf	___fltol@f1+2,f
  8092  1368  3000               	movlw	0
  8093  1369  05F3               	andwf	___fltol@f1+3,f
  8094  136A  3096               	movlw	150
  8095  136B  02FA               	subwf	___fltol@exp1,f
  8096  136C  1FFA               	btfss	___fltol@exp1,7
  8097  136D  2B81               	goto	l3373
  8098  136E  087A               	movf	___fltol@exp1,w
  8099  136F  3A80               	xorlw	128
  8100  1370  3E97               	addlw	151
  8101  1371  1C03               	btfss	3,0
  8102  1372  2B45               	goto	l3351
  8103  1373                     l3371:	
  8104  1373  3001               	movlw	1
  8105  1374                     u4155:	
  8106  1374  36F3               	lsrf	___fltol@f1+3,f
  8107  1375  0CF2               	rrf	___fltol@f1+2,f
  8108  1376  0CF1               	rrf	___fltol@f1+1,f
  8109  1377  0CF0               	rrf	___fltol@f1,f
  8110  1378  0B89               	decfsz	9,f
  8111  1379  2B74               	goto	u4155
  8112  137A  3001               	movlw	1
  8113  137B  00F4               	movwf	??___fltol
  8114  137C  0874               	movf	??___fltol,w
  8115  137D  07FA               	addwf	___fltol@exp1,f
  8116  137E  1903               	btfsc	3,2
  8117  137F  2B92               	goto	l3381
  8118  1380  2B73               	goto	l3371
  8119  1381                     l3373:	
  8120  1381  3020               	movlw	32
  8121  1382  027A               	subwf	___fltol@exp1,w
  8122  1383  1803               	btfsc	3,0
  8123  1384  2B45               	goto	l3351
  8124  1385                     l789:	
  8125  1385  087A               	movf	___fltol@exp1,w
  8126  1386  1903               	btfsc	3,2
  8127  1387  2B92               	goto	l3381
  8128  1388  3001               	movlw	1
  8129  1389                     u4185:	
  8130  1389  35F0               	lslf	___fltol@f1,f
  8131  138A  0DF1               	rlf	___fltol@f1+1,f
  8132  138B  0DF2               	rlf	___fltol@f1+2,f
  8133  138C  0DF3               	rlf	___fltol@f1+3,f
  8134  138D  0B89               	decfsz	9,f
  8135  138E  2B89               	goto	u4185
  8136  138F  3001               	movlw	1
  8137  1390  02FA               	subwf	___fltol@exp1,f
  8138  1391  2B85               	goto	l789
  8139  1392                     l3381:	
  8140  1392  0879               	movf	___fltol@sign1,w
  8141  1393  1903               	btfsc	3,2
  8142  1394  0008               	return
  8143  1395  09F0               	comf	___fltol@f1,f
  8144  1396  09F1               	comf	___fltol@f1+1,f
  8145  1397  09F2               	comf	___fltol@f1+2,f
  8146  1398  09F3               	comf	___fltol@f1+3,f
  8147  1399  0AF0               	incf	___fltol@f1,f
  8148  139A  1903               	skipnz
  8149  139B  0AF1               	incf	___fltol@f1+1,f
  8150  139C  1903               	skipnz
  8151  139D  0AF2               	incf	___fltol@f1+2,f
  8152  139E  1903               	skipnz
  8153  139F  0AF3               	incf	___fltol@f1+3,f
  8154  13A0  0008               	return
  8155  13A1                     __end_of___fltol:	
  8156                           
  8157                           	psect	text30
  8158  1F5F                     __ptext30:	
  8159 ;; *************** function ___flsub *****************
  8160 ;; Defined at:
  8161 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8162 ;; Parameters:    Size  Location     Type
  8163 ;;  a               4   46[BANK0 ] long 
  8164 ;;  b               4   50[BANK0 ] long 
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  4   46[BANK0 ] long 
  8169 ;; Registers used:
  8170 ;;		wreg, status,2, status,0, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 1F/0
  8173 ;;		On exit  : 1F/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8176 ;;      Params:         0       8       0       0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0       0       0
  8179 ;;      Totals:         0       8       0       0       0       0       0       0
  8180 ;;Total ram usage:        8 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:    1
  8183 ;; This function calls:
  8184 ;;		___fladd
  8185 ;; This function is called by:
  8186 ;;		_efgtoa
  8187 ;; This function uses a non-reentrant model
  8188 ;;
  8189                           
  8190                           
  8191                           ;psect for function ___flsub
  8192  1F5F                     ___flsub:	
  8193                           
  8194                           ;incstack = 0
  8195                           ; Regs used in ___flsub: [wreg+status,2+status,0+pclath+cstack]
  8196  1F5F  3080               	movlw	128
  8197  1F60  06D1               	xorwf	___flsub@a+3,f
  8198  1F61  0855               	movf	___flsub@b+3,w
  8199  1F62  00BD               	movwf	___fladd@b+3
  8200  1F63  0854               	movf	___flsub@b+2,w
  8201  1F64  00BC               	movwf	___fladd@b+2
  8202  1F65  0853               	movf	___flsub@b+1,w
  8203  1F66  00BB               	movwf	___fladd@b+1
  8204  1F67  0852               	movf	___flsub@b,w
  8205  1F68  00BA               	movwf	___fladd@b
  8206  1F69  0851               	movf	___flsub@a+3,w
  8207  1F6A  00C1               	movwf	___fladd@a+3
  8208  1F6B  0850               	movf	___flsub@a+2,w
  8209  1F6C  00C0               	movwf	___fladd@a+2
  8210  1F6D  084F               	movf	___flsub@a+1,w
  8211  1F6E  00BF               	movwf	___fladd@a+1
  8212  1F6F  084E               	movf	___flsub@a,w
  8213  1F70  00BE               	movwf	___fladd@a
  8214  1F71  3189  21BE         	fcall	___fladd
  8215  1F73  083D               	movf	?___fladd+3,w
  8216  1F74  00D1               	movwf	?___flsub+3
  8217  1F75  083C               	movf	?___fladd+2,w
  8218  1F76  00D0               	movwf	?___flsub+2
  8219  1F77  083B               	movf	?___fladd+1,w
  8220  1F78  00CF               	movwf	?___flsub+1
  8221  1F79  083A               	movf	?___fladd,w
  8222  1F7A  00CE               	movwf	?___flsub
  8223  1F7B  0008               	return
  8224  1F7C                     __end_of___flsub:	
  8225                           
  8226                           	psect	text31
  8227  09BE                     __ptext31:	
  8228 ;; *************** function ___fladd *****************
  8229 ;; Defined at:
  8230 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;  b               4   26[BANK0 ] long 
  8233 ;;  a               4   30[BANK0 ] long 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;  grs             1   45[BANK0 ] unsigned char 
  8236 ;;  bexp            1   44[BANK0 ] unsigned char 
  8237 ;;  aexp            1   43[BANK0 ] unsigned char 
  8238 ;;  signs           1   42[BANK0 ] unsigned char 
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  4   26[BANK0 ] unsigned char 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0
  8243 ;; Tracked objects:
  8244 ;;		On entry : 1F/0
  8245 ;;		On exit  : 1F/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8248 ;;      Params:         0       8       0       0       0       0       0       0
  8249 ;;      Locals:         0       4       0       0       0       0       0       0
  8250 ;;      Temps:          0       8       0       0       0       0       0       0
  8251 ;;      Totals:         0      20       0       0       0       0       0       0
  8252 ;;Total ram usage:       20 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; This function calls:
  8255 ;;		Nothing
  8256 ;; This function is called by:
  8257 ;;		_main
  8258 ;;		_efgtoa
  8259 ;;		___flsub
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           
  8264                           ;psect for function ___fladd
  8265  09BE                     ___fladd:	
  8266                           
  8267                           ;incstack = 0
  8268                           ; Regs used in ___fladd: [wreg+status,2+status,0]
  8269  09BE  083D               	movf	___fladd@b+3,w
  8270  09BF  3980               	andlw	128
  8271  09C0  00C2               	movwf	??___fladd
  8272  09C1  0842               	movf	??___fladd,w
  8273  09C2  00CA               	movwf	___fladd@signs
  8274  09C3  353D               	lslf	___fladd@b+3,w
  8275  09C4  00C2               	movwf	??___fladd
  8276  09C5  0842               	movf	??___fladd,w
  8277  09C6  00CC               	movwf	___fladd@bexp
  8278  09C7  1BBC               	btfsc	___fladd@b+2,7
  8279  09C8  144C               	bsf	___fladd@bexp,0
  8280  09C9  084C               	movf	___fladd@bexp,w
  8281  09CA  1903               	btfsc	3,2
  8282  09CB  29DA               	goto	l2929
  8283  09CC  0A4C               	incf	___fladd@bexp,w
  8284  09CD  1D03               	btfss	3,2
  8285  09CE  29D7               	goto	l2925
  8286  09CF  3000               	movlw	0
  8287  09D0  00BD               	movwf	___fladd@b+3
  8288  09D1  3000               	movlw	0
  8289  09D2  00BC               	movwf	___fladd@b+2
  8290  09D3  3000               	movlw	0
  8291  09D4  00BB               	movwf	___fladd@b+1
  8292  09D5  3000               	movlw	0
  8293  09D6  00BA               	movwf	___fladd@b
  8294  09D7                     l2925:	
  8295  09D7  17BC               	bsf	___fladd@b+2,7
  8296  09D8  01BD               	clrf	___fladd@b+3
  8297  09D9  29E2               	goto	l2931
  8298  09DA                     l2929:	
  8299  09DA  3000               	movlw	0
  8300  09DB  00BD               	movwf	___fladd@b+3
  8301  09DC  3000               	movlw	0
  8302  09DD  00BC               	movwf	___fladd@b+2
  8303  09DE  3000               	movlw	0
  8304  09DF  00BB               	movwf	___fladd@b+1
  8305  09E0  3000               	movlw	0
  8306  09E1  00BA               	movwf	___fladd@b
  8307  09E2                     l2931:	
  8308  09E2  0841               	movf	___fladd@a+3,w
  8309  09E3  3980               	andlw	128
  8310  09E4  00C2               	movwf	??___fladd
  8311  09E5  0842               	movf	??___fladd,w
  8312  09E6  00CB               	movwf	___fladd@aexp
  8313  09E7  084B               	movf	___fladd@aexp,w
  8314  09E8  064A               	xorwf	___fladd@signs,w
  8315  09E9  1D03               	btfss	3,2
  8316  09EA  174A               	bsf	___fladd@signs,6
  8317  09EB  3541               	lslf	___fladd@a+3,w
  8318  09EC  00C2               	movwf	??___fladd
  8319  09ED  0842               	movf	??___fladd,w
  8320  09EE  00CB               	movwf	___fladd@aexp
  8321  09EF  1BC0               	btfsc	___fladd@a+2,7
  8322  09F0  144B               	bsf	___fladd@aexp,0
  8323  09F1  084B               	movf	___fladd@aexp,w
  8324  09F2  1903               	btfsc	3,2
  8325  09F3  2A02               	goto	l2953
  8326  09F4  0A4B               	incf	___fladd@aexp,w
  8327  09F5  1D03               	btfss	3,2
  8328  09F6  29FF               	goto	l2949
  8329  09F7  3000               	movlw	0
  8330  09F8  00C1               	movwf	___fladd@a+3
  8331  09F9  3000               	movlw	0
  8332  09FA  00C0               	movwf	___fladd@a+2
  8333  09FB  3000               	movlw	0
  8334  09FC  00BF               	movwf	___fladd@a+1
  8335  09FD  3000               	movlw	0
  8336  09FE  00BE               	movwf	___fladd@a
  8337  09FF                     l2949:	
  8338  09FF  17C0               	bsf	___fladd@a+2,7
  8339  0A00  01C1               	clrf	___fladd@a+3
  8340  0A01  2A0A               	goto	l889
  8341  0A02                     l2953:	
  8342  0A02  3000               	movlw	0
  8343  0A03  00C1               	movwf	___fladd@a+3
  8344  0A04  3000               	movlw	0
  8345  0A05  00C0               	movwf	___fladd@a+2
  8346  0A06  3000               	movlw	0
  8347  0A07  00BF               	movwf	___fladd@a+1
  8348  0A08  3000               	movlw	0
  8349  0A09  00BE               	movwf	___fladd@a
  8350  0A0A                     l889:	
  8351  0A0A  084C               	movf	___fladd@bexp,w
  8352  0A0B  024B               	subwf	___fladd@aexp,w
  8353  0A0C  1803               	skipnc
  8354  0A0D  2A50               	goto	l2989
  8355  0A0E  1F4A               	btfss	___fladd@signs,6
  8356  0A0F  2A14               	goto	l2959
  8357  0A10  3080               	movlw	128
  8358  0A11  00C2               	movwf	??___fladd
  8359  0A12  0842               	movf	??___fladd,w
  8360  0A13  06CA               	xorwf	___fladd@signs,f
  8361  0A14                     l2959:	
  8362  0A14  084C               	movf	___fladd@bexp,w
  8363  0A15  00C2               	movwf	??___fladd
  8364  0A16  0842               	movf	??___fladd,w
  8365  0A17  00CD               	movwf	___fladd@grs
  8366  0A18  084B               	movf	___fladd@aexp,w
  8367  0A19  00C2               	movwf	??___fladd
  8368  0A1A  0842               	movf	??___fladd,w
  8369  0A1B  00CC               	movwf	___fladd@bexp
  8370  0A1C  084D               	movf	___fladd@grs,w
  8371  0A1D  00C2               	movwf	??___fladd
  8372  0A1E  0842               	movf	??___fladd,w
  8373  0A1F  00CB               	movwf	___fladd@aexp
  8374  0A20  083A               	movf	___fladd@b,w
  8375  0A21  00C2               	movwf	??___fladd
  8376  0A22  0842               	movf	??___fladd,w
  8377  0A23  00CD               	movwf	___fladd@grs
  8378  0A24  083E               	movf	___fladd@a,w
  8379  0A25  00C2               	movwf	??___fladd
  8380  0A26  0842               	movf	??___fladd,w
  8381  0A27  00BA               	movwf	___fladd@b
  8382  0A28  084D               	movf	___fladd@grs,w
  8383  0A29  00C2               	movwf	??___fladd
  8384  0A2A  0842               	movf	??___fladd,w
  8385  0A2B  00BE               	movwf	___fladd@a
  8386  0A2C  083B               	movf	___fladd@b+1,w
  8387  0A2D  00C2               	movwf	??___fladd
  8388  0A2E  0842               	movf	??___fladd,w
  8389  0A2F  00CD               	movwf	___fladd@grs
  8390  0A30  083F               	movf	___fladd@a+1,w
  8391  0A31  00C2               	movwf	??___fladd
  8392  0A32  0842               	movf	??___fladd,w
  8393  0A33  00BB               	movwf	___fladd@b+1
  8394  0A34  084D               	movf	___fladd@grs,w
  8395  0A35  00C2               	movwf	??___fladd
  8396  0A36  0842               	movf	??___fladd,w
  8397  0A37  00BF               	movwf	___fladd@a+1
  8398  0A38  083C               	movf	___fladd@b+2,w
  8399  0A39  00C2               	movwf	??___fladd
  8400  0A3A  0842               	movf	??___fladd,w
  8401  0A3B  00CD               	movwf	___fladd@grs
  8402  0A3C  0840               	movf	___fladd@a+2,w
  8403  0A3D  00C2               	movwf	??___fladd
  8404  0A3E  0842               	movf	??___fladd,w
  8405  0A3F  00BC               	movwf	___fladd@b+2
  8406  0A40  084D               	movf	___fladd@grs,w
  8407  0A41  00C2               	movwf	??___fladd
  8408  0A42  0842               	movf	??___fladd,w
  8409  0A43  00C0               	movwf	___fladd@a+2
  8410  0A44  083D               	movf	___fladd@b+3,w
  8411  0A45  00C2               	movwf	??___fladd
  8412  0A46  0842               	movf	??___fladd,w
  8413  0A47  00CD               	movwf	___fladd@grs
  8414  0A48  0841               	movf	___fladd@a+3,w
  8415  0A49  00C2               	movwf	??___fladd
  8416  0A4A  0842               	movf	??___fladd,w
  8417  0A4B  00BD               	movwf	___fladd@b+3
  8418  0A4C  084D               	movf	___fladd@grs,w
  8419  0A4D  00C2               	movwf	??___fladd
  8420  0A4E  0842               	movf	??___fladd,w
  8421  0A4F  00C1               	movwf	___fladd@a+3
  8422  0A50                     l2989:	
  8423  0A50  01CD               	clrf	___fladd@grs
  8424  0A51  084B               	movf	___fladd@aexp,w
  8425  0A52  00C2               	movwf	??___fladd
  8426  0A53  01C3               	clrf	??___fladd+1
  8427  0A54  0843               	movf	??___fladd+1,w
  8428  0A55  00C5               	movwf	??___fladd+3
  8429  0A56  084C               	movf	___fladd@bexp,w
  8430  0A57  0242               	subwf	??___fladd,w
  8431  0A58  00C4               	movwf	??___fladd+2
  8432  0A59  1C03               	skipc
  8433  0A5A  03C5               	decf	??___fladd+3,f
  8434  0A5B  0845               	movf	??___fladd+3,w
  8435  0A5C  3A80               	xorlw	128
  8436  0A5D  00C6               	movwf	??___fladd+4
  8437  0A5E  3080               	movlw	128
  8438  0A5F  0246               	subwf	??___fladd+4,w
  8439  0A60  1D03               	skipz
  8440  0A61  2A64               	goto	u3135
  8441  0A62  301A               	movlw	26
  8442  0A63  0244               	subwf	??___fladd+2,w
  8443  0A64                     u3135:	
  8444  0A64  1C03               	skipc
  8445  0A65  2A98               	goto	l3007
  8446  0A66  0020               	movlb	0	; select bank0
  8447  0A67  083D               	movf	___fladd@b+3,w
  8448  0A68  043C               	iorwf	___fladd@b+2,w
  8449  0A69  043B               	iorwf	___fladd@b+1,w
  8450  0A6A  043A               	iorwf	___fladd@b,w
  8451  0A6B  1903               	btfsc	3,2
  8452  0A6C  2A6F               	goto	u3140
  8453  0A6D  3001               	movlw	1
  8454  0A6E  2A70               	goto	u3150
  8455  0A6F                     u3140:	
  8456  0A6F  3000               	movlw	0
  8457  0A70                     u3150:	
  8458  0A70  00C2               	movwf	??___fladd
  8459  0A71  0842               	movf	??___fladd,w
  8460  0A72  00CD               	movwf	___fladd@grs
  8461  0A73  3000               	movlw	0
  8462  0A74  00BD               	movwf	___fladd@b+3
  8463  0A75  3000               	movlw	0
  8464  0A76  00BC               	movwf	___fladd@b+2
  8465  0A77  3000               	movlw	0
  8466  0A78  00BB               	movwf	___fladd@b+1
  8467  0A79  3000               	movlw	0
  8468  0A7A  00BA               	movwf	___fladd@b
  8469  0A7B  084B               	movf	___fladd@aexp,w
  8470  0A7C  00C2               	movwf	??___fladd
  8471  0A7D  0842               	movf	??___fladd,w
  8472  0A7E  00CC               	movwf	___fladd@bexp
  8473  0A7F  2A9D               	goto	l893
  8474  0A80                     l895:	
  8475  0A80  1C4D               	btfss	___fladd@grs,0
  8476  0A81  2A88               	goto	l2997
  8477  0A82  364D               	lsrf	___fladd@grs,w
  8478  0A83  3801               	iorlw	1
  8479  0A84  00C2               	movwf	??___fladd
  8480  0A85  0842               	movf	??___fladd,w
  8481  0A86  00CD               	movwf	___fladd@grs
  8482  0A87  2A8A               	goto	l2999
  8483  0A88                     l2997:	
  8484  0A88  1003               	clrc
  8485  0A89  0CCD               	rrf	___fladd@grs,f
  8486  0A8A                     l2999:	
  8487  0A8A  183A               	btfsc	___fladd@b,0
  8488  0A8B  17CD               	bsf	___fladd@grs,7
  8489  0A8C  3001               	movlw	1
  8490  0A8D  00C2               	movwf	??___fladd
  8491  0A8E                     u3185:	
  8492  0A8E  37BD               	asrf	___fladd@b+3,f
  8493  0A8F  0CBC               	rrf	___fladd@b+2,f
  8494  0A90  0CBB               	rrf	___fladd@b+1,f
  8495  0A91  0CBA               	rrf	___fladd@b,f
  8496  0A92  0BC2               	decfsz	??___fladd& (0+127),f
  8497  0A93  2A8E               	goto	u3185
  8498  0A94  3001               	movlw	1
  8499  0A95  00C2               	movwf	??___fladd
  8500  0A96  0842               	movf	??___fladd,w
  8501  0A97  07CC               	addwf	___fladd@bexp,f
  8502  0A98                     l3007:	
  8503  0A98  0020               	movlb	0	; select bank0
  8504  0A99  084B               	movf	___fladd@aexp,w
  8505  0A9A  024C               	subwf	___fladd@bexp,w
  8506  0A9B  1C03               	skipc
  8507  0A9C  2A80               	goto	l895
  8508  0A9D                     l893:	
  8509  0A9D  1B4A               	btfsc	___fladd@signs,6
  8510  0A9E  2ACE               	goto	l3033
  8511  0A9F  084C               	movf	___fladd@bexp,w
  8512  0AA0  1D03               	btfss	3,2
  8513  0AA1  2AAB               	goto	l3015
  8514  0AA2  3000               	movlw	0
  8515  0AA3  00BD               	movwf	?___fladd+3
  8516  0AA4  3000               	movlw	0
  8517  0AA5  00BC               	movwf	?___fladd+2
  8518  0AA6  3000               	movlw	0
  8519  0AA7  00BB               	movwf	?___fladd+1
  8520  0AA8  3000               	movlw	0
  8521  0AA9  00BA               	movwf	?___fladd
  8522  0AAA  0008               	return
  8523  0AAB                     l3015:	
  8524  0AAB  083E               	movf	___fladd@a,w
  8525  0AAC  07BA               	addwf	___fladd@b,f
  8526  0AAD  083F               	movf	___fladd@a+1,w
  8527  0AAE  3DBB               	addwfc	___fladd@b+1,f
  8528  0AAF  0840               	movf	___fladd@a+2,w
  8529  0AB0  3DBC               	addwfc	___fladd@b+2,f
  8530  0AB1  0841               	movf	___fladd@a+3,w
  8531  0AB2  3DBD               	addwfc	___fladd@b+3,f
  8532  0AB3  1C3D               	btfss	___fladd@b+3,0
  8533  0AB4  2B48               	goto	l3067
  8534  0AB5  1C4D               	btfss	___fladd@grs,0
  8535  0AB6  2ABD               	goto	l3023
  8536  0AB7  364D               	lsrf	___fladd@grs,w
  8537  0AB8  3801               	iorlw	1
  8538  0AB9  00C2               	movwf	??___fladd
  8539  0ABA  0842               	movf	??___fladd,w
  8540  0ABB  00CD               	movwf	___fladd@grs
  8541  0ABC  2ABF               	goto	l3025
  8542  0ABD                     l3023:	
  8543  0ABD  1003               	clrc
  8544  0ABE  0CCD               	rrf	___fladd@grs,f
  8545  0ABF                     l3025:	
  8546  0ABF  183A               	btfsc	___fladd@b,0
  8547  0AC0  17CD               	bsf	___fladd@grs,7
  8548  0AC1  3001               	movlw	1
  8549  0AC2  00C2               	movwf	??___fladd
  8550  0AC3                     u3255:	
  8551  0AC3  37BD               	asrf	___fladd@b+3,f
  8552  0AC4  0CBC               	rrf	___fladd@b+2,f
  8553  0AC5  0CBB               	rrf	___fladd@b+1,f
  8554  0AC6  0CBA               	rrf	___fladd@b,f
  8555  0AC7  0BC2               	decfsz	??___fladd& (0+127),f
  8556  0AC8  2AC3               	goto	u3255
  8557  0AC9  3001               	movlw	1
  8558  0ACA  00C2               	movwf	??___fladd
  8559  0ACB  0842               	movf	??___fladd,w
  8560  0ACC  07CC               	addwf	___fladd@bexp,f
  8561  0ACD  2B48               	goto	l3067
  8562  0ACE                     l3033:	
  8563  0ACE  083D               	movf	___fladd@b+3,w
  8564  0ACF  3A80               	xorlw	128
  8565  0AD0  00C2               	movwf	??___fladd
  8566  0AD1  0841               	movf	___fladd@a+3,w
  8567  0AD2  3A80               	xorlw	128
  8568  0AD3  0242               	subwf	??___fladd,w
  8569  0AD4  1D03               	skipz
  8570  0AD5  2AE0               	goto	u3263
  8571  0AD6  0840               	movf	___fladd@a+2,w
  8572  0AD7  023C               	subwf	___fladd@b+2,w
  8573  0AD8  1D03               	skipz
  8574  0AD9  2AE0               	goto	u3263
  8575  0ADA  083F               	movf	___fladd@a+1,w
  8576  0ADB  023B               	subwf	___fladd@b+1,w
  8577  0ADC  1D03               	skipz
  8578  0ADD  2AE0               	goto	u3263
  8579  0ADE  083E               	movf	___fladd@a,w
  8580  0ADF  023A               	subwf	___fladd@b,w
  8581  0AE0                     u3263:	
  8582  0AE0  1803               	skipnc
  8583  0AE1  2B18               	goto	l3043
  8584  0AE2  30FF               	movlw	255
  8585  0AE3  00C2               	movwf	??___fladd
  8586  0AE4  30FF               	movlw	255
  8587  0AE5  00C3               	movwf	??___fladd+1
  8588  0AE6  30FF               	movlw	255
  8589  0AE7  00C4               	movwf	??___fladd+2
  8590  0AE8  30FF               	movlw	255
  8591  0AE9  00C5               	movwf	??___fladd+3
  8592  0AEA  083A               	movf	___fladd@b,w
  8593  0AEB  023E               	subwf	___fladd@a,w
  8594  0AEC  00C6               	movwf	??___fladd+4
  8595  0AED  083B               	movf	___fladd@b+1,w
  8596  0AEE  3B3F               	subwfb	___fladd@a+1,w
  8597  0AEF  00C7               	movwf	??___fladd+5
  8598  0AF0  083C               	movf	___fladd@b+2,w
  8599  0AF1  3B40               	subwfb	___fladd@a+2,w
  8600  0AF2  00C8               	movwf	??___fladd+6
  8601  0AF3  083D               	movf	___fladd@b+3,w
  8602  0AF4  3B41               	subwfb	___fladd@a+3,w
  8603  0AF5  00C9               	movwf	??___fladd+7
  8604  0AF6  0846               	movf	??___fladd+4,w
  8605  0AF7  07C2               	addwf	??___fladd,f
  8606  0AF8  0847               	movf	??___fladd+5,w
  8607  0AF9  3DC3               	addwfc	??___fladd+1,f
  8608  0AFA  0848               	movf	??___fladd+6,w
  8609  0AFB  3DC4               	addwfc	??___fladd+2,f
  8610  0AFC  0849               	movf	??___fladd+7,w
  8611  0AFD  3DC5               	addwfc	??___fladd+3,f
  8612  0AFE  0845               	movf	??___fladd+3,w
  8613  0AFF  00BD               	movwf	___fladd@b+3
  8614  0B00  0844               	movf	??___fladd+2,w
  8615  0B01  00BC               	movwf	___fladd@b+2
  8616  0B02  0843               	movf	??___fladd+1,w
  8617  0B03  00BB               	movwf	___fladd@b+1
  8618  0B04  0842               	movf	??___fladd,w
  8619  0B05  00BA               	movwf	___fladd@b
  8620  0B06  3080               	movlw	128
  8621  0B07  00C2               	movwf	??___fladd
  8622  0B08  0842               	movf	??___fladd,w
  8623  0B09  06CA               	xorwf	___fladd@signs,f
  8624  0B0A  09CD               	comf	___fladd@grs,f
  8625  0B0B  0ACD               	incf	___fladd@grs,f
  8626  0B0C  084D               	movf	___fladd@grs,w
  8627  0B0D  1D03               	btfss	3,2
  8628  0B0E  2B20               	goto	l910
  8629  0B0F  3001               	movlw	1
  8630  0B10  07BA               	addwf	___fladd@b,f
  8631  0B11  3000               	movlw	0
  8632  0B12  3DBB               	addwfc	___fladd@b+1,f
  8633  0B13  3000               	movlw	0
  8634  0B14  3DBC               	addwfc	___fladd@b+2,f
  8635  0B15  3000               	movlw	0
  8636  0B16  3DBD               	addwfc	___fladd@b+3,f
  8637  0B17  2B20               	goto	l910
  8638  0B18                     l3043:	
  8639  0B18  083E               	movf	___fladd@a,w
  8640  0B19  02BA               	subwf	___fladd@b,f
  8641  0B1A  083F               	movf	___fladd@a+1,w
  8642  0B1B  3BBB               	subwfb	___fladd@b+1,f
  8643  0B1C  0840               	movf	___fladd@a+2,w
  8644  0B1D  3BBC               	subwfb	___fladd@b+2,f
  8645  0B1E  0841               	movf	___fladd@a+3,w
  8646  0B1F  3BBD               	subwfb	___fladd@b+3,f
  8647  0B20                     l910:	
  8648  0B20  083D               	movf	___fladd@b+3,w
  8649  0B21  043C               	iorwf	___fladd@b+2,w
  8650  0B22  043B               	iorwf	___fladd@b+1,w
  8651  0B23  043A               	iorwf	___fladd@b,w
  8652  0B24  1D03               	skipz
  8653  0B25  2B46               	goto	l3065
  8654  0B26  084D               	movf	___fladd@grs,w
  8655  0B27  1D03               	btfss	3,2
  8656  0B28  2B46               	goto	l3065
  8657  0B29  3000               	movlw	0
  8658  0B2A  00BD               	movwf	?___fladd+3
  8659  0B2B  3000               	movlw	0
  8660  0B2C  00BC               	movwf	?___fladd+2
  8661  0B2D  3000               	movlw	0
  8662  0B2E  00BB               	movwf	?___fladd+1
  8663  0B2F  3000               	movlw	0
  8664  0B30  00BA               	movwf	?___fladd
  8665  0B31  0008               	return
  8666  0B32                     l3051:	
  8667  0B32  3001               	movlw	1
  8668  0B33                     u3305:	
  8669  0B33  35BA               	lslf	___fladd@b,f
  8670  0B34  0DBB               	rlf	___fladd@b+1,f
  8671  0B35  0DBC               	rlf	___fladd@b+2,f
  8672  0B36  0DBD               	rlf	___fladd@b+3,f
  8673  0B37  0B89               	decfsz	9,f
  8674  0B38  2B33               	goto	u3305
  8675  0B39  1BCD               	btfsc	___fladd@grs,7
  8676  0B3A  143A               	bsf	___fladd@b,0
  8677  0B3B  1C4D               	btfss	___fladd@grs,0
  8678  0B3C  2B3F               	goto	l3059
  8679  0B3D  1403               	setc
  8680  0B3E  2B40               	goto	L10
  8681  0B3F                     l3059:	
  8682  0B3F  1003               	clrc
  8683  0B40                     L10:	
  8684  0B40  0DCD               	rlf	___fladd@grs,f
  8685  0B41  084C               	movf	___fladd@bexp,w
  8686  0B42  1903               	btfsc	3,2
  8687  0B43  2B46               	goto	l3065
  8688  0B44  3001               	movlw	1
  8689  0B45  02CC               	subwf	___fladd@bexp,f
  8690  0B46                     l3065:	
  8691  0B46  1FBC               	btfss	___fladd@b+2,7
  8692  0B47  2B32               	goto	l3051
  8693  0B48                     l3067:	
  8694  0B48  01CB               	clrf	___fladd@aexp
  8695  0B49  1FCD               	btfss	___fladd@grs,7
  8696  0B4A  2B53               	goto	l3077
  8697  0B4B  084D               	movf	___fladd@grs,w
  8698  0B4C  397F               	andlw	127
  8699  0B4D  1903               	btfsc	3,2
  8700  0B4E  183A               	btfsc	___fladd@b,0
  8701  0B4F  2B51               	goto	l3073
  8702  0B50  2B53               	goto	l3077
  8703  0B51                     l3073:	
  8704  0B51  01CB               	clrf	___fladd@aexp
  8705  0B52  0ACB               	incf	___fladd@aexp,f
  8706  0B53                     l3077:	
  8707  0B53  084B               	movf	___fladd@aexp,w
  8708  0B54  1903               	btfsc	3,2
  8709  0B55  2B7F               	goto	l923
  8710  0B56  3001               	movlw	1
  8711  0B57  07BA               	addwf	___fladd@b,f
  8712  0B58  3000               	movlw	0
  8713  0B59  3DBB               	addwfc	___fladd@b+1,f
  8714  0B5A  3000               	movlw	0
  8715  0B5B  3DBC               	addwfc	___fladd@b+2,f
  8716  0B5C  3000               	movlw	0
  8717  0B5D  3DBD               	addwfc	___fladd@b+3,f
  8718  0B5E  1C3D               	btfss	___fladd@b+3,0
  8719  0B5F  2B7F               	goto	l923
  8720  0B60  083A               	movf	___fladd@b,w
  8721  0B61  00C2               	movwf	??___fladd
  8722  0B62  083B               	movf	___fladd@b+1,w
  8723  0B63  00C3               	movwf	??___fladd+1
  8724  0B64  083C               	movf	___fladd@b+2,w
  8725  0B65  00C4               	movwf	??___fladd+2
  8726  0B66  083D               	movf	___fladd@b+3,w
  8727  0B67  00C5               	movwf	??___fladd+3
  8728  0B68  3001               	movlw	1
  8729  0B69  00C6               	movwf	??___fladd+4
  8730  0B6A                     u3405:	
  8731  0B6A  37C5               	asrf	??___fladd+3,f
  8732  0B6B  0CC4               	rrf	??___fladd+2,f
  8733  0B6C  0CC3               	rrf	??___fladd+1,f
  8734  0B6D  0CC2               	rrf	??___fladd,f
  8735  0B6E  0BC6               	decfsz	??___fladd+4,f
  8736  0B6F  2B6A               	goto	u3405
  8737  0B70  0845               	movf	??___fladd+3,w
  8738  0B71  00BD               	movwf	___fladd@b+3
  8739  0B72  0844               	movf	??___fladd+2,w
  8740  0B73  00BC               	movwf	___fladd@b+2
  8741  0B74  0843               	movf	??___fladd+1,w
  8742  0B75  00BB               	movwf	___fladd@b+1
  8743  0B76  0842               	movf	??___fladd,w
  8744  0B77  00BA               	movwf	___fladd@b
  8745  0B78  0A4C               	incf	___fladd@bexp,w
  8746  0B79  1903               	btfsc	3,2
  8747  0B7A  2B7F               	goto	l923
  8748  0B7B  3001               	movlw	1
  8749  0B7C  00C2               	movwf	??___fladd
  8750  0B7D  0842               	movf	??___fladd,w
  8751  0B7E  07CC               	addwf	___fladd@bexp,f
  8752  0B7F                     l923:	
  8753  0B7F  0A4C               	incf	___fladd@bexp,w
  8754  0B80  1D03               	btfss	3,2
  8755  0B81  084C               	movf	___fladd@bexp,w
  8756  0B82  1D03               	btfss	3,2
  8757  0B83  2B8F               	goto	l3095
  8758  0B84  3000               	movlw	0
  8759  0B85  00BD               	movwf	___fladd@b+3
  8760  0B86  3000               	movlw	0
  8761  0B87  00BC               	movwf	___fladd@b+2
  8762  0B88  3000               	movlw	0
  8763  0B89  00BB               	movwf	___fladd@b+1
  8764  0B8A  3000               	movlw	0
  8765  0B8B  00BA               	movwf	___fladd@b
  8766  0B8C  084C               	movf	___fladd@bexp,w
  8767  0B8D  1903               	btfsc	3,2
  8768  0B8E  01CA               	clrf	___fladd@signs
  8769  0B8F                     l3095:	
  8770  0B8F  1C4C               	btfss	___fladd@bexp,0
  8771  0B90  2B93               	goto	l3099
  8772  0B91  17BC               	bsf	___fladd@b+2,7
  8773  0B92  2B97               	goto	l931
  8774  0B93                     l3099:	
  8775  0B93  307F               	movlw	127
  8776  0B94  00C2               	movwf	??___fladd
  8777  0B95  0842               	movf	??___fladd,w
  8778  0B96  05BC               	andwf	___fladd@b+2,f
  8779  0B97                     l931:	
  8780  0B97  364C               	lsrf	___fladd@bexp,w
  8781  0B98  00C2               	movwf	??___fladd
  8782  0B99  0842               	movf	??___fladd,w
  8783  0B9A  00BD               	movwf	___fladd@b+3
  8784  0B9B  1FCA               	btfss	___fladd@signs,7
  8785  0B9C  0008               	return
  8786  0B9D  17BD               	bsf	___fladd@b+3,7
  8787  0B9E  0008               	return
  8788  0B9F                     __end_of___fladd:	
  8789                           
  8790                           	psect	text32
  8791  1E3D                     __ptext32:	
  8792 ;; *************** function ___flneg *****************
  8793 ;; Defined at:
  8794 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8795 ;; Parameters:    Size  Location     Type
  8796 ;;  f1              4    0[COMMON] unsigned char 
  8797 ;; Auto vars:     Size  Location     Type
  8798 ;;		None
  8799 ;; Return value:  Size  Location     Type
  8800 ;;                  4    0[COMMON] unsigned char 
  8801 ;; Registers used:
  8802 ;;		wreg
  8803 ;; Tracked objects:
  8804 ;;		On entry : 1F/1
  8805 ;;		On exit  : 1F/1
  8806 ;;		Unchanged: 1F/0
  8807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8808 ;;      Params:         4       0       0       0       0       0       0       0
  8809 ;;      Locals:         0       0       0       0       0       0       0       0
  8810 ;;      Temps:          0       0       0       0       0       0       0       0
  8811 ;;      Totals:         4       0       0       0       0       0       0       0
  8812 ;;Total ram usage:        4 bytes
  8813 ;; Hardware stack levels used:    1
  8814 ;; This function calls:
  8815 ;;		Nothing
  8816 ;; This function is called by:
  8817 ;;		_efgtoa
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           
  8822                           ;psect for function ___flneg
  8823  1E3D                     ___flneg:	
  8824                           
  8825                           ;incstack = 0
  8826                           ; Regs used in ___flneg: [wreg]
  8827  1E3D  0873               	movf	___flneg@f1+3,w
  8828  1E3E  0472               	iorwf	___flneg@f1+2,w
  8829  1E3F  0471               	iorwf	___flneg@f1+1,w
  8830  1E40  0470               	iorwf	___flneg@f1,w
  8831  1E41  1903               	skipnz
  8832  1E42  0008               	return
  8833  1E43  3080               	movlw	128
  8834  1E44  06F3               	xorwf	___flneg@f1+3,f
  8835  1E45  0008               	return
  8836  1E46                     __end_of___flneg:	
  8837                           
  8838                           	psect	text33
  8839  0B9F                     __ptext33:	
  8840 ;; *************** function ___flmul *****************
  8841 ;; Defined at:
  8842 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8843 ;; Parameters:    Size  Location     Type
  8844 ;;  b               4    0[BANK0 ] unsigned char 
  8845 ;;  a               4    4[BANK0 ] unsigned char 
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;  prod            4   20[BANK0 ] struct .
  8848 ;;  grs             4   15[BANK0 ] unsigned long 
  8849 ;;  temp            2   24[BANK0 ] struct .
  8850 ;;  bexp            1   19[BANK0 ] unsigned char 
  8851 ;;  aexp            1   14[BANK0 ] unsigned char 
  8852 ;;  sign            1   13[BANK0 ] unsigned char 
  8853 ;; Return value:  Size  Location     Type
  8854 ;;                  4    0[BANK0 ] unsigned char 
  8855 ;; Registers used:
  8856 ;;		wreg, status,2, status,0, pclath, cstack
  8857 ;; Tracked objects:
  8858 ;;		On entry : 1F/0
  8859 ;;		On exit  : 1F/0
  8860 ;;		Unchanged: 0/0
  8861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8862 ;;      Params:         0       8       0       0       0       0       0       0
  8863 ;;      Locals:         0      13       0       0       0       0       0       0
  8864 ;;      Temps:          0       5       0       0       0       0       0       0
  8865 ;;      Totals:         0      26       0       0       0       0       0       0
  8866 ;;Total ram usage:       26 bytes
  8867 ;; Hardware stack levels used:    1
  8868 ;; Hardware stack levels required when called:    1
  8869 ;; This function calls:
  8870 ;;		__Umul8_16
  8871 ;; This function is called by:
  8872 ;;		_main
  8873 ;;		_efgtoa
  8874 ;; This function uses a non-reentrant model
  8875 ;;
  8876                           
  8877                           
  8878                           ;psect for function ___flmul
  8879  0B9F                     ___flmul:	
  8880                           
  8881                           ;incstack = 0
  8882                           ; Regs used in ___flmul: [wreg+status,2+status,0+pclath+cstack]
  8883  0B9F  0823               	movf	___flmul@b+3,w
  8884  0BA0  3980               	andlw	128
  8885  0BA1  00A8               	movwf	??___flmul
  8886  0BA2  0828               	movf	??___flmul,w
  8887  0BA3  00AD               	movwf	___flmul@sign
  8888  0BA4  3523               	lslf	___flmul@b+3,w
  8889  0BA5  00A8               	movwf	??___flmul
  8890  0BA6  0828               	movf	??___flmul,w
  8891  0BA7  00B3               	movwf	___flmul@bexp
  8892  0BA8  1BA2               	btfsc	___flmul@b+2,7
  8893  0BA9  1433               	bsf	___flmul@bexp,0
  8894  0BAA  0833               	movf	___flmul@bexp,w
  8895  0BAB  1903               	btfsc	3,2
  8896  0BAC  2BBA               	goto	l3547
  8897  0BAD  0A33               	incf	___flmul@bexp,w
  8898  0BAE  1D03               	btfss	3,2
  8899  0BAF  2BB8               	goto	l3545
  8900  0BB0  3000               	movlw	0
  8901  0BB1  00A3               	movwf	___flmul@b+3
  8902  0BB2  3000               	movlw	0
  8903  0BB3  00A2               	movwf	___flmul@b+2
  8904  0BB4  3000               	movlw	0
  8905  0BB5  00A1               	movwf	___flmul@b+1
  8906  0BB6  3000               	movlw	0
  8907  0BB7  00A0               	movwf	___flmul@b
  8908  0BB8                     l3545:	
  8909  0BB8  17A2               	bsf	___flmul@b+2,7
  8910  0BB9  2BC2               	goto	l3549
  8911  0BBA                     l3547:	
  8912  0BBA  3000               	movlw	0
  8913  0BBB  00A3               	movwf	___flmul@b+3
  8914  0BBC  3000               	movlw	0
  8915  0BBD  00A2               	movwf	___flmul@b+2
  8916  0BBE  3000               	movlw	0
  8917  0BBF  00A1               	movwf	___flmul@b+1
  8918  0BC0  3000               	movlw	0
  8919  0BC1  00A0               	movwf	___flmul@b
  8920  0BC2                     l3549:	
  8921  0BC2  0827               	movf	___flmul@a+3,w
  8922  0BC3  3980               	andlw	128
  8923  0BC4  00A8               	movwf	??___flmul
  8924  0BC5  0828               	movf	??___flmul,w
  8925  0BC6  06AD               	xorwf	___flmul@sign,f
  8926  0BC7  3527               	lslf	___flmul@a+3,w
  8927  0BC8  00A8               	movwf	??___flmul
  8928  0BC9  0828               	movf	??___flmul,w
  8929  0BCA  00AE               	movwf	___flmul@aexp
  8930  0BCB  1BA6               	btfsc	___flmul@a+2,7
  8931  0BCC  142E               	bsf	___flmul@aexp,0
  8932  0BCD  082E               	movf	___flmul@aexp,w
  8933  0BCE  1903               	btfsc	3,2
  8934  0BCF  2BDD               	goto	l3565
  8935  0BD0  0A2E               	incf	___flmul@aexp,w
  8936  0BD1  1D03               	btfss	3,2
  8937  0BD2  2BDB               	goto	l3563
  8938  0BD3  3000               	movlw	0
  8939  0BD4  00A7               	movwf	___flmul@a+3
  8940  0BD5  3000               	movlw	0
  8941  0BD6  00A6               	movwf	___flmul@a+2
  8942  0BD7  3000               	movlw	0
  8943  0BD8  00A5               	movwf	___flmul@a+1
  8944  0BD9  3000               	movlw	0
  8945  0BDA  00A4               	movwf	___flmul@a
  8946  0BDB                     l3563:	
  8947  0BDB  17A6               	bsf	___flmul@a+2,7
  8948  0BDC  2BE5               	goto	l3567
  8949  0BDD                     l3565:	
  8950  0BDD  3000               	movlw	0
  8951  0BDE  00A7               	movwf	___flmul@a+3
  8952  0BDF  3000               	movlw	0
  8953  0BE0  00A6               	movwf	___flmul@a+2
  8954  0BE1  3000               	movlw	0
  8955  0BE2  00A5               	movwf	___flmul@a+1
  8956  0BE3  3000               	movlw	0
  8957  0BE4  00A4               	movwf	___flmul@a
  8958  0BE5                     l3567:	
  8959  0BE5  082E               	movf	___flmul@aexp,w
  8960  0BE6  1D03               	btfss	3,2
  8961  0BE7  0833               	movf	___flmul@bexp,w
  8962  0BE8  1D03               	btfss	3,2
  8963  0BE9  2BF3               	goto	l3575
  8964  0BEA  3000               	movlw	0
  8965  0BEB  00A3               	movwf	?___flmul+3
  8966  0BEC  3000               	movlw	0
  8967  0BED  00A2               	movwf	?___flmul+2
  8968  0BEE  3000               	movlw	0
  8969  0BEF  00A1               	movwf	?___flmul+1
  8970  0BF0  3000               	movlw	0
  8971  0BF1  00A0               	movwf	?___flmul
  8972  0BF2  0008               	return
  8973  0BF3                     l3575:	
  8974  0BF3  0820               	movf	___flmul@b,w
  8975  0BF4  00A8               	movwf	??___flmul
  8976  0BF5  0828               	movf	??___flmul,w
  8977  0BF6  00F0               	movwf	__Umul8_16@multiplicand
  8978  0BF7  0826               	movf	___flmul@a+2,w
  8979  0BF8  319F  277C  318B   	fcall	__Umul8_16
  8980  0BFB  0871               	movf	?__Umul8_16+1,w
  8981  0BFC  00B9               	movwf	___flmul@temp+1
  8982  0BFD  0870               	movf	?__Umul8_16,w
  8983  0BFE  00B8               	movwf	___flmul@temp
  8984  0BFF  0838               	movf	___flmul@temp,w
  8985  0C00  00A8               	movwf	??___flmul
  8986  0C01  01A9               	clrf	??___flmul+1
  8987  0C02  01AA               	clrf	??___flmul+2
  8988  0C03  01AB               	clrf	??___flmul+3
  8989  0C04  082B               	movf	??___flmul+3,w
  8990  0C05  00B2               	movwf	___flmul@grs+3
  8991  0C06  082A               	movf	??___flmul+2,w
  8992  0C07  00B1               	movwf	___flmul@grs+2
  8993  0C08  0829               	movf	??___flmul+1,w
  8994  0C09  00B0               	movwf	___flmul@grs+1
  8995  0C0A  0828               	movf	??___flmul,w
  8996  0C0B  00AF               	movwf	___flmul@grs
  8997  0C0C  0839               	movf	___flmul@temp+1,w
  8998  0C0D  00A8               	movwf	??___flmul
  8999  0C0E  01A9               	clrf	??___flmul+1
  9000  0C0F  01AA               	clrf	??___flmul+2
  9001  0C10  01AB               	clrf	??___flmul+3
  9002  0C11  082B               	movf	??___flmul+3,w
  9003  0C12  00B7               	movwf	___flmul@prod+3
  9004  0C13  082A               	movf	??___flmul+2,w
  9005  0C14  00B6               	movwf	___flmul@prod+2
  9006  0C15  0829               	movf	??___flmul+1,w
  9007  0C16  00B5               	movwf	___flmul@prod+1
  9008  0C17  0828               	movf	??___flmul,w
  9009  0C18  00B4               	movwf	___flmul@prod
  9010  0C19  0821               	movf	___flmul@b+1,w
  9011  0C1A  00A8               	movwf	??___flmul
  9012  0C1B  0828               	movf	??___flmul,w
  9013  0C1C  00F0               	movwf	__Umul8_16@multiplicand
  9014  0C1D  0825               	movf	___flmul@a+1,w
  9015  0C1E  319F  277C  318B   	fcall	__Umul8_16
  9016  0C21  0871               	movf	?__Umul8_16+1,w
  9017  0C22  00B9               	movwf	___flmul@temp+1
  9018  0C23  0870               	movf	?__Umul8_16,w
  9019  0C24  00B8               	movwf	___flmul@temp
  9020  0C25  0838               	movf	___flmul@temp,w
  9021  0C26  00A8               	movwf	??___flmul
  9022  0C27  01A9               	clrf	??___flmul+1
  9023  0C28  01AA               	clrf	??___flmul+2
  9024  0C29  01AB               	clrf	??___flmul+3
  9025  0C2A  0828               	movf	??___flmul,w
  9026  0C2B  07AF               	addwf	___flmul@grs,f
  9027  0C2C  0829               	movf	??___flmul+1,w
  9028  0C2D  3DB0               	addwfc	___flmul@grs+1,f
  9029  0C2E  082A               	movf	??___flmul+2,w
  9030  0C2F  3DB1               	addwfc	___flmul@grs+2,f
  9031  0C30  082B               	movf	??___flmul+3,w
  9032  0C31  3DB2               	addwfc	___flmul@grs+3,f
  9033  0C32  0839               	movf	___flmul@temp+1,w
  9034  0C33  00A8               	movwf	??___flmul
  9035  0C34  01A9               	clrf	??___flmul+1
  9036  0C35  01AA               	clrf	??___flmul+2
  9037  0C36  01AB               	clrf	??___flmul+3
  9038  0C37  0828               	movf	??___flmul,w
  9039  0C38  07B4               	addwf	___flmul@prod,f
  9040  0C39  0829               	movf	??___flmul+1,w
  9041  0C3A  3DB5               	addwfc	___flmul@prod+1,f
  9042  0C3B  082A               	movf	??___flmul+2,w
  9043  0C3C  3DB6               	addwfc	___flmul@prod+2,f
  9044  0C3D  082B               	movf	??___flmul+3,w
  9045  0C3E  3DB7               	addwfc	___flmul@prod+3,f
  9046  0C3F  0822               	movf	___flmul@b+2,w
  9047  0C40  00A8               	movwf	??___flmul
  9048  0C41  0828               	movf	??___flmul,w
  9049  0C42  00F0               	movwf	__Umul8_16@multiplicand
  9050  0C43  0824               	movf	___flmul@a,w
  9051  0C44  319F  277C  318B   	fcall	__Umul8_16
  9052  0C47  0871               	movf	?__Umul8_16+1,w
  9053  0C48  00B9               	movwf	___flmul@temp+1
  9054  0C49  0870               	movf	?__Umul8_16,w
  9055  0C4A  00B8               	movwf	___flmul@temp
  9056  0C4B  0838               	movf	___flmul@temp,w
  9057  0C4C  00A8               	movwf	??___flmul
  9058  0C4D  01A9               	clrf	??___flmul+1
  9059  0C4E  01AA               	clrf	??___flmul+2
  9060  0C4F  01AB               	clrf	??___flmul+3
  9061  0C50  0828               	movf	??___flmul,w
  9062  0C51  07AF               	addwf	___flmul@grs,f
  9063  0C52  0829               	movf	??___flmul+1,w
  9064  0C53  3DB0               	addwfc	___flmul@grs+1,f
  9065  0C54  082A               	movf	??___flmul+2,w
  9066  0C55  3DB1               	addwfc	___flmul@grs+2,f
  9067  0C56  082B               	movf	??___flmul+3,w
  9068  0C57  3DB2               	addwfc	___flmul@grs+3,f
  9069  0C58  0839               	movf	___flmul@temp+1,w
  9070  0C59  00A8               	movwf	??___flmul
  9071  0C5A  01A9               	clrf	??___flmul+1
  9072  0C5B  01AA               	clrf	??___flmul+2
  9073  0C5C  01AB               	clrf	??___flmul+3
  9074  0C5D  0828               	movf	??___flmul,w
  9075  0C5E  07B4               	addwf	___flmul@prod,f
  9076  0C5F  0829               	movf	??___flmul+1,w
  9077  0C60  3DB5               	addwfc	___flmul@prod+1,f
  9078  0C61  082A               	movf	??___flmul+2,w
  9079  0C62  3DB6               	addwfc	___flmul@prod+2,f
  9080  0C63  082B               	movf	??___flmul+3,w
  9081  0C64  3DB7               	addwfc	___flmul@prod+3,f
  9082  0C65  3008               	movlw	8
  9083  0C66                     u4585:	
  9084  0C66  35AF               	lslf	___flmul@grs,f
  9085  0C67  0DB0               	rlf	___flmul@grs+1,f
  9086  0C68  0DB1               	rlf	___flmul@grs+2,f
  9087  0C69  0DB2               	rlf	___flmul@grs+3,f
  9088  0C6A  0B89               	decfsz	9,f
  9089  0C6B  2C66               	goto	u4585
  9090  0C6C  0821               	movf	___flmul@b+1,w
  9091  0C6D  00A8               	movwf	??___flmul
  9092  0C6E  0828               	movf	??___flmul,w
  9093  0C6F  00F0               	movwf	__Umul8_16@multiplicand
  9094  0C70  0824               	movf	___flmul@a,w
  9095  0C71  319F  277C  318B   	fcall	__Umul8_16
  9096  0C74  0871               	movf	?__Umul8_16+1,w
  9097  0C75  00B9               	movwf	___flmul@temp+1
  9098  0C76  0870               	movf	?__Umul8_16,w
  9099  0C77  00B8               	movwf	___flmul@temp
  9100  0C78  0838               	movf	___flmul@temp,w
  9101  0C79  07AF               	addwf	___flmul@grs,f
  9102  0C7A  0839               	movf	___flmul@temp+1,w
  9103  0C7B  3DB0               	addwfc	___flmul@grs+1,f
  9104  0C7C  3000               	movlw	0
  9105  0C7D  3DB1               	addwfc	___flmul@grs+2,f
  9106  0C7E  3DB2               	addwfc	___flmul@grs+3,f
  9107  0C7F  0820               	movf	___flmul@b,w
  9108  0C80  00A8               	movwf	??___flmul
  9109  0C81  0828               	movf	??___flmul,w
  9110  0C82  00F0               	movwf	__Umul8_16@multiplicand
  9111  0C83  0825               	movf	___flmul@a+1,w
  9112  0C84  319F  277C  318B   	fcall	__Umul8_16
  9113  0C87  0871               	movf	?__Umul8_16+1,w
  9114  0C88  00B9               	movwf	___flmul@temp+1
  9115  0C89  0870               	movf	?__Umul8_16,w
  9116  0C8A  00B8               	movwf	___flmul@temp
  9117  0C8B  0838               	movf	___flmul@temp,w
  9118  0C8C  07AF               	addwf	___flmul@grs,f
  9119  0C8D  0839               	movf	___flmul@temp+1,w
  9120  0C8E  3DB0               	addwfc	___flmul@grs+1,f
  9121  0C8F  3000               	movlw	0
  9122  0C90  3DB1               	addwfc	___flmul@grs+2,f
  9123  0C91  3DB2               	addwfc	___flmul@grs+3,f
  9124  0C92  3008               	movlw	8
  9125  0C93                     u4595:	
  9126  0C93  35AF               	lslf	___flmul@grs,f
  9127  0C94  0DB0               	rlf	___flmul@grs+1,f
  9128  0C95  0DB1               	rlf	___flmul@grs+2,f
  9129  0C96  0DB2               	rlf	___flmul@grs+3,f
  9130  0C97  0B89               	decfsz	9,f
  9131  0C98  2C93               	goto	u4595
  9132  0C99  0820               	movf	___flmul@b,w
  9133  0C9A  00A8               	movwf	??___flmul
  9134  0C9B  0828               	movf	??___flmul,w
  9135  0C9C  00F0               	movwf	__Umul8_16@multiplicand
  9136  0C9D  0824               	movf	___flmul@a,w
  9137  0C9E  319F  277C  318B   	fcall	__Umul8_16
  9138  0CA1  0871               	movf	?__Umul8_16+1,w
  9139  0CA2  00B9               	movwf	___flmul@temp+1
  9140  0CA3  0870               	movf	?__Umul8_16,w
  9141  0CA4  00B8               	movwf	___flmul@temp
  9142  0CA5  0838               	movf	___flmul@temp,w
  9143  0CA6  07AF               	addwf	___flmul@grs,f
  9144  0CA7  0839               	movf	___flmul@temp+1,w
  9145  0CA8  3DB0               	addwfc	___flmul@grs+1,f
  9146  0CA9  3000               	movlw	0
  9147  0CAA  3DB1               	addwfc	___flmul@grs+2,f
  9148  0CAB  3DB2               	addwfc	___flmul@grs+3,f
  9149  0CAC  0821               	movf	___flmul@b+1,w
  9150  0CAD  00A8               	movwf	??___flmul
  9151  0CAE  0828               	movf	??___flmul,w
  9152  0CAF  00F0               	movwf	__Umul8_16@multiplicand
  9153  0CB0  0826               	movf	___flmul@a+2,w
  9154  0CB1  319F  277C  318B   	fcall	__Umul8_16
  9155  0CB4  0871               	movf	?__Umul8_16+1,w
  9156  0CB5  00B9               	movwf	___flmul@temp+1
  9157  0CB6  0870               	movf	?__Umul8_16,w
  9158  0CB7  00B8               	movwf	___flmul@temp
  9159  0CB8  0838               	movf	___flmul@temp,w
  9160  0CB9  07B4               	addwf	___flmul@prod,f
  9161  0CBA  0839               	movf	___flmul@temp+1,w
  9162  0CBB  3DB5               	addwfc	___flmul@prod+1,f
  9163  0CBC  3000               	movlw	0
  9164  0CBD  3DB6               	addwfc	___flmul@prod+2,f
  9165  0CBE  3DB7               	addwfc	___flmul@prod+3,f
  9166  0CBF  0822               	movf	___flmul@b+2,w
  9167  0CC0  00A8               	movwf	??___flmul
  9168  0CC1  0828               	movf	??___flmul,w
  9169  0CC2  00F0               	movwf	__Umul8_16@multiplicand
  9170  0CC3  0825               	movf	___flmul@a+1,w
  9171  0CC4  319F  277C  318B   	fcall	__Umul8_16
  9172  0CC7  0871               	movf	?__Umul8_16+1,w
  9173  0CC8  00B9               	movwf	___flmul@temp+1
  9174  0CC9  0870               	movf	?__Umul8_16,w
  9175  0CCA  00B8               	movwf	___flmul@temp
  9176  0CCB  0838               	movf	___flmul@temp,w
  9177  0CCC  07B4               	addwf	___flmul@prod,f
  9178  0CCD  0839               	movf	___flmul@temp+1,w
  9179  0CCE  3DB5               	addwfc	___flmul@prod+1,f
  9180  0CCF  3000               	movlw	0
  9181  0CD0  3DB6               	addwfc	___flmul@prod+2,f
  9182  0CD1  3DB7               	addwfc	___flmul@prod+3,f
  9183  0CD2  0822               	movf	___flmul@b+2,w
  9184  0CD3  00A8               	movwf	??___flmul
  9185  0CD4  0828               	movf	??___flmul,w
  9186  0CD5  00F0               	movwf	__Umul8_16@multiplicand
  9187  0CD6  0826               	movf	___flmul@a+2,w
  9188  0CD7  319F  277C  318B   	fcall	__Umul8_16
  9189  0CDA  0871               	movf	?__Umul8_16+1,w
  9190  0CDB  00B9               	movwf	___flmul@temp+1
  9191  0CDC  0870               	movf	?__Umul8_16,w
  9192  0CDD  00B8               	movwf	___flmul@temp
  9193  0CDE  0838               	movf	___flmul@temp,w
  9194  0CDF  00A8               	movwf	??___flmul
  9195  0CE0  0839               	movf	___flmul@temp+1,w
  9196  0CE1  00A9               	movwf	??___flmul+1
  9197  0CE2  01AA               	clrf	??___flmul+2
  9198  0CE3  01AB               	clrf	??___flmul+3
  9199  0CE4  3008               	movlw	8
  9200  0CE5                     u4605:	
  9201  0CE5  35A8               	lslf	??___flmul,f
  9202  0CE6  0DA9               	rlf	??___flmul+1,f
  9203  0CE7  0DAA               	rlf	??___flmul+2,f
  9204  0CE8  0DAB               	rlf	??___flmul+3,f
  9205  0CE9  0B89               	decfsz	9,f
  9206  0CEA  2CE5               	goto	u4605
  9207  0CEB  0828               	movf	??___flmul,w
  9208  0CEC  07B4               	addwf	___flmul@prod,f
  9209  0CED  0829               	movf	??___flmul+1,w
  9210  0CEE  3DB5               	addwfc	___flmul@prod+1,f
  9211  0CEF  082A               	movf	??___flmul+2,w
  9212  0CF0  3DB6               	addwfc	___flmul@prod+2,f
  9213  0CF1  082B               	movf	??___flmul+3,w
  9214  0CF2  3DB7               	addwfc	___flmul@prod+3,f
  9215  0CF3  0832               	movf	___flmul@grs+3,w
  9216  0CF4  00A8               	movwf	??___flmul
  9217  0CF5  01A9               	clrf	??___flmul+1
  9218  0CF6  01AA               	clrf	??___flmul+2
  9219  0CF7  01AB               	clrf	??___flmul+3
  9220  0CF8  0828               	movf	??___flmul,w
  9221  0CF9  07B4               	addwf	___flmul@prod,f
  9222  0CFA  0829               	movf	??___flmul+1,w
  9223  0CFB  3DB5               	addwfc	___flmul@prod+1,f
  9224  0CFC  082A               	movf	??___flmul+2,w
  9225  0CFD  3DB6               	addwfc	___flmul@prod+2,f
  9226  0CFE  082B               	movf	??___flmul+3,w
  9227  0CFF  3DB7               	addwfc	___flmul@prod+3,f
  9228  0D00  3008               	movlw	8
  9229  0D01                     u4615:	
  9230  0D01  35AF               	lslf	___flmul@grs,f
  9231  0D02  0DB0               	rlf	___flmul@grs+1,f
  9232  0D03  0DB1               	rlf	___flmul@grs+2,f
  9233  0D04  0DB2               	rlf	___flmul@grs+3,f
  9234  0D05  0B89               	decfsz	9,f
  9235  0D06  2D01               	goto	u4615
  9236  0D07  0833               	movf	___flmul@bexp,w
  9237  0D08  072E               	addwf	___flmul@aexp,w
  9238  0D09  00A8               	movwf	??___flmul
  9239  0D0A  01A9               	clrf	??___flmul+1
  9240  0D0B  0DA9               	rlf	??___flmul+1,f
  9241  0D0C  0828               	movf	??___flmul,w
  9242  0D0D  3E82               	addlw	130
  9243  0D0E  00B8               	movwf	___flmul@temp
  9244  0D0F  30FF               	movlw	255
  9245  0D10  3D29               	addwfc	??___flmul+1,w
  9246  0D11  00B9               	movwf	___flmul@temp+1
  9247  0D12                     l3627:	
  9248  0D12  1BB6               	btfsc	___flmul@prod+2,7
  9249  0D13  2D29               	goto	l3629
  9250  0D14  3001               	movlw	1
  9251  0D15                     u4625:	
  9252  0D15  35B4               	lslf	___flmul@prod,f
  9253  0D16  0DB5               	rlf	___flmul@prod+1,f
  9254  0D17  0DB6               	rlf	___flmul@prod+2,f
  9255  0D18  0DB7               	rlf	___flmul@prod+3,f
  9256  0D19  0B89               	decfsz	9,f
  9257  0D1A  2D15               	goto	u4625
  9258  0D1B  1BB2               	btfsc	___flmul@grs+3,7
  9259  0D1C  1434               	bsf	___flmul@prod,0
  9260  0D1D  3001               	movlw	1
  9261  0D1E                     u4645:	
  9262  0D1E  35AF               	lslf	___flmul@grs,f
  9263  0D1F  0DB0               	rlf	___flmul@grs+1,f
  9264  0D20  0DB1               	rlf	___flmul@grs+2,f
  9265  0D21  0DB2               	rlf	___flmul@grs+3,f
  9266  0D22  0B89               	decfsz	9,f
  9267  0D23  2D1E               	goto	u4645
  9268  0D24  30FF               	movlw	255
  9269  0D25  07B8               	addwf	___flmul@temp,f
  9270  0D26  30FF               	movlw	255
  9271  0D27  3DB9               	addwfc	___flmul@temp+1,f
  9272  0D28  2D12               	goto	l3627
  9273  0D29                     l3629:	
  9274  0D29  01AE               	clrf	___flmul@aexp
  9275  0D2A  1FB2               	btfss	___flmul@grs+3,7
  9276  0D2B  2D42               	goto	l3639
  9277  0D2C  30FF               	movlw	255
  9278  0D2D  052F               	andwf	___flmul@grs,w
  9279  0D2E  00A8               	movwf	??___flmul
  9280  0D2F  30FF               	movlw	255
  9281  0D30  0530               	andwf	___flmul@grs+1,w
  9282  0D31  00A9               	movwf	??___flmul+1
  9283  0D32  30FF               	movlw	255
  9284  0D33  0531               	andwf	___flmul@grs+2,w
  9285  0D34  00AA               	movwf	??___flmul+2
  9286  0D35  307F               	movlw	127
  9287  0D36  0532               	andwf	___flmul@grs+3,w
  9288  0D37  00AB               	movwf	??___flmul+3
  9289  0D38  082B               	movf	??___flmul+3,w
  9290  0D39  042A               	iorwf	??___flmul+2,w
  9291  0D3A  0429               	iorwf	??___flmul+1,w
  9292  0D3B  0428               	iorwf	??___flmul,w
  9293  0D3C  1903               	skipnz
  9294  0D3D  1834               	btfsc	___flmul@prod,0
  9295  0D3E  2D40               	goto	l3635
  9296  0D3F  2D42               	goto	l3639
  9297  0D40                     l3635:	
  9298  0D40  01AE               	clrf	___flmul@aexp
  9299  0D41  0AAE               	incf	___flmul@aexp,f
  9300  0D42                     l3639:	
  9301  0D42  082E               	movf	___flmul@aexp,w
  9302  0D43  1903               	btfsc	3,2
  9303  0D44  2D6B               	goto	l3649
  9304  0D45  3001               	movlw	1
  9305  0D46  07B4               	addwf	___flmul@prod,f
  9306  0D47  3000               	movlw	0
  9307  0D48  3DB5               	addwfc	___flmul@prod+1,f
  9308  0D49  3000               	movlw	0
  9309  0D4A  3DB6               	addwfc	___flmul@prod+2,f
  9310  0D4B  3000               	movlw	0
  9311  0D4C  3DB7               	addwfc	___flmul@prod+3,f
  9312  0D4D  1C37               	btfss	___flmul@prod+3,0
  9313  0D4E  2D6B               	goto	l3649
  9314  0D4F  0834               	movf	___flmul@prod,w
  9315  0D50  00A8               	movwf	??___flmul
  9316  0D51  0835               	movf	___flmul@prod+1,w
  9317  0D52  00A9               	movwf	??___flmul+1
  9318  0D53  0836               	movf	___flmul@prod+2,w
  9319  0D54  00AA               	movwf	??___flmul+2
  9320  0D55  0837               	movf	___flmul@prod+3,w
  9321  0D56  00AB               	movwf	??___flmul+3
  9322  0D57  3001               	movlw	1
  9323  0D58  00AC               	movwf	??___flmul+4
  9324  0D59                     u4715:	
  9325  0D59  37AB               	asrf	??___flmul+3,f
  9326  0D5A  0CAA               	rrf	??___flmul+2,f
  9327  0D5B  0CA9               	rrf	??___flmul+1,f
  9328  0D5C  0CA8               	rrf	??___flmul,f
  9329  0D5D  0BAC               	decfsz	??___flmul+4,f
  9330  0D5E  2D59               	goto	u4715
  9331  0D5F  082B               	movf	??___flmul+3,w
  9332  0D60  00B7               	movwf	___flmul@prod+3
  9333  0D61  082A               	movf	??___flmul+2,w
  9334  0D62  00B6               	movwf	___flmul@prod+2
  9335  0D63  0829               	movf	??___flmul+1,w
  9336  0D64  00B5               	movwf	___flmul@prod+1
  9337  0D65  0828               	movf	??___flmul,w
  9338  0D66  00B4               	movwf	___flmul@prod
  9339  0D67  3001               	movlw	1
  9340  0D68  07B8               	addwf	___flmul@temp,f
  9341  0D69  3000               	movlw	0
  9342  0D6A  3DB9               	addwfc	___flmul@temp+1,f
  9343  0D6B                     l3649:	
  9344  0D6B  0839               	movf	___flmul@temp+1,w
  9345  0D6C  3A80               	xorlw	128
  9346  0D6D  00A8               	movwf	??___flmul
  9347  0D6E  3080               	movlw	128
  9348  0D6F  0228               	subwf	??___flmul,w
  9349  0D70  1D03               	skipz
  9350  0D71  2D74               	goto	u4725
  9351  0D72  30FF               	movlw	255
  9352  0D73  0238               	subwf	___flmul@temp,w
  9353  0D74                     u4725:	
  9354  0D74  1C03               	skipc
  9355  0D75  2D80               	goto	l3653
  9356  0D76  307F               	movlw	127
  9357  0D77  0020               	movlb	0	; select bank0
  9358  0D78  00B7               	movwf	___flmul@prod+3
  9359  0D79  3080               	movlw	128
  9360  0D7A  00B6               	movwf	___flmul@prod+2
  9361  0D7B  3000               	movlw	0
  9362  0D7C  00B5               	movwf	___flmul@prod+1
  9363  0D7D  3000               	movlw	0
  9364  0D7E  00B4               	movwf	___flmul@prod
  9365  0D7F  2DAA               	goto	l997
  9366  0D80                     l3653:	
  9367  0D80  0020               	movlb	0	; select bank0
  9368  0D81  0839               	movf	___flmul@temp+1,w
  9369  0D82  3A80               	xorlw	128
  9370  0D83  00A8               	movwf	??___flmul
  9371  0D84  3080               	movlw	128
  9372  0D85  0228               	subwf	??___flmul,w
  9373  0D86  1D03               	skipz
  9374  0D87  2D8A               	goto	u4735
  9375  0D88  3001               	movlw	1
  9376  0D89  0238               	subwf	___flmul@temp,w
  9377  0D8A                     u4735:	
  9378  0D8A  1803               	skipnc
  9379  0D8B  2D97               	goto	l3659
  9380  0D8C  3000               	movlw	0
  9381  0D8D  0020               	movlb	0	; select bank0
  9382  0D8E  00B7               	movwf	___flmul@prod+3
  9383  0D8F  3000               	movlw	0
  9384  0D90  00B6               	movwf	___flmul@prod+2
  9385  0D91  3000               	movlw	0
  9386  0D92  00B5               	movwf	___flmul@prod+1
  9387  0D93  3000               	movlw	0
  9388  0D94  00B4               	movwf	___flmul@prod
  9389  0D95  01AD               	clrf	___flmul@sign
  9390  0D96  2DAA               	goto	l997
  9391  0D97                     l3659:	
  9392  0D97  0020               	movlb	0	; select bank0
  9393  0D98  0838               	movf	___flmul@temp,w
  9394  0D99  00A8               	movwf	??___flmul
  9395  0D9A  0828               	movf	??___flmul,w
  9396  0D9B  00B3               	movwf	___flmul@bexp
  9397  0D9C  30FF               	movlw	255
  9398  0D9D  05B4               	andwf	___flmul@prod,f
  9399  0D9E  30FF               	movlw	255
  9400  0D9F  05B5               	andwf	___flmul@prod+1,f
  9401  0DA0  307F               	movlw	127
  9402  0DA1  05B6               	andwf	___flmul@prod+2,f
  9403  0DA2  3000               	movlw	0
  9404  0DA3  05B7               	andwf	___flmul@prod+3,f
  9405  0DA4  1833               	btfsc	___flmul@bexp,0
  9406  0DA5  17B6               	bsf	___flmul@prod+2,7
  9407  0DA6  3633               	lsrf	___flmul@bexp,w
  9408  0DA7  00A8               	movwf	??___flmul
  9409  0DA8  0828               	movf	??___flmul,w
  9410  0DA9  00B7               	movwf	___flmul@prod+3
  9411  0DAA                     l997:	
  9412  0DAA  082D               	movf	___flmul@sign,w
  9413  0DAB  00A8               	movwf	??___flmul
  9414  0DAC  0828               	movf	??___flmul,w
  9415  0DAD  04B7               	iorwf	___flmul@prod+3,f
  9416  0DAE  0837               	movf	___flmul@prod+3,w
  9417  0DAF  00A3               	movwf	?___flmul+3
  9418  0DB0  0836               	movf	___flmul@prod+2,w
  9419  0DB1  00A2               	movwf	?___flmul+2
  9420  0DB2  0835               	movf	___flmul@prod+1,w
  9421  0DB3  00A1               	movwf	?___flmul+1
  9422  0DB4  0834               	movf	___flmul@prod,w
  9423  0DB5  00A0               	movwf	?___flmul
  9424  0DB6  0008               	return
  9425  0DB7                     __end_of___flmul:	
  9426                           
  9427                           	psect	text34
  9428  1F7C                     __ptext34:	
  9429 ;; *************** function __Umul8_16 *****************
  9430 ;; Defined at:
  9431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul8_16.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  multiplier      1    wreg     unsigned char 
  9434 ;;  multiplicand    1    0[COMMON] unsigned char 
  9435 ;; Auto vars:     Size  Location     Type
  9436 ;;  multiplier      1    8[COMMON] unsigned char 
  9437 ;;  word_mpld       2    6[COMMON] unsigned int 
  9438 ;;  product         2    4[COMMON] unsigned int 
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  2    0[COMMON] unsigned int 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 1F/0
  9445 ;;		On exit  : 1F/0
  9446 ;;		Unchanged: 1F/0
  9447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9448 ;;      Params:         2       0       0       0       0       0       0       0
  9449 ;;      Locals:         5       0       0       0       0       0       0       0
  9450 ;;      Temps:          2       0       0       0       0       0       0       0
  9451 ;;      Totals:         9       0       0       0       0       0       0       0
  9452 ;;Total ram usage:        9 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		___flmul
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           
  9462                           ;psect for function __Umul8_16
  9463  1F7C                     __Umul8_16:	
  9464                           
  9465                           ;incstack = 0
  9466                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9467                           ;__Umul8_16@multiplier stored from wreg
  9468  1F7C  00F8               	movwf	__Umul8_16@multiplier
  9469  1F7D  01F4               	clrf	__Umul8_16@product
  9470  1F7E  01F5               	clrf	__Umul8_16@product+1
  9471  1F7F  0870               	movf	__Umul8_16@multiplicand,w
  9472  1F80  00F2               	movwf	??__Umul8_16
  9473  1F81  01F3               	clrf	??__Umul8_16+1
  9474  1F82  0872               	movf	??__Umul8_16,w
  9475  1F83  00F6               	movwf	__Umul8_16@word_mpld
  9476  1F84  0873               	movf	??__Umul8_16+1,w
  9477  1F85  00F7               	movwf	__Umul8_16@word_mpld+1
  9478  1F86                     l3109:	
  9479  1F86  1C78               	btfss	__Umul8_16@multiplier,0
  9480  1F87  2F8C               	goto	l1181
  9481  1F88  0876               	movf	__Umul8_16@word_mpld,w
  9482  1F89  07F4               	addwf	__Umul8_16@product,f
  9483  1F8A  0877               	movf	__Umul8_16@word_mpld+1,w
  9484  1F8B  3DF5               	addwfc	__Umul8_16@product+1,f
  9485  1F8C                     l1181:	
  9486  1F8C  3001               	movlw	1
  9487  1F8D                     u3485:	
  9488  1F8D  35F6               	lslf	__Umul8_16@word_mpld,f
  9489  1F8E  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9490  1F8F  0B89               	decfsz	9,f
  9491  1F90  2F8D               	goto	u3485
  9492  1F91  1003               	clrc
  9493  1F92  0CF8               	rrf	__Umul8_16@multiplier,f
  9494  1F93  0878               	movf	__Umul8_16@multiplier,w
  9495  1F94  1D03               	btfss	3,2
  9496  1F95  2F86               	goto	l3109
  9497  1F96  0875               	movf	__Umul8_16@product+1,w
  9498  1F97  00F1               	movwf	?__Umul8_16+1
  9499  1F98  0874               	movf	__Umul8_16@product,w
  9500  1F99  00F0               	movwf	?__Umul8_16
  9501  1F9A  0008               	return
  9502  1F9B                     __end_of__Umul8_16:	
  9503                           
  9504                           	psect	text35
  9505  111B                     __ptext35:	
  9506 ;; *************** function ___fleq *****************
  9507 ;; Defined at:
  9508 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9509 ;; Parameters:    Size  Location     Type
  9510 ;;  ff1             4    0[COMMON] unsigned int 
  9511 ;;  ff2             4    4[COMMON] unsigned int 
  9512 ;; Auto vars:     Size  Location     Type
  9513 ;;		None
  9514 ;; Return value:  Size  Location     Type
  9515 ;;		None               void
  9516 ;; Registers used:
  9517 ;;		wreg, status,2, status,0
  9518 ;; Tracked objects:
  9519 ;;		On entry : 1F/1
  9520 ;;		On exit  : 1F/1
  9521 ;;		Unchanged: 1F/0
  9522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9523 ;;      Params:         8       0       0       0       0       0       0       0
  9524 ;;      Locals:         0       0       0       0       0       0       0       0
  9525 ;;      Temps:          4       0       0       0       0       0       0       0
  9526 ;;      Totals:        12       0       0       0       0       0       0       0
  9527 ;;Total ram usage:       12 bytes
  9528 ;; Hardware stack levels used:    1
  9529 ;; This function calls:
  9530 ;;		Nothing
  9531 ;; This function is called by:
  9532 ;;		_efgtoa
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           
  9537                           ;psect for function ___fleq
  9538  111B                     ___fleq:	
  9539                           
  9540                           ;incstack = 0
  9541                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9542  111B  3000               	movlw	0
  9543  111C  0570               	andwf	___fleq@ff1,w
  9544  111D  00F8               	movwf	??___fleq
  9545  111E  3000               	movlw	0
  9546  111F  0571               	andwf	___fleq@ff1+1,w
  9547  1120  00F9               	movwf	??___fleq+1
  9548  1121  3080               	movlw	128
  9549  1122  0572               	andwf	___fleq@ff1+2,w
  9550  1123  00FA               	movwf	??___fleq+2
  9551  1124  307F               	movlw	127
  9552  1125  0573               	andwf	___fleq@ff1+3,w
  9553  1126  00FB               	movwf	??___fleq+3
  9554  1127  087B               	movf	??___fleq+3,w
  9555  1128  047A               	iorwf	??___fleq+2,w
  9556  1129  0479               	iorwf	??___fleq+1,w
  9557  112A  0478               	iorwf	??___fleq,w
  9558  112B  1D03               	skipz
  9559  112C  2935               	goto	l757
  9560  112D  3000               	movlw	0
  9561  112E  00F3               	movwf	___fleq@ff1+3
  9562  112F  3000               	movlw	0
  9563  1130  00F2               	movwf	___fleq@ff1+2
  9564  1131  3000               	movlw	0
  9565  1132  00F1               	movwf	___fleq@ff1+1
  9566  1133  3000               	movlw	0
  9567  1134  00F0               	movwf	___fleq@ff1
  9568  1135                     l757:	
  9569  1135  3000               	movlw	0
  9570  1136  0574               	andwf	___fleq@ff2,w
  9571  1137  00F8               	movwf	??___fleq
  9572  1138  3000               	movlw	0
  9573  1139  0575               	andwf	___fleq@ff2+1,w
  9574  113A  00F9               	movwf	??___fleq+1
  9575  113B  3080               	movlw	128
  9576  113C  0576               	andwf	___fleq@ff2+2,w
  9577  113D  00FA               	movwf	??___fleq+2
  9578  113E  307F               	movlw	127
  9579  113F  0577               	andwf	___fleq@ff2+3,w
  9580  1140  00FB               	movwf	??___fleq+3
  9581  1141  087B               	movf	??___fleq+3,w
  9582  1142  047A               	iorwf	??___fleq+2,w
  9583  1143  0479               	iorwf	??___fleq+1,w
  9584  1144  0478               	iorwf	??___fleq,w
  9585  1145  1D03               	skipz
  9586  1146  294F               	goto	l758
  9587  1147  3000               	movlw	0
  9588  1148  00F7               	movwf	___fleq@ff2+3
  9589  1149  3000               	movlw	0
  9590  114A  00F6               	movwf	___fleq@ff2+2
  9591  114B  3000               	movlw	0
  9592  114C  00F5               	movwf	___fleq@ff2+1
  9593  114D  3000               	movlw	0
  9594  114E  00F4               	movwf	___fleq@ff2
  9595  114F                     l758:	
  9596  114F  0877               	movf	___fleq@ff2+3,w
  9597  1150  0673               	xorwf	___fleq@ff1+3,w
  9598  1151  1D03               	skipz
  9599  1152  295D               	goto	u4045
  9600  1153  0876               	movf	___fleq@ff2+2,w
  9601  1154  0672               	xorwf	___fleq@ff1+2,w
  9602  1155  1D03               	skipz
  9603  1156  295D               	goto	u4045
  9604  1157  0875               	movf	___fleq@ff2+1,w
  9605  1158  0671               	xorwf	___fleq@ff1+1,w
  9606  1159  1D03               	skipz
  9607  115A  295D               	goto	u4045
  9608  115B  0874               	movf	___fleq@ff2,w
  9609  115C  0670               	xorwf	___fleq@ff1,w
  9610  115D                     u4045:	
  9611  115D  1903               	skipnz
  9612  115E  2961               	goto	l3317
  9613  115F  1003               	clrc
  9614  1160  0008               	return
  9615  1161                     l3317:	
  9616  1161  1403               	setc
  9617  1162  0008               	return
  9618  1163                     __end_of___fleq:	
  9619                           
  9620                           	psect	text36
  9621  001B                     __ptext36:	
  9622 ;; *************** function ___fldiv *****************
  9623 ;; Defined at:
  9624 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9625 ;; Parameters:    Size  Location     Type
  9626 ;;  a               4    0[COMMON] unsigned int 
  9627 ;;  b               4    4[COMMON] unsigned int 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;  grs             4    7[BANK0 ] unsigned long 
  9630 ;;  rem             4    0[BANK0 ] unsigned long 
  9631 ;;  new_exp         2    5[BANK0 ] int 
  9632 ;;  aexp            1   12[BANK0 ] unsigned char 
  9633 ;;  bexp            1   11[BANK0 ] unsigned char 
  9634 ;;  sign            1    4[BANK0 ] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  4    0[COMMON] unsigned char 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 1F/1
  9641 ;;		On exit  : 1F/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9644 ;;      Params:         8       0       0       0       0       0       0       0
  9645 ;;      Locals:         0      13       0       0       0       0       0       0
  9646 ;;      Temps:          5       0       0       0       0       0       0       0
  9647 ;;      Totals:        13      13       0       0       0       0       0       0
  9648 ;;Total ram usage:       26 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; This function calls:
  9651 ;;		Nothing
  9652 ;; This function is called by:
  9653 ;;		_efgtoa
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           
  9658                           ;psect for function ___fldiv
  9659  001B                     ___fldiv:	
  9660                           
  9661                           ;incstack = 0
  9662                           ; Regs used in ___fldiv: [wreg+status,2+status,0]
  9663  001B  0877               	movf	___fldiv@b+3,w
  9664  001C  3980               	andlw	128
  9665  001D  00F8               	movwf	??___fldiv
  9666  001E  0878               	movf	??___fldiv,w
  9667  001F  0020               	movlb	0	; select bank0
  9668  0020  00A4               	movwf	___fldiv@sign
  9669  0021  3577               	lslf	___fldiv@b+3,w
  9670  0022  00F8               	movwf	??___fldiv
  9671  0023  0878               	movf	??___fldiv,w
  9672  0024  00AB               	movwf	___fldiv@bexp
  9673  0025  1BF6               	btfsc	___fldiv@b+2,7
  9674  0026  142B               	bsf	___fldiv@bexp,0
  9675  0027  082B               	movf	___fldiv@bexp,w
  9676  0028  1903               	btfsc	3,2
  9677  0029  2838               	goto	l3409
  9678  002A  0A2B               	incf	___fldiv@bexp,w
  9679  002B  1D03               	btfss	3,2
  9680  002C  2835               	goto	l3405
  9681  002D  3000               	movlw	0
  9682  002E  00F7               	movwf	___fldiv@b+3
  9683  002F  3000               	movlw	0
  9684  0030  00F6               	movwf	___fldiv@b+2
  9685  0031  3000               	movlw	0
  9686  0032  00F5               	movwf	___fldiv@b+1
  9687  0033  3000               	movlw	0
  9688  0034  00F4               	movwf	___fldiv@b
  9689  0035                     l3405:	
  9690  0035  17F6               	bsf	___fldiv@b+2,7
  9691  0036  01F7               	clrf	___fldiv@b+3
  9692  0037  2840               	goto	l3411
  9693  0038                     l3409:	
  9694  0038  3000               	movlw	0
  9695  0039  00F7               	movwf	___fldiv@b+3
  9696  003A  3000               	movlw	0
  9697  003B  00F6               	movwf	___fldiv@b+2
  9698  003C  3000               	movlw	0
  9699  003D  00F5               	movwf	___fldiv@b+1
  9700  003E  3000               	movlw	0
  9701  003F  00F4               	movwf	___fldiv@b
  9702  0040                     l3411:	
  9703  0040  0873               	movf	___fldiv@a+3,w
  9704  0041  3980               	andlw	128
  9705  0042  00F8               	movwf	??___fldiv
  9706  0043  0878               	movf	??___fldiv,w
  9707  0044  06A4               	xorwf	___fldiv@sign,f
  9708  0045  3573               	lslf	___fldiv@a+3,w
  9709  0046  00F8               	movwf	??___fldiv
  9710  0047  0878               	movf	??___fldiv,w
  9711  0048  00AC               	movwf	___fldiv@aexp
  9712  0049  1BF2               	btfsc	___fldiv@a+2,7
  9713  004A  142C               	bsf	___fldiv@aexp,0
  9714  004B  082C               	movf	___fldiv@aexp,w
  9715  004C  1903               	btfsc	3,2
  9716  004D  285C               	goto	l3429
  9717  004E  0A2C               	incf	___fldiv@aexp,w
  9718  004F  1D03               	btfss	3,2
  9719  0050  2859               	goto	l3425
  9720  0051  3000               	movlw	0
  9721  0052  00F3               	movwf	___fldiv@a+3
  9722  0053  3000               	movlw	0
  9723  0054  00F2               	movwf	___fldiv@a+2
  9724  0055  3000               	movlw	0
  9725  0056  00F1               	movwf	___fldiv@a+1
  9726  0057  3000               	movlw	0
  9727  0058  00F0               	movwf	___fldiv@a
  9728  0059                     l3425:	
  9729  0059  17F2               	bsf	___fldiv@a+2,7
  9730  005A  01F3               	clrf	___fldiv@a+3
  9731  005B  2864               	goto	l945
  9732  005C                     l3429:	
  9733  005C  3000               	movlw	0
  9734  005D  00F3               	movwf	___fldiv@a+3
  9735  005E  3000               	movlw	0
  9736  005F  00F2               	movwf	___fldiv@a+2
  9737  0060  3000               	movlw	0
  9738  0061  00F1               	movwf	___fldiv@a+1
  9739  0062  3000               	movlw	0
  9740  0063  00F0               	movwf	___fldiv@a
  9741  0064                     l945:	
  9742  0064  0873               	movf	___fldiv@a+3,w
  9743  0065  0472               	iorwf	___fldiv@a+2,w
  9744  0066  0471               	iorwf	___fldiv@a+1,w
  9745  0067  0470               	iorwf	___fldiv@a,w
  9746  0068  1D03               	skipz
  9747  0069  2883               	goto	l3439
  9748  006A  3000               	movlw	0
  9749  006B  00F7               	movwf	___fldiv@b+3
  9750  006C  3000               	movlw	0
  9751  006D  00F6               	movwf	___fldiv@b+2
  9752  006E  3000               	movlw	0
  9753  006F  00F5               	movwf	___fldiv@b+1
  9754  0070  3000               	movlw	0
  9755  0071  00F4               	movwf	___fldiv@b
  9756  0072  3080               	movlw	128
  9757  0073  04F6               	iorwf	___fldiv@b+2,f
  9758  0074  307F               	movlw	127
  9759  0075  04F7               	iorwf	___fldiv@b+3,f
  9760  0076                     L11:	
  9761  0076  0824               	movf	___fldiv@sign,w
  9762  0077  00F8               	movwf	??___fldiv
  9763  0078  0878               	movf	??___fldiv,w
  9764  0079  04F7               	iorwf	___fldiv@b+3,f
  9765  007A  0877               	movf	___fldiv@b+3,w
  9766  007B  00F3               	movwf	?___fldiv+3
  9767  007C  0876               	movf	___fldiv@b+2,w
  9768  007D  00F2               	movwf	?___fldiv+2
  9769  007E  0875               	movf	___fldiv@b+1,w
  9770  007F  00F1               	movwf	?___fldiv+1
  9771  0080  0874               	movf	___fldiv@b,w
  9772  0081  00F0               	movwf	?___fldiv
  9773  0082  0008               	return
  9774  0083                     l3439:	
  9775  0083  082B               	movf	___fldiv@bexp,w
  9776  0084  1D03               	btfss	3,2
  9777  0085  288F               	goto	l3445
  9778  0086  3000               	movlw	0
  9779  0087  00F3               	movwf	?___fldiv+3
  9780  0088  3000               	movlw	0
  9781  0089  00F2               	movwf	?___fldiv+2
  9782  008A  3000               	movlw	0
  9783  008B  00F1               	movwf	?___fldiv+1
  9784  008C  3000               	movlw	0
  9785  008D  00F0               	movwf	?___fldiv
  9786  008E  0008               	return
  9787  008F                     l3445:	
  9788  008F  082B               	movf	___fldiv@bexp,w
  9789  0090  00F8               	movwf	??___fldiv
  9790  0091  01F9               	clrf	??___fldiv+1
  9791  0092  0879               	movf	??___fldiv+1,w
  9792  0093  00FB               	movwf	??___fldiv+3
  9793  0094  082C               	movf	___fldiv@aexp,w
  9794  0095  0278               	subwf	??___fldiv,w
  9795  0096  00FA               	movwf	??___fldiv+2
  9796  0097  1C03               	skipc
  9797  0098  03FB               	decf	??___fldiv+3,f
  9798  0099  087A               	movf	??___fldiv+2,w
  9799  009A  3E7F               	addlw	127
  9800  009B  00A5               	movwf	___fldiv@new_exp
  9801  009C  3000               	movlw	0
  9802  009D  3D7B               	addwfc	??___fldiv+3,w
  9803  009E  00A6               	movwf	___fldiv@new_exp+1
  9804  009F  0877               	movf	___fldiv@b+3,w
  9805  00A0  00A3               	movwf	___fldiv@rem+3
  9806  00A1  0876               	movf	___fldiv@b+2,w
  9807  00A2  00A2               	movwf	___fldiv@rem+2
  9808  00A3  0875               	movf	___fldiv@b+1,w
  9809  00A4  00A1               	movwf	___fldiv@rem+1
  9810  00A5  0874               	movf	___fldiv@b,w
  9811  00A6  00A0               	movwf	___fldiv@rem
  9812  00A7  3000               	movlw	0
  9813  00A8  00F7               	movwf	___fldiv@b+3
  9814  00A9  3000               	movlw	0
  9815  00AA  00F6               	movwf	___fldiv@b+2
  9816  00AB  3000               	movlw	0
  9817  00AC  00F5               	movwf	___fldiv@b+1
  9818  00AD  3000               	movlw	0
  9819  00AE  00F4               	movwf	___fldiv@b
  9820  00AF  3000               	movlw	0
  9821  00B0  00AA               	movwf	___fldiv@grs+3
  9822  00B1  3000               	movlw	0
  9823  00B2  00A9               	movwf	___fldiv@grs+2
  9824  00B3  3000               	movlw	0
  9825  00B4  00A8               	movwf	___fldiv@grs+1
  9826  00B5  3000               	movlw	0
  9827  00B6  00A7               	movwf	___fldiv@grs
  9828  00B7  01AC               	clrf	___fldiv@aexp
  9829  00B8                     l3473:	
  9830  00B8  301A               	movlw	26
  9831  00B9  022C               	subwf	___fldiv@aexp,w
  9832  00BA  1803               	btfsc	3,0
  9833  00BB  28F4               	goto	l3475
  9834  00BC  082C               	movf	___fldiv@aexp,w
  9835  00BD  1903               	btfsc	3,2
  9836  00BE  28D6               	goto	l3465
  9837  00BF  3001               	movlw	1
  9838  00C0                     u4305:	
  9839  00C0  35A0               	lslf	___fldiv@rem,f
  9840  00C1  0DA1               	rlf	___fldiv@rem+1,f
  9841  00C2  0DA2               	rlf	___fldiv@rem+2,f
  9842  00C3  0DA3               	rlf	___fldiv@rem+3,f
  9843  00C4  0B89               	decfsz	9,f
  9844  00C5  28C0               	goto	u4305
  9845  00C6  3001               	movlw	1
  9846  00C7                     u4315:	
  9847  00C7  35F4               	lslf	___fldiv@b,f
  9848  00C8  0DF5               	rlf	___fldiv@b+1,f
  9849  00C9  0DF6               	rlf	___fldiv@b+2,f
  9850  00CA  0DF7               	rlf	___fldiv@b+3,f
  9851  00CB  0B89               	decfsz	9,f
  9852  00CC  28C7               	goto	u4315
  9853  00CD  1BAA               	btfsc	___fldiv@grs+3,7
  9854  00CE  1474               	bsf	___fldiv@b,0
  9855  00CF  3001               	movlw	1
  9856  00D0                     u4335:	
  9857  00D0  35A7               	lslf	___fldiv@grs,f
  9858  00D1  0DA8               	rlf	___fldiv@grs+1,f
  9859  00D2  0DA9               	rlf	___fldiv@grs+2,f
  9860  00D3  0DAA               	rlf	___fldiv@grs+3,f
  9861  00D4  0B89               	decfsz	9,f
  9862  00D5  28D0               	goto	u4335
  9863  00D6                     l3465:	
  9864  00D6  0873               	movf	___fldiv@a+3,w
  9865  00D7  0223               	subwf	___fldiv@rem+3,w
  9866  00D8  1D03               	skipz
  9867  00D9  28E4               	goto	u4345
  9868  00DA  0872               	movf	___fldiv@a+2,w
  9869  00DB  0222               	subwf	___fldiv@rem+2,w
  9870  00DC  1D03               	skipz
  9871  00DD  28E4               	goto	u4345
  9872  00DE  0871               	movf	___fldiv@a+1,w
  9873  00DF  0221               	subwf	___fldiv@rem+1,w
  9874  00E0  1D03               	skipz
  9875  00E1  28E4               	goto	u4345
  9876  00E2  0870               	movf	___fldiv@a,w
  9877  00E3  0220               	subwf	___fldiv@rem,w
  9878  00E4                     u4345:	
  9879  00E4  1C03               	skipc
  9880  00E5  28EF               	goto	l3471
  9881  00E6  172A               	bsf	___fldiv@grs+3,6
  9882  00E7  0870               	movf	___fldiv@a,w
  9883  00E8  02A0               	subwf	___fldiv@rem,f
  9884  00E9  0871               	movf	___fldiv@a+1,w
  9885  00EA  3BA1               	subwfb	___fldiv@rem+1,f
  9886  00EB  0872               	movf	___fldiv@a+2,w
  9887  00EC  3BA2               	subwfb	___fldiv@rem+2,f
  9888  00ED  0873               	movf	___fldiv@a+3,w
  9889  00EE  3BA3               	subwfb	___fldiv@rem+3,f
  9890  00EF                     l3471:	
  9891  00EF  3001               	movlw	1
  9892  00F0  00F8               	movwf	??___fldiv
  9893  00F1  0878               	movf	??___fldiv,w
  9894  00F2  07AC               	addwf	___fldiv@aexp,f
  9895  00F3  28B8               	goto	l3473
  9896  00F4                     l3475:	
  9897  00F4  0823               	movf	___fldiv@rem+3,w
  9898  00F5  0422               	iorwf	___fldiv@rem+2,w
  9899  00F6  0421               	iorwf	___fldiv@rem+1,w
  9900  00F7  0420               	iorwf	___fldiv@rem,w
  9901  00F8  1D03               	btfss	3,2
  9902  00F9  1427               	bsf	___fldiv@grs,0
  9903  00FA                     l3489:	
  9904  00FA  1BF6               	btfsc	___fldiv@b+2,7
  9905  00FB  2911               	goto	l3491
  9906  00FC  3001               	movlw	1
  9907  00FD                     u4375:	
  9908  00FD  35F4               	lslf	___fldiv@b,f
  9909  00FE  0DF5               	rlf	___fldiv@b+1,f
  9910  00FF  0DF6               	rlf	___fldiv@b+2,f
  9911  0100  0DF7               	rlf	___fldiv@b+3,f
  9912  0101  0B89               	decfsz	9,f
  9913  0102  28FD               	goto	u4375
  9914  0103  1BAA               	btfsc	___fldiv@grs+3,7
  9915  0104  1474               	bsf	___fldiv@b,0
  9916  0105  3001               	movlw	1
  9917  0106                     u4395:	
  9918  0106  35A7               	lslf	___fldiv@grs,f
  9919  0107  0DA8               	rlf	___fldiv@grs+1,f
  9920  0108  0DA9               	rlf	___fldiv@grs+2,f
  9921  0109  0DAA               	rlf	___fldiv@grs+3,f
  9922  010A  0B89               	decfsz	9,f
  9923  010B  2906               	goto	u4395
  9924  010C  30FF               	movlw	255
  9925  010D  07A5               	addwf	___fldiv@new_exp,f
  9926  010E  30FF               	movlw	255
  9927  010F  3DA6               	addwfc	___fldiv@new_exp+1,f
  9928  0110  28FA               	goto	l3489
  9929  0111                     l3491:	
  9930  0111  01AC               	clrf	___fldiv@aexp
  9931  0112  1FAA               	btfss	___fldiv@grs+3,7
  9932  0113  292A               	goto	l3501
  9933  0114  30FF               	movlw	255
  9934  0115  0527               	andwf	___fldiv@grs,w
  9935  0116  00F8               	movwf	??___fldiv
  9936  0117  30FF               	movlw	255
  9937  0118  0528               	andwf	___fldiv@grs+1,w
  9938  0119  00F9               	movwf	??___fldiv+1
  9939  011A  30FF               	movlw	255
  9940  011B  0529               	andwf	___fldiv@grs+2,w
  9941  011C  00FA               	movwf	??___fldiv+2
  9942  011D  307F               	movlw	127
  9943  011E  052A               	andwf	___fldiv@grs+3,w
  9944  011F  00FB               	movwf	??___fldiv+3
  9945  0120  087B               	movf	??___fldiv+3,w
  9946  0121  047A               	iorwf	??___fldiv+2,w
  9947  0122  0479               	iorwf	??___fldiv+1,w
  9948  0123  0478               	iorwf	??___fldiv,w
  9949  0124  1903               	skipnz
  9950  0125  1874               	btfsc	___fldiv@b,0
  9951  0126  2928               	goto	l3497
  9952  0127  292A               	goto	l3501
  9953  0128                     l3497:	
  9954  0128  01AC               	clrf	___fldiv@aexp
  9955  0129  0AAC               	incf	___fldiv@aexp,f
  9956  012A                     l3501:	
  9957  012A  082C               	movf	___fldiv@aexp,w
  9958  012B  1903               	btfsc	3,2
  9959  012C  2953               	goto	l3511
  9960  012D  3001               	movlw	1
  9961  012E  07F4               	addwf	___fldiv@b,f
  9962  012F  3000               	movlw	0
  9963  0130  3DF5               	addwfc	___fldiv@b+1,f
  9964  0131  3000               	movlw	0
  9965  0132  3DF6               	addwfc	___fldiv@b+2,f
  9966  0133  3000               	movlw	0
  9967  0134  3DF7               	addwfc	___fldiv@b+3,f
  9968  0135  1C77               	btfss	___fldiv@b+3,0
  9969  0136  2953               	goto	l3511
  9970  0137  0874               	movf	___fldiv@b,w
  9971  0138  00F8               	movwf	??___fldiv
  9972  0139  0875               	movf	___fldiv@b+1,w
  9973  013A  00F9               	movwf	??___fldiv+1
  9974  013B  0876               	movf	___fldiv@b+2,w
  9975  013C  00FA               	movwf	??___fldiv+2
  9976  013D  0877               	movf	___fldiv@b+3,w
  9977  013E  00FB               	movwf	??___fldiv+3
  9978  013F  3001               	movlw	1
  9979  0140  00FC               	movwf	??___fldiv+4
  9980  0141                     u4465:	
  9981  0141  37FB               	asrf	??___fldiv+3,f
  9982  0142  0CFA               	rrf	??___fldiv+2,f
  9983  0143  0CF9               	rrf	??___fldiv+1,f
  9984  0144  0CF8               	rrf	??___fldiv,f
  9985  0145  0BFC               	decfsz	??___fldiv+4,f
  9986  0146  2941               	goto	u4465
  9987  0147  087B               	movf	??___fldiv+3,w
  9988  0148  00F7               	movwf	___fldiv@b+3
  9989  0149  087A               	movf	??___fldiv+2,w
  9990  014A  00F6               	movwf	___fldiv@b+2
  9991  014B  0879               	movf	??___fldiv+1,w
  9992  014C  00F5               	movwf	___fldiv@b+1
  9993  014D  0878               	movf	??___fldiv,w
  9994  014E  00F4               	movwf	___fldiv@b
  9995  014F  3001               	movlw	1
  9996  0150  07A5               	addwf	___fldiv@new_exp,f
  9997  0151  3000               	movlw	0
  9998  0152  3DA6               	addwfc	___fldiv@new_exp+1,f
  9999  0153                     l3511:	
 10000  0153  0826               	movf	___fldiv@new_exp+1,w
 10001  0154  3A80               	xorlw	128
 10002  0155  00F8               	movwf	??___fldiv
 10003  0156  3080               	movlw	128
 10004  0157  0278               	subwf	??___fldiv,w
 10005  0158  1D03               	skipz
 10006  0159  295C               	goto	u4475
 10007  015A  30FF               	movlw	255
 10008  015B  0225               	subwf	___fldiv@new_exp,w
 10009  015C                     u4475:	
 10010  015C  1C03               	skipc
 10011  015D  296B               	goto	l966
 10012  015E  30FF               	movlw	255
 10013  015F  0020               	movlb	0	; select bank0
 10014  0160  00A5               	movwf	___fldiv@new_exp
 10015  0161  3000               	movlw	0
 10016  0162  00A6               	movwf	___fldiv@new_exp+1
 10017  0163  3000               	movlw	0
 10018  0164  00F7               	movwf	___fldiv@b+3
 10019  0165  3000               	movlw	0
 10020  0166  00F6               	movwf	___fldiv@b+2
 10021  0167  3000               	movlw	0
 10022  0168  00F5               	movwf	___fldiv@b+1
 10023  0169  3000               	movlw	0
 10024  016A  00F4               	movwf	___fldiv@b
 10025  016B                     l966:	
 10026  016B  0020               	movlb	0	; select bank0
 10027  016C  0826               	movf	___fldiv@new_exp+1,w
 10028  016D  3A80               	xorlw	128
 10029  016E  00F8               	movwf	??___fldiv
 10030  016F  3080               	movlw	128
 10031  0170  0278               	subwf	??___fldiv,w
 10032  0171  1D03               	skipz
 10033  0172  2975               	goto	u4485
 10034  0173  3001               	movlw	1
 10035  0174  0225               	subwf	___fldiv@new_exp,w
 10036  0175                     u4485:	
 10037  0175  1803               	skipnc
 10038  0176  2983               	goto	l967
 10039  0177  0020               	movlb	0	; select bank0
 10040  0178  01A5               	clrf	___fldiv@new_exp
 10041  0179  01A6               	clrf	___fldiv@new_exp+1
 10042  017A  3000               	movlw	0
 10043  017B  00F7               	movwf	___fldiv@b+3
 10044  017C  3000               	movlw	0
 10045  017D  00F6               	movwf	___fldiv@b+2
 10046  017E  3000               	movlw	0
 10047  017F  00F5               	movwf	___fldiv@b+1
 10048  0180  3000               	movlw	0
 10049  0181  00F4               	movwf	___fldiv@b
 10050  0182  01A4               	clrf	___fldiv@sign
 10051  0183                     l967:	
 10052  0183  0020               	movlb	0	; select bank0
 10053  0184  0825               	movf	___fldiv@new_exp,w
 10054  0185  00F8               	movwf	??___fldiv
 10055  0186  0878               	movf	??___fldiv,w
 10056  0187  00AB               	movwf	___fldiv@bexp
 10057  0188  1C2B               	btfss	___fldiv@bexp,0
 10058  0189  298C               	goto	l3525
 10059  018A  17F6               	bsf	___fldiv@b+2,7
 10060  018B  2990               	goto	l969
 10061  018C                     l3525:	
 10062  018C  307F               	movlw	127
 10063  018D  00F8               	movwf	??___fldiv
 10064  018E  0878               	movf	??___fldiv,w
 10065  018F  05F6               	andwf	___fldiv@b+2,f
 10066  0190                     l969:	
 10067  0190  362B               	lsrf	___fldiv@bexp,w
 10068  0191  00F8               	movwf	??___fldiv
 10069  0192  0878               	movf	??___fldiv,w
 10070  0193  00F7               	movwf	___fldiv@b+3
 10071  0194  2876               	goto	L11
 10072  0195                     __end_of___fldiv:	
 10073                           
 10074                           	psect	text37
 10075  10D6                     __ptext37:	
 10076 ;; *************** function ___awmod *****************
 10077 ;; Defined at:
 10078 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  divisor         2    0[BANK0 ] int 
 10081 ;;  dividend        2    2[BANK0 ] int 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  sign            1   13[COMMON] unsigned char 
 10084 ;;  counter         1   12[COMMON] unsigned char 
 10085 ;; Return value:  Size  Location     Type
 10086 ;;                  2    0[BANK0 ] int 
 10087 ;; Registers used:
 10088 ;;		wreg, status,2, status,0
 10089 ;; Tracked objects:
 10090 ;;		On entry : 1F/0
 10091 ;;		On exit  : 1F/0
 10092 ;;		Unchanged: 0/0
 10093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10094 ;;      Params:         0       4       0       0       0       0       0       0
 10095 ;;      Locals:         2       0       0       0       0       0       0       0
 10096 ;;      Temps:          1       0       0       0       0       0       0       0
 10097 ;;      Totals:         3       4       0       0       0       0       0       0
 10098 ;;Total ram usage:        7 bytes
 10099 ;; Hardware stack levels used:    1
 10100 ;; This function calls:
 10101 ;;		Nothing
 10102 ;; This function is called by:
 10103 ;;		_informacion
 10104 ;;		_efgtoa
 10105 ;; This function uses a non-reentrant model
 10106 ;;
 10107                           
 10108                           
 10109                           ;psect for function ___awmod
 10110  10D6                     ___awmod:	
 10111                           
 10112                           ;incstack = 0
 10113                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10114  10D6  01FD               	clrf	___awmod@sign
 10115  10D7  1FA3               	btfss	___awmod@dividend+1,7
 10116  10D8  28E0               	goto	l3279
 10117  10D9  09A2               	comf	___awmod@dividend,f
 10118  10DA  09A3               	comf	___awmod@dividend+1,f
 10119  10DB  0AA2               	incf	___awmod@dividend,f
 10120  10DC  1903               	skipnz
 10121  10DD  0AA3               	incf	___awmod@dividend+1,f
 10122  10DE  01FD               	clrf	___awmod@sign
 10123  10DF  0AFD               	incf	___awmod@sign,f
 10124  10E0                     l3279:	
 10125  10E0  1FA1               	btfss	___awmod@divisor+1,7
 10126  10E1  28E7               	goto	l3283
 10127  10E2  09A0               	comf	___awmod@divisor,f
 10128  10E3  09A1               	comf	___awmod@divisor+1,f
 10129  10E4  0AA0               	incf	___awmod@divisor,f
 10130  10E5  1903               	skipnz
 10131  10E6  0AA1               	incf	___awmod@divisor+1,f
 10132  10E7                     l3283:	
 10133  10E7  0820               	movf	___awmod@divisor,w
 10134  10E8  0421               	iorwf	___awmod@divisor+1,w
 10135  10E9  1903               	btfsc	3,2
 10136  10EA  290E               	goto	l3301
 10137  10EB  01FC               	clrf	___awmod@counter
 10138  10EC  0AFC               	incf	___awmod@counter,f
 10139  10ED                     l3291:	
 10140  10ED  1BA1               	btfsc	___awmod@divisor+1,7
 10141  10EE  28F9               	goto	l3293
 10142  10EF  3001               	movlw	1
 10143  10F0                     u3965:	
 10144  10F0  35A0               	lslf	___awmod@divisor,f
 10145  10F1  0DA1               	rlf	___awmod@divisor+1,f
 10146  10F2  0B89               	decfsz	9,f
 10147  10F3  28F0               	goto	u3965
 10148  10F4  3001               	movlw	1
 10149  10F5  00FB               	movwf	??___awmod
 10150  10F6  087B               	movf	??___awmod,w
 10151  10F7  07FC               	addwf	___awmod@counter,f
 10152  10F8  28ED               	goto	l3291
 10153  10F9                     l3293:	
 10154  10F9  0821               	movf	___awmod@divisor+1,w
 10155  10FA  0223               	subwf	___awmod@dividend+1,w
 10156  10FB  1D03               	skipz
 10157  10FC  28FF               	goto	u3985
 10158  10FD  0820               	movf	___awmod@divisor,w
 10159  10FE  0222               	subwf	___awmod@dividend,w
 10160  10FF                     u3985:	
 10161  10FF  1C03               	skipc
 10162  1100  2905               	goto	l3297
 10163  1101  0820               	movf	___awmod@divisor,w
 10164  1102  02A2               	subwf	___awmod@dividend,f
 10165  1103  0821               	movf	___awmod@divisor+1,w
 10166  1104  3BA3               	subwfb	___awmod@dividend+1,f
 10167  1105                     l3297:	
 10168  1105  3001               	movlw	1
 10169  1106                     u3995:	
 10170  1106  36A1               	lsrf	___awmod@divisor+1,f
 10171  1107  0CA0               	rrf	___awmod@divisor,f
 10172  1108  0B89               	decfsz	9,f
 10173  1109  2906               	goto	u3995
 10174  110A  3001               	movlw	1
 10175  110B  02FC               	subwf	___awmod@counter,f
 10176  110C  1D03               	btfss	3,2
 10177  110D  28F9               	goto	l3293
 10178  110E                     l3301:	
 10179  110E  087D               	movf	___awmod@sign,w
 10180  110F  1903               	btfsc	3,2
 10181  1110  2916               	goto	l3305
 10182  1111  09A2               	comf	___awmod@dividend,f
 10183  1112  09A3               	comf	___awmod@dividend+1,f
 10184  1113  0AA2               	incf	___awmod@dividend,f
 10185  1114  1903               	skipnz
 10186  1115  0AA3               	incf	___awmod@dividend+1,f
 10187  1116                     l3305:	
 10188  1116  0823               	movf	___awmod@dividend+1,w
 10189  1117  00A1               	movwf	?___awmod+1
 10190  1118  0822               	movf	___awmod@dividend,w
 10191  1119  00A0               	movwf	?___awmod
 10192  111A  0008               	return
 10193  111B                     __end_of___awmod:	
 10194                           
 10195                           	psect	text38
 10196  12EB                     __ptext38:	
 10197 ;; *************** function ___awdiv *****************
 10198 ;; Defined at:
 10199 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
 10200 ;; Parameters:    Size  Location     Type
 10201 ;;  divisor         2    0[BANK0 ] int 
 10202 ;;  dividend        2    2[BANK0 ] int 
 10203 ;; Auto vars:     Size  Location     Type
 10204 ;;  quotient        2    6[BANK0 ] int 
 10205 ;;  sign            1    5[BANK0 ] unsigned char 
 10206 ;;  counter         1    4[BANK0 ] unsigned char 
 10207 ;; Return value:  Size  Location     Type
 10208 ;;                  2    0[BANK0 ] int 
 10209 ;; Registers used:
 10210 ;;		wreg, status,2, status,0
 10211 ;; Tracked objects:
 10212 ;;		On entry : 1F/0
 10213 ;;		On exit  : 1F/0
 10214 ;;		Unchanged: 0/0
 10215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10216 ;;      Params:         0       4       0       0       0       0       0       0
 10217 ;;      Locals:         0       4       0       0       0       0       0       0
 10218 ;;      Temps:          1       0       0       0       0       0       0       0
 10219 ;;      Totals:         1       8       0       0       0       0       0       0
 10220 ;;Total ram usage:        9 bytes
 10221 ;; Hardware stack levels used:    1
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_informacion
 10226 ;;		_efgtoa
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           
 10231                           ;psect for function ___awdiv
 10232  12EB                     ___awdiv:	
 10233                           
 10234                           ;incstack = 0
 10235                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 10236  12EB  01A5               	clrf	___awdiv@sign
 10237  12EC  1FA1               	btfss	___awdiv@divisor+1,7
 10238  12ED  2AF5               	goto	l3235
 10239  12EE  09A0               	comf	___awdiv@divisor,f
 10240  12EF  09A1               	comf	___awdiv@divisor+1,f
 10241  12F0  0AA0               	incf	___awdiv@divisor,f
 10242  12F1  1903               	skipnz
 10243  12F2  0AA1               	incf	___awdiv@divisor+1,f
 10244  12F3  01A5               	clrf	___awdiv@sign
 10245  12F4  0AA5               	incf	___awdiv@sign,f
 10246  12F5                     l3235:	
 10247  12F5  1FA3               	btfss	___awdiv@dividend+1,7
 10248  12F6  2B00               	goto	l3241
 10249  12F7  09A2               	comf	___awdiv@dividend,f
 10250  12F8  09A3               	comf	___awdiv@dividend+1,f
 10251  12F9  0AA2               	incf	___awdiv@dividend,f
 10252  12FA  1903               	skipnz
 10253  12FB  0AA3               	incf	___awdiv@dividend+1,f
 10254  12FC  3001               	movlw	1
 10255  12FD  00FB               	movwf	??___awdiv
 10256  12FE  087B               	movf	??___awdiv,w
 10257  12FF  06A5               	xorwf	___awdiv@sign,f
 10258  1300                     l3241:	
 10259  1300  01A6               	clrf	___awdiv@quotient
 10260  1301  01A7               	clrf	___awdiv@quotient+1
 10261  1302  0820               	movf	___awdiv@divisor,w
 10262  1303  0421               	iorwf	___awdiv@divisor+1,w
 10263  1304  1903               	btfsc	3,2
 10264  1305  2B2F               	goto	l3263
 10265  1306  01A4               	clrf	___awdiv@counter
 10266  1307  0AA4               	incf	___awdiv@counter,f
 10267  1308                     l3251:	
 10268  1308  1BA1               	btfsc	___awdiv@divisor+1,7
 10269  1309  2B14               	goto	l3253
 10270  130A  3001               	movlw	1
 10271  130B                     u3865:	
 10272  130B  35A0               	lslf	___awdiv@divisor,f
 10273  130C  0DA1               	rlf	___awdiv@divisor+1,f
 10274  130D  0B89               	decfsz	9,f
 10275  130E  2B0B               	goto	u3865
 10276  130F  3001               	movlw	1
 10277  1310  00FB               	movwf	??___awdiv
 10278  1311  087B               	movf	??___awdiv,w
 10279  1312  07A4               	addwf	___awdiv@counter,f
 10280  1313  2B08               	goto	l3251
 10281  1314                     l3253:	
 10282  1314  3001               	movlw	1
 10283  1315                     u3885:	
 10284  1315  35A6               	lslf	___awdiv@quotient,f
 10285  1316  0DA7               	rlf	___awdiv@quotient+1,f
 10286  1317  0B89               	decfsz	9,f
 10287  1318  2B15               	goto	u3885
 10288  1319  0821               	movf	___awdiv@divisor+1,w
 10289  131A  0223               	subwf	___awdiv@dividend+1,w
 10290  131B  1D03               	skipz
 10291  131C  2B1F               	goto	u3895
 10292  131D  0820               	movf	___awdiv@divisor,w
 10293  131E  0222               	subwf	___awdiv@dividend,w
 10294  131F                     u3895:	
 10295  131F  1C03               	skipc
 10296  1320  2B26               	goto	l3259
 10297  1321  0820               	movf	___awdiv@divisor,w
 10298  1322  02A2               	subwf	___awdiv@dividend,f
 10299  1323  0821               	movf	___awdiv@divisor+1,w
 10300  1324  3BA3               	subwfb	___awdiv@dividend+1,f
 10301  1325  1426               	bsf	___awdiv@quotient,0
 10302  1326                     l3259:	
 10303  1326  3001               	movlw	1
 10304  1327                     u3905:	
 10305  1327  36A1               	lsrf	___awdiv@divisor+1,f
 10306  1328  0CA0               	rrf	___awdiv@divisor,f
 10307  1329  0B89               	decfsz	9,f
 10308  132A  2B27               	goto	u3905
 10309  132B  3001               	movlw	1
 10310  132C  02A4               	subwf	___awdiv@counter,f
 10311  132D  1D03               	btfss	3,2
 10312  132E  2B14               	goto	l3253
 10313  132F                     l3263:	
 10314  132F  0825               	movf	___awdiv@sign,w
 10315  1330  1903               	btfsc	3,2
 10316  1331  2B37               	goto	l3267
 10317  1332  09A6               	comf	___awdiv@quotient,f
 10318  1333  09A7               	comf	___awdiv@quotient+1,f
 10319  1334  0AA6               	incf	___awdiv@quotient,f
 10320  1335  1903               	skipnz
 10321  1336  0AA7               	incf	___awdiv@quotient+1,f
 10322  1337                     l3267:	
 10323  1337  0827               	movf	___awdiv@quotient+1,w
 10324  1338  00A1               	movwf	?___awdiv+1
 10325  1339  0826               	movf	___awdiv@quotient,w
 10326  133A  00A0               	movwf	?___awdiv
 10327  133B  0008               	return
 10328  133C                     __end_of___awdiv:	
 10329                           
 10330                           	psect	text39
 10331  15A9                     __ptext39:	
 10332 ;; *************** function _atoi *****************
 10333 ;; Defined at:
 10334 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10335 ;; Parameters:    Size  Location     Type
 10336 ;;  s               2    6[COMMON] PTR const unsigned char 
 10337 ;;		 -> STR_1(5), 
 10338 ;; Auto vars:     Size  Location     Type
 10339 ;;  n               2    7[BANK0 ] int 
 10340 ;;  neg             2    0[BANK0 ] int 
 10341 ;; Return value:  Size  Location     Type
 10342 ;;                  2    6[COMMON] int 
 10343 ;; Registers used:
 10344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10345 ;; Tracked objects:
 10346 ;;		On entry : 1F/0
 10347 ;;		On exit  : 1F/0
 10348 ;;		Unchanged: 0/0
 10349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10350 ;;      Params:         2       0       0       0       0       0       0       0
 10351 ;;      Locals:         0       9       0       0       0       0       0       0
 10352 ;;      Temps:          4       0       0       0       0       0       0       0
 10353 ;;      Totals:         6       9       0       0       0       0       0       0
 10354 ;;Total ram usage:       15 bytes
 10355 ;; Hardware stack levels used:    1
 10356 ;; Hardware stack levels required when called:    1
 10357 ;; This function calls:
 10358 ;;		___wmul
 10359 ;;		_isdigit
 10360 ;;		_isspace
 10361 ;; This function is called by:
 10362 ;;		_vfpfcnvrt
 10363 ;; This function uses a non-reentrant model
 10364 ;;
 10365                           
 10366                           
 10367                           ;psect for function _atoi
 10368  15A9                     _atoi:	
 10369                           
 10370                           ;incstack = 0
 10371                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10372  15A9  01A7               	clrf	atoi@n
 10373  15AA  01A8               	clrf	atoi@n+1
 10374  15AB  01A0               	clrf	atoi@neg
 10375  15AC  01A1               	clrf	atoi@neg+1
 10376  15AD                     l3979:	
 10377  15AD  01A6               	clrf	_atoi$1039
 10378  15AE  0AA6               	incf	_atoi$1039,f
 10379  15AF  0876               	movf	atoi@s,w
 10380  15B0  0084               	movwf	4
 10381  15B1  0877               	movf	atoi@s+1,w
 10382  15B2  0085               	movwf	5
 10383  15B3  0012               	moviw fsr0++
 10384  15B4  3A20               	xorlw	32
 10385  15B5  1903               	btfsc	3,2
 10386  15B6  2DC9               	goto	l3987
 10387  15B7  0876               	movf	atoi@s,w
 10388  15B8  0084               	movwf	4
 10389  15B9  0877               	movf	atoi@s+1,w
 10390  15BA  0085               	movwf	5
 10391  15BB  0800               	movf	0,w	;code access
 10392  15BC  3EF7               	addlw	247
 10393  15BD  00F8               	movwf	??_atoi
 10394  15BE  30FF               	movlw	255
 10395  15BF  1803               	skipnc
 10396  15C0  3000               	movlw	0
 10397  15C1  00F9               	movwf	??_atoi+1
 10398  15C2  3000               	movlw	0
 10399  15C3  0279               	subwf	??_atoi+1,w
 10400  15C4  3005               	movlw	5
 10401  15C5  1903               	skipnz
 10402  15C6  0278               	subwf	??_atoi,w
 10403  15C7  1803               	btfsc	3,0
 10404  15C8  01A6               	clrf	_atoi$1039
 10405  15C9                     l3987:	
 10406  15C9  0826               	movf	_atoi$1039,w
 10407  15CA  00F8               	movwf	??_atoi
 10408  15CB  01F9               	clrf	??_atoi+1
 10409  15CC  0878               	movf	??_atoi,w
 10410  15CD  00A2               	movwf	_atoi$1038
 10411  15CE  0879               	movf	??_atoi+1,w
 10412  15CF  00A3               	movwf	_atoi$1038+1
 10413  15D0  0822               	movf	_atoi$1038,w
 10414  15D1  0423               	iorwf	_atoi$1038+1,w
 10415  15D2  1903               	btfsc	3,2
 10416  15D3  2DDE               	goto	l3995
 10417  15D4  3001               	movlw	1
 10418  15D5  07F6               	addwf	atoi@s,f
 10419  15D6  3000               	movlw	0
 10420  15D7  3DF7               	addwfc	atoi@s+1,f
 10421  15D8  2DAD               	goto	l3979
 10422  15D9                     l3993:	
 10423  15D9  3001               	movlw	1
 10424  15DA  00A0               	movwf	atoi@neg
 10425  15DB  3000               	movlw	0
 10426  15DC  00A1               	movwf	atoi@neg+1
 10427  15DD  2E10               	goto	l1067
 10428  15DE                     l3995:	
 10429  15DE  0876               	movf	atoi@s,w
 10430  15DF  0084               	movwf	4
 10431  15E0  0877               	movf	atoi@s+1,w
 10432  15E1  0085               	movwf	5
 10433  15E2  0800               	movf	0,w	;code access
 10434  15E3  00F8               	movwf	??_atoi
 10435  15E4  01F9               	clrf	??_atoi+1
 10436                           
 10437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10438                           ; Switch size 1, requested type "simple"
 10439                           ; Number of cases is 1, Range of values is 0 to 0
 10440                           ; switch strategies available:
 10441                           ; Name         Instructions Cycles
 10442                           ; simple_byte            4     3 (average)
 10443                           ; direct_byte            8     6 (fixed)
 10444                           ; jumptable            260     6 (fixed)
 10445                           ;	Chosen strategy is simple_byte
 10446  15E5  0879               	movf	??_atoi+1,w
 10447  15E6  3A00               	xorlw	0	; case 0
 10448  15E7  1903               	skipnz
 10449  15E8  2DEA               	goto	l4573
 10450  15E9  2E14               	goto	l4001
 10451  15EA                     l4573:	
 10452                           
 10453                           ; Switch size 1, requested type "simple"
 10454                           ; Number of cases is 2, Range of values is 43 to 45
 10455                           ; switch strategies available:
 10456                           ; Name         Instructions Cycles
 10457                           ; simple_byte            7     4 (average)
 10458                           ; direct_byte           15     9 (fixed)
 10459                           ; jumptable            263     9 (fixed)
 10460                           ;	Chosen strategy is simple_byte
 10461  15EA  0878               	movf	??_atoi,w
 10462  15EB  3A2B               	xorlw	43	; case 43
 10463  15EC  1903               	skipnz
 10464  15ED  2E10               	goto	l1067
 10465  15EE  3A06               	xorlw	6	; case 45
 10466  15EF  1903               	skipnz
 10467  15F0  2DD9               	goto	l3993
 10468  15F1  2E14               	goto	l4001
 10469  15F2                     l3997:	
 10470  15F2  0876               	movf	atoi@s,w
 10471  15F3  0084               	movwf	4
 10472  15F4  0877               	movf	atoi@s+1,w
 10473  15F5  0085               	movwf	5
 10474  15F6  0800               	movf	0,w	;code access
 10475  15F7  00F8               	movwf	??_atoi
 10476  15F8  0828               	movf	atoi@n+1,w
 10477  15F9  00F1               	movwf	___wmul@multiplier+1
 10478  15FA  0827               	movf	atoi@n,w
 10479  15FB  00F0               	movwf	___wmul@multiplier
 10480  15FC  300A               	movlw	10
 10481  15FD  00F2               	movwf	___wmul@multiplicand
 10482  15FE  3000               	movlw	0
 10483  15FF  00F3               	movwf	___wmul@multiplicand+1
 10484  1600  319F  2728  3195   	fcall	___wmul
 10485  1603  0871               	movf	?___wmul+1,w
 10486  1604  00FA               	movwf	??_atoi+2
 10487  1605  0878               	movf	??_atoi,w
 10488  1606  0270               	subwf	?___wmul,w
 10489  1607  00F9               	movwf	??_atoi+1
 10490  1608  1C03               	skipc
 10491  1609  03FA               	decf	??_atoi+2,f
 10492  160A  0879               	movf	??_atoi+1,w
 10493  160B  3E30               	addlw	48
 10494  160C  00A7               	movwf	atoi@n
 10495  160D  3000               	movlw	0
 10496  160E  3D7A               	addwfc	??_atoi+2,w
 10497  160F  00A8               	movwf	atoi@n+1
 10498  1610                     l1067:	
 10499  1610  3001               	movlw	1
 10500  1611  07F6               	addwf	atoi@s,f
 10501  1612  3000               	movlw	0
 10502  1613  3DF7               	addwfc	atoi@s+1,f
 10503  1614                     l4001:	
 10504  1614  0876               	movf	atoi@s,w
 10505  1615  0084               	movwf	4
 10506  1616  0877               	movf	atoi@s+1,w
 10507  1617  0085               	movwf	5
 10508  1618  0800               	movf	0,w	;code access
 10509  1619  3ED0               	addlw	208
 10510  161A  00F8               	movwf	??_atoi
 10511  161B  30FF               	movlw	255
 10512  161C  1803               	skipnc
 10513  161D  3000               	movlw	0
 10514  161E  00F9               	movwf	??_atoi+1
 10515  161F  3000               	movlw	0
 10516  1620  0279               	subwf	??_atoi+1,w
 10517  1621  300A               	movlw	10
 10518  1622  1903               	skipnz
 10519  1623  0278               	subwf	??_atoi,w
 10520  1624  1803               	btfsc	3,0
 10521  1625  2E28               	goto	u5320
 10522  1626  3001               	movlw	1
 10523  1627  2E29               	goto	u5330
 10524  1628                     u5320:	
 10525  1628  3000               	movlw	0
 10526  1629                     u5330:	
 10527  1629  00FA               	movwf	??_atoi+2
 10528  162A  01FB               	clrf	??_atoi+3
 10529  162B  087A               	movf	??_atoi+2,w
 10530  162C  00A4               	movwf	_atoi$1040
 10531  162D  087B               	movf	??_atoi+3,w
 10532  162E  00A5               	movwf	_atoi$1040+1
 10533  162F  0824               	movf	_atoi$1040,w
 10534  1630  0425               	iorwf	_atoi$1040+1,w
 10535  1631  1D03               	btfss	3,2
 10536  1632  2DF2               	goto	l3997
 10537  1633  0820               	movf	atoi@neg,w
 10538  1634  0421               	iorwf	atoi@neg+1,w
 10539  1635  1D03               	btfss	3,2
 10540  1636  2E43               	goto	l4011
 10541  1637  0927               	comf	atoi@n,w
 10542  1638  00F8               	movwf	??_atoi
 10543  1639  0928               	comf	atoi@n+1,w
 10544  163A  00F9               	movwf	??_atoi+1
 10545  163B  0AF8               	incf	??_atoi,f
 10546  163C  1903               	skipnz
 10547  163D  0AF9               	incf	??_atoi+1,f
 10548  163E  0878               	movf	??_atoi,w
 10549  163F  00F6               	movwf	?_atoi
 10550  1640  0879               	movf	??_atoi+1,w
 10551  1641  00F7               	movwf	?_atoi+1
 10552  1642  0008               	return
 10553  1643                     l4011:	
 10554  1643  0828               	movf	atoi@n+1,w
 10555  1644  00F7               	movwf	?_atoi+1
 10556  1645  0827               	movf	atoi@n,w
 10557  1646  00F6               	movwf	?_atoi
 10558  1647  0008               	return
 10559  1648                     __end_of_atoi:	
 10560                           
 10561                           	psect	text40
 10562  1F43                     __ptext40:	
 10563 ;; *************** function _isspace *****************
 10564 ;; Defined at:
 10565 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10566 ;; Parameters:    Size  Location     Type
 10567 ;;  c               2    0[COMMON] int 
 10568 ;; Auto vars:     Size  Location     Type
 10569 ;;		None
 10570 ;; Return value:  Size  Location     Type
 10571 ;;                  2    0[COMMON] int 
 10572 ;; Registers used:
 10573 ;;		wreg, status,2, status,0
 10574 ;; Tracked objects:
 10575 ;;		On entry : 0/0
 10576 ;;		On exit  : 0/0
 10577 ;;		Unchanged: 0/0
 10578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10579 ;;      Params:         2       0       0       0       0       0       0       0
 10580 ;;      Locals:         1       0       0       0       0       0       0       0
 10581 ;;      Temps:          2       0       0       0       0       0       0       0
 10582 ;;      Totals:         5       0       0       0       0       0       0       0
 10583 ;;Total ram usage:        5 bytes
 10584 ;; Hardware stack levels used:    1
 10585 ;; This function calls:
 10586 ;;		Nothing
 10587 ;; This function is called by:
 10588 ;;		_atoi
 10589 ;; This function uses a non-reentrant model
 10590 ;;
 10591                           
 10592                           
 10593                           ;psect for function _isspace
 10594  1F43                     _isspace:	
 10595                           
 10596                           ;incstack = 0
 10597                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10598  1F43  01F4               	clrf	_isspace$1069
 10599  1F44  0AF4               	incf	_isspace$1069,f
 10600  1F45  3020               	movlw	32
 10601  1F46  0670               	xorwf	isspace@c,w
 10602  1F47  0471               	iorwf	isspace@c+1,w
 10603  1F48  1903               	btfsc	3,2
 10604  1F49  2F57               	goto	l3679
 10605  1F4A  0870               	movf	isspace@c,w
 10606  1F4B  3EF7               	addlw	247
 10607  1F4C  00F2               	movwf	??_isspace
 10608  1F4D  30FF               	movlw	255
 10609  1F4E  3D71               	addwfc	isspace@c+1,w
 10610  1F4F  00F3               	movwf	??_isspace+1
 10611  1F50  3000               	movlw	0
 10612  1F51  0273               	subwf	??_isspace+1,w
 10613  1F52  3005               	movlw	5
 10614  1F53  1903               	skipnz
 10615  1F54  0272               	subwf	??_isspace,w
 10616  1F55  1803               	btfsc	3,0
 10617  1F56  01F4               	clrf	_isspace$1069
 10618  1F57                     l3679:	
 10619  1F57  0874               	movf	_isspace$1069,w
 10620  1F58  00F2               	movwf	??_isspace
 10621  1F59  01F3               	clrf	??_isspace+1
 10622  1F5A  0872               	movf	??_isspace,w
 10623  1F5B  00F0               	movwf	?_isspace
 10624  1F5C  0873               	movf	??_isspace+1,w
 10625  1F5D  00F1               	movwf	?_isspace+1
 10626  1F5E  0008               	return
 10627  1F5F                     __end_of_isspace:	
 10628                           
 10629                           	psect	text41
 10630  1EC8                     __ptext41:	
 10631 ;; *************** function _isdigit *****************
 10632 ;; Defined at:
 10633 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10634 ;; Parameters:    Size  Location     Type
 10635 ;;  c               2    0[COMMON] int 
 10636 ;; Auto vars:     Size  Location     Type
 10637 ;;		None
 10638 ;; Return value:  Size  Location     Type
 10639 ;;                  2    0[COMMON] int 
 10640 ;; Registers used:
 10641 ;;		wreg, status,2, status,0
 10642 ;; Tracked objects:
 10643 ;;		On entry : 0/0
 10644 ;;		On exit  : 0/0
 10645 ;;		Unchanged: 0/0
 10646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10647 ;;      Params:         2       0       0       0       0       0       0       0
 10648 ;;      Locals:         0       0       0       0       0       0       0       0
 10649 ;;      Temps:          4       0       0       0       0       0       0       0
 10650 ;;      Totals:         6       0       0       0       0       0       0       0
 10651 ;;Total ram usage:        6 bytes
 10652 ;; Hardware stack levels used:    1
 10653 ;; This function calls:
 10654 ;;		Nothing
 10655 ;; This function is called by:
 10656 ;;		_vfpfcnvrt
 10657 ;;		_atoi
 10658 ;; This function uses a non-reentrant model
 10659 ;;
 10660                           
 10661                           
 10662                           ;psect for function _isdigit
 10663  1EC8                     _isdigit:	
 10664                           
 10665                           ;incstack = 0
 10666                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10667  1EC8  0870               	movf	isdigit@c,w
 10668  1EC9  3ED0               	addlw	208
 10669  1ECA  00F2               	movwf	??_isdigit
 10670  1ECB  30FF               	movlw	255
 10671  1ECC  3D71               	addwfc	isdigit@c+1,w
 10672  1ECD  00F3               	movwf	??_isdigit+1
 10673  1ECE  3000               	movlw	0
 10674  1ECF  0273               	subwf	??_isdigit+1,w
 10675  1ED0  300A               	movlw	10
 10676  1ED1  1903               	skipnz
 10677  1ED2  0272               	subwf	??_isdigit,w
 10678  1ED3  1803               	btfsc	3,0
 10679  1ED4  2ED7               	goto	u3770
 10680  1ED5  3001               	movlw	1
 10681  1ED6  2ED8               	goto	u3780
 10682  1ED7                     u3770:	
 10683  1ED7  3000               	movlw	0
 10684  1ED8                     u3780:	
 10685  1ED8  00F4               	movwf	??_isdigit+2
 10686  1ED9  01F5               	clrf	??_isdigit+3
 10687  1EDA  0874               	movf	??_isdigit+2,w
 10688  1EDB  00F0               	movwf	?_isdigit
 10689  1EDC  0875               	movf	??_isdigit+3,w
 10690  1EDD  00F1               	movwf	?_isdigit+1
 10691  1EDE  0008               	return
 10692  1EDF                     __end_of_isdigit:	
 10693                           
 10694                           	psect	text42
 10695  1F28                     __ptext42:	
 10696 ;; *************** function ___wmul *****************
 10697 ;; Defined at:
 10698 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10699 ;; Parameters:    Size  Location     Type
 10700 ;;  multiplier      2    0[COMMON] unsigned int 
 10701 ;;  multiplicand    2    2[COMMON] unsigned int 
 10702 ;; Auto vars:     Size  Location     Type
 10703 ;;  product         2    4[COMMON] unsigned int 
 10704 ;; Return value:  Size  Location     Type
 10705 ;;                  2    0[COMMON] unsigned int 
 10706 ;; Registers used:
 10707 ;;		wreg, status,2, status,0
 10708 ;; Tracked objects:
 10709 ;;		On entry : 1F/0
 10710 ;;		On exit  : 1F/0
 10711 ;;		Unchanged: 1F/0
 10712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10713 ;;      Params:         4       0       0       0       0       0       0       0
 10714 ;;      Locals:         2       0       0       0       0       0       0       0
 10715 ;;      Temps:          0       0       0       0       0       0       0       0
 10716 ;;      Totals:         6       0       0       0       0       0       0       0
 10717 ;;Total ram usage:        6 bytes
 10718 ;; Hardware stack levels used:    1
 10719 ;; This function calls:
 10720 ;;		Nothing
 10721 ;; This function is called by:
 10722 ;;		_atoi
 10723 ;; This function uses a non-reentrant model
 10724 ;;
 10725                           
 10726                           
 10727                           ;psect for function ___wmul
 10728  1F28                     ___wmul:	
 10729                           
 10730                           ;incstack = 0
 10731                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10732  1F28  01F4               	clrf	___wmul@product
 10733  1F29  01F5               	clrf	___wmul@product+1
 10734  1F2A                     l3215:	
 10735  1F2A  1C70               	btfss	___wmul@multiplier,0
 10736  1F2B  2F30               	goto	l588
 10737  1F2C  0872               	movf	___wmul@multiplicand,w
 10738  1F2D  07F4               	addwf	___wmul@product,f
 10739  1F2E  0873               	movf	___wmul@multiplicand+1,w
 10740  1F2F  3DF5               	addwfc	___wmul@product+1,f
 10741  1F30                     l588:	
 10742  1F30  3001               	movlw	1
 10743  1F31                     u3805:	
 10744  1F31  35F2               	lslf	___wmul@multiplicand,f
 10745  1F32  0DF3               	rlf	___wmul@multiplicand+1,f
 10746  1F33  0B89               	decfsz	9,f
 10747  1F34  2F31               	goto	u3805
 10748  1F35  3001               	movlw	1
 10749  1F36                     u3815:	
 10750  1F36  36F1               	lsrf	___wmul@multiplier+1,f
 10751  1F37  0CF0               	rrf	___wmul@multiplier,f
 10752  1F38  0B89               	decfsz	9,f
 10753  1F39  2F36               	goto	u3815
 10754  1F3A  0870               	movf	___wmul@multiplier,w
 10755  1F3B  0471               	iorwf	___wmul@multiplier+1,w
 10756  1F3C  1D03               	btfss	3,2
 10757  1F3D  2F2A               	goto	l3215
 10758  1F3E  0875               	movf	___wmul@product+1,w
 10759  1F3F  00F1               	movwf	?___wmul+1
 10760  1F40  0874               	movf	___wmul@product,w
 10761  1F41  00F0               	movwf	?___wmul
 10762  1F42  0008               	return
 10763  1F43                     __end_of___wmul:	
 10764                           
 10765                           	psect	text43
 10766  1F0E                     __ptext43:	
 10767 ;; *************** function _Lcd_Write_String *****************
 10768 ;; Defined at:
 10769 ;;		line 105 in file "./lcd.h"
 10770 ;; Parameters:    Size  Location     Type
 10771 ;;  a               2    5[COMMON] PTR unsigned char 
 10772 ;;		 -> STR_10(4), STR_9(4), STR_8(6), STR_7(6), 
 10773 ;;		 -> STR_6(6), STR_5(6), STR_4(4), STR_3(4), 
 10774 ;;		 -> STR_2(8), Lcd_float@s(2), Lcd_Write_Int@buff(17), 
 10775 ;; Auto vars:     Size  Location     Type
 10776 ;;  i               2    8[COMMON] int 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/2
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10786 ;;      Params:         2       0       0       0       0       0       0       0
 10787 ;;      Locals:         2       0       0       0       0       0       0       0
 10788 ;;      Temps:          1       0       0       0       0       0       0       0
 10789 ;;      Totals:         5       0       0       0       0       0       0       0
 10790 ;;Total ram usage:        5 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:    2
 10793 ;; This function calls:
 10794 ;;		_Lcd_Write_Char
 10795 ;; This function is called by:
 10796 ;;		_Lcd_float
 10797 ;;		_Imprimir_LCD
 10798 ;;		_main
 10799 ;; This function uses a non-reentrant model
 10800 ;;
 10801                           
 10802                           
 10803                           ;psect for function _Lcd_Write_String
 10804  1F0E                     _Lcd_Write_String:	
 10805                           
 10806                           ;./lcd.h: 106:  int i;;./lcd.h: 107:  for(i=0;a[i]!='\0';i++)
 10807                           
 10808                           ;incstack = 0
 10809                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10810  1F0E  01F8               	clrf	Lcd_Write_String@i
 10811  1F0F  01F9               	clrf	Lcd_Write_String@i+1
 10812  1F10                     l4203:	
 10813  1F10  0875               	movf	Lcd_Write_String@a,w
 10814  1F11  0778               	addwf	Lcd_Write_String@i,w
 10815  1F12  0084               	movwf	4
 10816  1F13  0876               	movf	Lcd_Write_String@a+1,w
 10817  1F14  3D79               	addwfc	Lcd_Write_String@i+1,w
 10818  1F15  0085               	movwf	5
 10819  1F16  0012               	moviw fsr0++
 10820  1F17  1903               	btfsc	3,2
 10821  1F18  0008               	return
 10822                           
 10823                           ;./lcd.h: 108:     Lcd_Write_Char(a[i]);
 10824  1F19  0875               	movf	Lcd_Write_String@a,w
 10825  1F1A  0778               	addwf	Lcd_Write_String@i,w
 10826  1F1B  0084               	movwf	4
 10827  1F1C  0876               	movf	Lcd_Write_String@a+1,w
 10828  1F1D  3D79               	addwfc	Lcd_Write_String@i+1,w
 10829  1F1E  0085               	movwf	5
 10830  1F1F  0800               	movf	0,w	;code access
 10831  1F20  3190  2010  319F   	fcall	_Lcd_Write_Char
 10832  1F23  3001               	movlw	1
 10833  1F24  07F8               	addwf	Lcd_Write_String@i,f
 10834  1F25  3000               	movlw	0
 10835  1F26  3DF9               	addwfc	Lcd_Write_String@i+1,f
 10836  1F27  2F10               	goto	l4203
 10837  1F28                     __end_of_Lcd_Write_String:	
 10838                           
 10839                           	psect	text44
 10840  1010                     __ptext44:	
 10841 ;; *************** function _Lcd_Write_Char *****************
 10842 ;; Defined at:
 10843 ;;		line 91 in file "./lcd.h"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;  a               1    wreg     unsigned char 
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;  a               1    4[COMMON] unsigned char 
 10848 ;;  y               1    3[COMMON] unsigned char 
 10849 ;;  temp            1    2[COMMON] unsigned char 
 10850 ;; Return value:  Size  Location     Type
 10851 ;;                  1    wreg      void 
 10852 ;; Registers used:
 10853 ;;		wreg, status,2, status,0, pclath, cstack
 10854 ;; Tracked objects:
 10855 ;;		On entry : 0/2
 10856 ;;		On exit  : 1F/0
 10857 ;;		Unchanged: 0/0
 10858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10859 ;;      Params:         0       0       0       0       0       0       0       0
 10860 ;;      Locals:         3       0       0       0       0       0       0       0
 10861 ;;      Temps:          1       0       0       0       0       0       0       0
 10862 ;;      Totals:         4       0       0       0       0       0       0       0
 10863 ;;Total ram usage:        4 bytes
 10864 ;; Hardware stack levels used:    1
 10865 ;; Hardware stack levels required when called:    1
 10866 ;; This function calls:
 10867 ;;		_Lcd_Port
 10868 ;; This function is called by:
 10869 ;;		_Lcd_Write_String
 10870 ;; This function uses a non-reentrant model
 10871 ;;
 10872                           
 10873                           
 10874                           ;psect for function _Lcd_Write_Char
 10875  1010                     _Lcd_Write_Char:	
 10876                           
 10877                           ;incstack = 0
 10878                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10879                           ;Lcd_Write_Char@a stored from wreg
 10880  1010  00F4               	movwf	Lcd_Write_Char@a
 10881                           
 10882                           ;./lcd.h: 92:    char temp,y;;./lcd.h: 93:    temp = a&0x0F;
 10883  1011  0874               	movf	Lcd_Write_Char@a,w
 10884  1012  390F               	andlw	15
 10885  1013  00F1               	movwf	??_Lcd_Write_Char
 10886  1014  0871               	movf	??_Lcd_Write_Char,w
 10887  1015  00F2               	movwf	Lcd_Write_Char@temp
 10888                           
 10889                           ;./lcd.h: 94:    y = a&0xF0;
 10890  1016  0874               	movf	Lcd_Write_Char@a,w
 10891  1017  39F0               	andlw	240
 10892  1018  00F1               	movwf	??_Lcd_Write_Char
 10893  1019  0871               	movf	??_Lcd_Write_Char,w
 10894  101A  00F3               	movwf	Lcd_Write_Char@y
 10895                           
 10896                           ;./lcd.h: 95:    RD2 = 1;
 10897  101B  0020               	movlb	0	; select bank0
 10898  101C  150F               	bsf	15,2	;volatile
 10899                           
 10900                           ;./lcd.h: 96:    Lcd_Port(y>>4);
 10901  101D  0873               	movf	Lcd_Write_Char@y,w
 10902  101E  00F1               	movwf	??_Lcd_Write_Char
 10903  101F  3004               	movlw	4
 10904  1020                     u5595:	
 10905  1020  36F1               	lsrf	??_Lcd_Write_Char,f
 10906  1021  0B89               	decfsz	9,f
 10907  1022  2820               	goto	u5595
 10908  1023  0871               	movf	??_Lcd_Write_Char,w
 10909  1024  319E  269B  3190   	fcall	_Lcd_Port
 10910                           
 10911                           ;./lcd.h: 97:    RD3 = 1;
 10912  1027  158F               	bsf	15,3	;volatile
 10913                           
 10914                           ;./lcd.h: 98:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10915  1028  300D               	movlw	13
 10916  1029                     u5957:	
 10917  1029  0B89               	decfsz	9,f
 10918  102A  2829               	goto	u5957
 10919  102B  0000               	nop
 10920                           
 10921                           ;./lcd.h: 99:    RD3 = 0;
 10922  102C  0020               	movlb	0	; select bank0
 10923  102D  118F               	bcf	15,3	;volatile
 10924                           
 10925                           ;./lcd.h: 100:    Lcd_Port(temp);
 10926  102E  0872               	movf	Lcd_Write_Char@temp,w
 10927  102F  319E  269B  3190   	fcall	_Lcd_Port
 10928                           
 10929                           ;./lcd.h: 101:    RD3 = 1;
 10930  1032  158F               	bsf	15,3	;volatile
 10931                           
 10932                           ;./lcd.h: 102:    _delay((unsigned long)((40)*(4000000/4000000.0)));
 10933  1033  300D               	movlw	13
 10934  1034                     u5967:	
 10935  1034  0B89               	decfsz	9,f
 10936  1035  2834               	goto	u5967
 10937  1036  0000               	nop
 10938                           
 10939                           ;./lcd.h: 103:    RD3 = 0;
 10940  1037  0020               	movlb	0	; select bank0
 10941  1038  118F               	bcf	15,3	;volatile
 10942  1039  0008               	return
 10943  103A                     __end_of_Lcd_Write_Char:	
 10944                           
 10945                           	psect	text45
 10946  1494                     __ptext45:	
 10947 ;; *************** function _Lcd_Set_Cursor *****************
 10948 ;; Defined at:
 10949 ;;		line 39 in file "./lcd.h"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;  a               1    wreg     unsigned char 
 10952 ;;  b               1    3[COMMON] unsigned char 
 10953 ;; Auto vars:     Size  Location     Type
 10954 ;;  a               1    6[COMMON] unsigned char 
 10955 ;;  temp            1    9[COMMON] unsigned char 
 10956 ;;  y               1    8[COMMON] unsigned char 
 10957 ;;  z               1    7[COMMON] unsigned char 
 10958 ;; Return value:  Size  Location     Type
 10959 ;;                  1    wreg      void 
 10960 ;; Registers used:
 10961 ;;		wreg, status,2, status,0, pclath, cstack
 10962 ;; Tracked objects:
 10963 ;;		On entry : 0/2
 10964 ;;		On exit  : 0/0
 10965 ;;		Unchanged: 0/0
 10966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 10967 ;;      Params:         1       0       0       0       0       0       0       0
 10968 ;;      Locals:         4       0       0       0       0       0       0       0
 10969 ;;      Temps:          2       0       0       0       0       0       0       0
 10970 ;;      Totals:         7       0       0       0       0       0       0       0
 10971 ;;Total ram usage:        7 bytes
 10972 ;; Hardware stack levels used:    1
 10973 ;; Hardware stack levels required when called:    2
 10974 ;; This function calls:
 10975 ;;		_Lcd_Cmd
 10976 ;; This function is called by:
 10977 ;;		_Imprimir_LCD
 10978 ;;		_main
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           
 10983                           ;psect for function _Lcd_Set_Cursor
 10984  1494                     _Lcd_Set_Cursor:	
 10985                           
 10986                           ;incstack = 0
 10987                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10988                           ;Lcd_Set_Cursor@a stored from wreg
 10989  1494  00F6               	movwf	Lcd_Set_Cursor@a
 10990                           
 10991                           ;./lcd.h: 40:  char temp,z,y;;./lcd.h: 41:  if(a == 1)
 10992  1495  0376               	decf	Lcd_Set_Cursor@a,w
 10993  1496  1D03               	btfss	3,2
 10994  1497  2CB4               	goto	l4269
 10995                           
 10996                           ;./lcd.h: 42:  {;./lcd.h: 43:    temp = 0x80 + b - 1;
 10997  1498  0873               	movf	Lcd_Set_Cursor@b,w
 10998  1499  3E7F               	addlw	127
 10999  149A  00F4               	movwf	??_Lcd_Set_Cursor
 11000  149B  0874               	movf	??_Lcd_Set_Cursor,w
 11001  149C  00F9               	movwf	Lcd_Set_Cursor@temp
 11002                           
 11003                           ;./lcd.h: 44:   z = temp>>4;
 11004  149D  0879               	movf	Lcd_Set_Cursor@temp,w
 11005  149E  00F4               	movwf	??_Lcd_Set_Cursor
 11006  149F  3004               	movlw	4
 11007  14A0                     u5635:	
 11008  14A0  36F4               	lsrf	??_Lcd_Set_Cursor,f
 11009  14A1  0B89               	decfsz	9,f
 11010  14A2  2CA0               	goto	u5635
 11011  14A3  0874               	movf	??_Lcd_Set_Cursor,w
 11012  14A4  00F5               	movwf	??_Lcd_Set_Cursor+1
 11013  14A5  0875               	movf	??_Lcd_Set_Cursor+1,w
 11014  14A6  00F7               	movwf	Lcd_Set_Cursor@z
 11015                           
 11016                           ;./lcd.h: 45:   y = temp & 0x0F;
 11017  14A7  0879               	movf	Lcd_Set_Cursor@temp,w
 11018  14A8  390F               	andlw	15
 11019  14A9  00F4               	movwf	??_Lcd_Set_Cursor
 11020  14AA  0874               	movf	??_Lcd_Set_Cursor,w
 11021  14AB  00F8               	movwf	Lcd_Set_Cursor@y
 11022                           
 11023                           ;./lcd.h: 46:   Lcd_Cmd(z);
 11024  14AC  0877               	movf	Lcd_Set_Cursor@z,w
 11025  14AD  319E  2673  3194   	fcall	_Lcd_Cmd
 11026                           
 11027                           ;./lcd.h: 47:   Lcd_Cmd(y);
 11028  14B0  0878               	movf	Lcd_Set_Cursor@y,w
 11029  14B1  319E  2673         	fcall	_Lcd_Cmd
 11030                           
 11031                           ;./lcd.h: 48:  }
 11032  14B3  0008               	return
 11033  14B4                     l4269:	
 11034  14B4  3002               	movlw	2
 11035  14B5  0676               	xorwf	Lcd_Set_Cursor@a,w
 11036  14B6  1D03               	btfss	3,2
 11037  14B7  2CD4               	goto	l4279
 11038                           
 11039                           ;./lcd.h: 50:  {;./lcd.h: 51:   temp = 0xC0 + b - 1;
 11040  14B8  0873               	movf	Lcd_Set_Cursor@b,w
 11041  14B9  3EBF               	addlw	191
 11042  14BA  00F4               	movwf	??_Lcd_Set_Cursor
 11043  14BB  0874               	movf	??_Lcd_Set_Cursor,w
 11044  14BC  00F9               	movwf	Lcd_Set_Cursor@temp
 11045                           
 11046                           ;./lcd.h: 52:   z = temp>>4;
 11047  14BD  0879               	movf	Lcd_Set_Cursor@temp,w
 11048  14BE  00F4               	movwf	??_Lcd_Set_Cursor
 11049  14BF  3004               	movlw	4
 11050  14C0                     u5655:	
 11051  14C0  36F4               	lsrf	??_Lcd_Set_Cursor,f
 11052  14C1  0B89               	decfsz	9,f
 11053  14C2  2CC0               	goto	u5655
 11054  14C3  0874               	movf	??_Lcd_Set_Cursor,w
 11055  14C4  00F5               	movwf	??_Lcd_Set_Cursor+1
 11056  14C5  0875               	movf	??_Lcd_Set_Cursor+1,w
 11057  14C6  00F7               	movwf	Lcd_Set_Cursor@z
 11058                           
 11059                           ;./lcd.h: 53:   y = temp & 0x0F;
 11060  14C7  0879               	movf	Lcd_Set_Cursor@temp,w
 11061  14C8  390F               	andlw	15
 11062  14C9  00F4               	movwf	??_Lcd_Set_Cursor
 11063  14CA  0874               	movf	??_Lcd_Set_Cursor,w
 11064  14CB  00F8               	movwf	Lcd_Set_Cursor@y
 11065                           
 11066                           ;./lcd.h: 54:   Lcd_Cmd(z);
 11067  14CC  0877               	movf	Lcd_Set_Cursor@z,w
 11068  14CD  319E  2673  3194   	fcall	_Lcd_Cmd
 11069                           
 11070                           ;./lcd.h: 55:   Lcd_Cmd(y);
 11071  14D0  0878               	movf	Lcd_Set_Cursor@y,w
 11072  14D1  319E  2673         	fcall	_Lcd_Cmd
 11073                           
 11074                           ;./lcd.h: 56:  }
 11075  14D3  0008               	return
 11076  14D4                     l4279:	
 11077  14D4  3003               	movlw	3
 11078  14D5  0676               	xorwf	Lcd_Set_Cursor@a,w
 11079  14D6  1D03               	btfss	3,2
 11080  14D7  2CF4               	goto	l4289
 11081                           
 11082                           ;./lcd.h: 58:  {;./lcd.h: 59:   temp = 0x90 + b - 1;
 11083  14D8  0873               	movf	Lcd_Set_Cursor@b,w
 11084  14D9  3E8F               	addlw	143
 11085  14DA  00F4               	movwf	??_Lcd_Set_Cursor
 11086  14DB  0874               	movf	??_Lcd_Set_Cursor,w
 11087  14DC  00F9               	movwf	Lcd_Set_Cursor@temp
 11088                           
 11089                           ;./lcd.h: 60:   z = temp>>4;
 11090  14DD  0879               	movf	Lcd_Set_Cursor@temp,w
 11091  14DE  00F4               	movwf	??_Lcd_Set_Cursor
 11092  14DF  3004               	movlw	4
 11093  14E0                     u5675:	
 11094  14E0  36F4               	lsrf	??_Lcd_Set_Cursor,f
 11095  14E1  0B89               	decfsz	9,f
 11096  14E2  2CE0               	goto	u5675
 11097  14E3  0874               	movf	??_Lcd_Set_Cursor,w
 11098  14E4  00F5               	movwf	??_Lcd_Set_Cursor+1
 11099  14E5  0875               	movf	??_Lcd_Set_Cursor+1,w
 11100  14E6  00F7               	movwf	Lcd_Set_Cursor@z
 11101                           
 11102                           ;./lcd.h: 61:   y = temp & 0x0F;
 11103  14E7  0879               	movf	Lcd_Set_Cursor@temp,w
 11104  14E8  390F               	andlw	15
 11105  14E9  00F4               	movwf	??_Lcd_Set_Cursor
 11106  14EA  0874               	movf	??_Lcd_Set_Cursor,w
 11107  14EB  00F8               	movwf	Lcd_Set_Cursor@y
 11108                           
 11109                           ;./lcd.h: 62:   Lcd_Cmd(z);
 11110  14EC  0877               	movf	Lcd_Set_Cursor@z,w
 11111  14ED  319E  2673  3194   	fcall	_Lcd_Cmd
 11112                           
 11113                           ;./lcd.h: 63:   Lcd_Cmd(y);
 11114  14F0  0878               	movf	Lcd_Set_Cursor@y,w
 11115  14F1  319E  2673         	fcall	_Lcd_Cmd
 11116                           
 11117                           ;./lcd.h: 64:  }
 11118  14F3  0008               	return
 11119  14F4                     l4289:	
 11120  14F4  3004               	movlw	4
 11121  14F5  0676               	xorwf	Lcd_Set_Cursor@a,w
 11122  14F6  1D03               	btfss	3,2
 11123  14F7  0008               	return
 11124                           
 11125                           ;./lcd.h: 66:  {;./lcd.h: 67:   temp = 0xD0 + b - 1;
 11126  14F8  0873               	movf	Lcd_Set_Cursor@b,w
 11127  14F9  3ECF               	addlw	207
 11128  14FA  00F4               	movwf	??_Lcd_Set_Cursor
 11129  14FB  0874               	movf	??_Lcd_Set_Cursor,w
 11130  14FC  00F9               	movwf	Lcd_Set_Cursor@temp
 11131                           
 11132                           ;./lcd.h: 68:   z = temp>>4;
 11133  14FD  0879               	movf	Lcd_Set_Cursor@temp,w
 11134  14FE  00F4               	movwf	??_Lcd_Set_Cursor
 11135  14FF  3004               	movlw	4
 11136  1500                     u5695:	
 11137  1500  36F4               	lsrf	??_Lcd_Set_Cursor,f
 11138  1501  0B89               	decfsz	9,f
 11139  1502  2D00               	goto	u5695
 11140  1503  0874               	movf	??_Lcd_Set_Cursor,w
 11141  1504  00F5               	movwf	??_Lcd_Set_Cursor+1
 11142  1505  0875               	movf	??_Lcd_Set_Cursor+1,w
 11143  1506  00F7               	movwf	Lcd_Set_Cursor@z
 11144                           
 11145                           ;./lcd.h: 69:   y = temp & 0x0F;
 11146  1507  0879               	movf	Lcd_Set_Cursor@temp,w
 11147  1508  390F               	andlw	15
 11148  1509  00F4               	movwf	??_Lcd_Set_Cursor
 11149  150A  0874               	movf	??_Lcd_Set_Cursor,w
 11150  150B  00F8               	movwf	Lcd_Set_Cursor@y
 11151                           
 11152                           ;./lcd.h: 70:   Lcd_Cmd(z);
 11153  150C  0877               	movf	Lcd_Set_Cursor@z,w
 11154  150D  319E  2673  3194   	fcall	_Lcd_Cmd
 11155                           
 11156                           ;./lcd.h: 71:   Lcd_Cmd(y);
 11157  1510  0878               	movf	Lcd_Set_Cursor@y,w
 11158  1511  319E  2673         	fcall	_Lcd_Cmd
 11159  1513  0008               	return
 11160  1514                     __end_of_Lcd_Set_Cursor:	
 11161                           
 11162                           	psect	text46
 11163  1E73                     __ptext46:	
 11164 ;; *************** function _Lcd_Cmd *****************
 11165 ;; Defined at:
 11166 ;;		line 28 in file "./lcd.h"
 11167 ;; Parameters:    Size  Location     Type
 11168 ;;  a               1    wreg     unsigned char 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;  a               1    2[COMMON] unsigned char 
 11171 ;; Return value:  Size  Location     Type
 11172 ;;                  1    wreg      void 
 11173 ;; Registers used:
 11174 ;;		wreg, status,2, status,0, pclath, cstack
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 1F/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11180 ;;      Params:         0       0       0       0       0       0       0       0
 11181 ;;      Locals:         1       0       0       0       0       0       0       0
 11182 ;;      Temps:          1       0       0       0       0       0       0       0
 11183 ;;      Totals:         2       0       0       0       0       0       0       0
 11184 ;;Total ram usage:        2 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:    1
 11187 ;; This function calls:
 11188 ;;		_Lcd_Port
 11189 ;; This function is called by:
 11190 ;;		_Lcd_Clear
 11191 ;;		_Lcd_Set_Cursor
 11192 ;;		_Lcd_Init
 11193 ;; This function uses a non-reentrant model
 11194 ;;
 11195                           
 11196                           
 11197                           ;psect for function _Lcd_Cmd
 11198  1E73                     _Lcd_Cmd:	
 11199                           
 11200                           ;incstack = 0
 11201                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 11202                           ;Lcd_Cmd@a stored from wreg
 11203  1E73  00F2               	movwf	Lcd_Cmd@a
 11204                           
 11205                           ;./lcd.h: 29:  RD2 = 0;
 11206  1E74  0020               	movlb	0	; select bank0
 11207  1E75  110F               	bcf	15,2	;volatile
 11208                           
 11209                           ;./lcd.h: 30:  Lcd_Port(a);
 11210  1E76  0872               	movf	Lcd_Cmd@a,w
 11211  1E77  319E  269B  319E   	fcall	_Lcd_Port
 11212                           
 11213                           ;./lcd.h: 31:  RD3 = 1;
 11214  1E7A  158F               	bsf	15,3	;volatile
 11215                           
 11216                           ;./lcd.h: 32:         _delay((unsigned long)((4)*(4000000/4000.0)));
 11217  1E7B  3006               	movlw	6
 11218  1E7C  00F1               	movwf	??_Lcd_Cmd
 11219  1E7D  3030               	movlw	48
 11220  1E7E                     u5977:	
 11221  1E7E  0B89               	decfsz	9,f
 11222  1E7F  2E7E               	goto	u5977
 11223  1E80  0BF1               	decfsz	??_Lcd_Cmd,f
 11224  1E81  2E7E               	goto	u5977
 11225  1E82  3200               	nop2
 11226                           
 11227                           ;./lcd.h: 33:         RD3 = 0;
 11228  1E83  0020               	movlb	0	; select bank0
 11229  1E84  118F               	bcf	15,3	;volatile
 11230  1E85  0008               	return
 11231  1E86                     __end_of_Lcd_Cmd:	
 11232                           
 11233                           	psect	text47
 11234  1E9B                     __ptext47:	
 11235 ;; *************** function _Lcd_Port *****************
 11236 ;; Defined at:
 11237 ;;		line 7 in file "./lcd.h"
 11238 ;; Parameters:    Size  Location     Type
 11239 ;;  a               1    wreg     unsigned char 
 11240 ;; Auto vars:     Size  Location     Type
 11241 ;;  a               1    0[COMMON] unsigned char 
 11242 ;; Return value:  Size  Location     Type
 11243 ;;                  1    wreg      void 
 11244 ;; Registers used:
 11245 ;;		wreg
 11246 ;; Tracked objects:
 11247 ;;		On entry : 1F/0
 11248 ;;		On exit  : 1F/0
 11249 ;;		Unchanged: 0/0
 11250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11251 ;;      Params:         0       0       0       0       0       0       0       0
 11252 ;;      Locals:         1       0       0       0       0       0       0       0
 11253 ;;      Temps:          0       0       0       0       0       0       0       0
 11254 ;;      Totals:         1       0       0       0       0       0       0       0
 11255 ;;Total ram usage:        1 bytes
 11256 ;; Hardware stack levels used:    1
 11257 ;; This function calls:
 11258 ;;		Nothing
 11259 ;; This function is called by:
 11260 ;;		_Lcd_Cmd
 11261 ;;		_Lcd_Init
 11262 ;;		_Lcd_Write_Char
 11263 ;; This function uses a non-reentrant model
 11264 ;;
 11265                           
 11266                           
 11267                           ;psect for function _Lcd_Port
 11268  1E9B                     _Lcd_Port:	
 11269                           
 11270                           ;incstack = 0
 11271                           ; Regs used in _Lcd_Port: [wreg]
 11272                           ;Lcd_Port@a stored from wreg
 11273  1E9B  00F0               	movwf	Lcd_Port@a
 11274                           
 11275                           ;./lcd.h: 8:  if(a & 1)
 11276  1E9C  1C70               	btfss	Lcd_Port@a,0
 11277  1E9D  2EA0               	goto	l178
 11278                           
 11279                           ;./lcd.h: 9:   RD4 = 1;
 11280  1E9E  160F               	bsf	15,4	;volatile
 11281  1E9F  2EA1               	goto	l4049
 11282  1EA0                     l178:	
 11283                           ;./lcd.h: 10:  else
 11284                           
 11285                           
 11286                           ;./lcd.h: 11:   RD4 = 0;
 11287  1EA0  120F               	bcf	15,4	;volatile
 11288  1EA1                     l4049:	
 11289                           
 11290                           ;./lcd.h: 13:  if(a & 2)
 11291  1EA1  1CF0               	btfss	Lcd_Port@a,1
 11292  1EA2  2EA5               	goto	l180
 11293                           
 11294                           ;./lcd.h: 14:   RD5 = 1;
 11295  1EA3  168F               	bsf	15,5	;volatile
 11296  1EA4  2EA6               	goto	l4053
 11297  1EA5                     l180:	
 11298                           ;./lcd.h: 15:  else
 11299                           
 11300                           
 11301                           ;./lcd.h: 16:   RD5 = 0;
 11302  1EA5  128F               	bcf	15,5	;volatile
 11303  1EA6                     l4053:	
 11304                           
 11305                           ;./lcd.h: 18:  if(a & 4)
 11306  1EA6  1D70               	btfss	Lcd_Port@a,2
 11307  1EA7  2EAA               	goto	l182
 11308                           
 11309                           ;./lcd.h: 19:   RD6 = 1;
 11310  1EA8  170F               	bsf	15,6	;volatile
 11311  1EA9  2EAB               	goto	l4057
 11312  1EAA                     l182:	
 11313                           ;./lcd.h: 20:  else
 11314                           
 11315                           
 11316                           ;./lcd.h: 21:   RD6 = 0;
 11317  1EAA  130F               	bcf	15,6	;volatile
 11318  1EAB                     l4057:	
 11319                           
 11320                           ;./lcd.h: 23:  if(a & 8)
 11321  1EAB  1DF0               	btfss	Lcd_Port@a,3
 11322  1EAC  2EAF               	goto	l184
 11323                           
 11324                           ;./lcd.h: 24:   RD7 = 1;
 11325  1EAD  178F               	bsf	15,7	;volatile
 11326  1EAE  0008               	return
 11327  1EAF                     l184:	
 11328                           ;./lcd.h: 25:  else
 11329                           
 11330                           
 11331                           ;./lcd.h: 26:   RD7 = 0;
 11332  1EAF  138F               	bcf	15,7	;volatile
 11333  1EB0  0008               	return
 11334  1EB1                     __end_of_Lcd_Port:	
 11335                           
 11336                           	psect	text48
 11337  1E86                     __ptext48:	
 11338 ;; *************** function _EnviarTexto_UART *****************
 11339 ;; Defined at:
 11340 ;;		line 107 in file "main.c"
 11341 ;; Parameters:    Size  Location     Type
 11342 ;;  st_pt           1    wreg     PTR unsigned char 
 11343 ;;		 -> Arreglo(9), 
 11344 ;; Auto vars:     Size  Location     Type
 11345 ;;  st_pt           1    2[COMMON] PTR unsigned char 
 11346 ;;		 -> Arreglo(9), 
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  1    wreg      void 
 11349 ;; Registers used:
 11350 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11351 ;; Tracked objects:
 11352 ;;		On entry : 1F/2
 11353 ;;		On exit  : 1E/2
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11356 ;;      Params:         0       0       0       0       0       0       0       0
 11357 ;;      Locals:         1       0       0       0       0       0       0       0
 11358 ;;      Temps:          1       0       0       0       0       0       0       0
 11359 ;;      Totals:         2       0       0       0       0       0       0       0
 11360 ;;Total ram usage:        2 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:    1
 11363 ;; This function calls:
 11364 ;;		_EnviarDato_UART
 11365 ;; This function is called by:
 11366 ;;		_main
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370                           
 11371                           ;psect for function _EnviarTexto_UART
 11372  1E86                     _EnviarTexto_UART:	
 11373                           
 11374                           ;incstack = 0
 11375                           ; Regs used in _EnviarTexto_UART: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11376                           ;EnviarTexto_UART@st_pt stored from wreg
 11377  1E86  00F2               	movwf	EnviarTexto_UART@st_pt
 11378  1E87                     l4407:	
 11379                           ;main.c: 107: void EnviarTexto_UART(char* st_pt);main.c: 108: {;main.c: 109:     while(*
      +                          st_pt)
 11380                           
 11381                           
 11382                           ;main.c: 109:     while(*st_pt)
 11383  1E87  0872               	movf	EnviarTexto_UART@st_pt,w
 11384  1E88  0086               	movwf	6
 11385  1E89  3001               	movlw	1	; select bank2/3
 11386  1E8A  0087               	movwf	7
 11387  1E8B  0801               	movf	1,w
 11388  1E8C  1903               	btfsc	3,2
 11389  1E8D  0008               	return
 11390                           
 11391                           ;main.c: 110:         EnviarDato_UART(*st_pt++);
 11392  1E8E  0872               	movf	EnviarTexto_UART@st_pt,w
 11393  1E8F  0086               	movwf	6
 11394  1E90  3001               	movlw	1	; select bank2/3
 11395  1E91  0087               	movwf	7
 11396  1E92  0801               	movf	1,w
 11397  1E93  319E  2625  319E   	fcall	_EnviarDato_UART
 11398  1E96  3001               	movlw	1
 11399  1E97  00F1               	movwf	??_EnviarTexto_UART
 11400  1E98  0871               	movf	??_EnviarTexto_UART,w
 11401  1E99  07F2               	addwf	EnviarTexto_UART@st_pt,f
 11402  1E9A  2E87               	goto	l4407
 11403  1E9B                     __end_of_EnviarTexto_UART:	
 11404                           
 11405                           	psect	text49
 11406  1E25                     __ptext49:	
 11407 ;; *************** function _EnviarDato_UART *****************
 11408 ;; Defined at:
 11409 ;;		line 102 in file "main.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;  DT              1    wreg     unsigned char 
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;  DT              1    0[COMMON] unsigned char 
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      void 
 11416 ;; Registers used:
 11417 ;;		wreg
 11418 ;; Tracked objects:
 11419 ;;		On entry : 1E/2
 11420 ;;		On exit  : 1F/3
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11423 ;;      Params:         0       0       0       0       0       0       0       0
 11424 ;;      Locals:         1       0       0       0       0       0       0       0
 11425 ;;      Temps:          0       0       0       0       0       0       0       0
 11426 ;;      Totals:         1       0       0       0       0       0       0       0
 11427 ;;Total ram usage:        1 bytes
 11428 ;; Hardware stack levels used:    1
 11429 ;; This function calls:
 11430 ;;		Nothing
 11431 ;; This function is called by:
 11432 ;;		_EnviarTexto_UART
 11433 ;; This function uses a non-reentrant model
 11434 ;;
 11435                           
 11436                           
 11437                           ;psect for function _EnviarDato_UART
 11438  1E25                     _EnviarDato_UART:	
 11439                           
 11440                           ;incstack = 0
 11441                           ; Regs used in _EnviarDato_UART: [wreg]
 11442                           ;EnviarDato_UART@DT stored from wreg
 11443  1E25  00F0               	movwf	EnviarDato_UART@DT
 11444  1E26                     l229:	
 11445                           ;main.c: 102: void EnviarDato_UART(char DT);main.c: 103: {;main.c: 104:     while(!TXIF)
      +                          ;
 11446                           
 11447  1E26  0020               	movlb	0	; select bank0
 11448  1E27  1E11               	btfss	17,4	;volatile
 11449  1E28  2E26               	goto	l229
 11450                           
 11451                           ;main.c: 105:     TXREG = DT;
 11452  1E29  0870               	movf	EnviarDato_UART@DT,w
 11453  1E2A  0023               	movlb	3	; select bank3
 11454  1E2B  009A               	movwf	26	;volatile
 11455  1E2C  0008               	return
 11456  1E2D                     __end_of_EnviarDato_UART:	
 11457                           
 11458                           	psect	text50
 11459  11FD                     __ptext50:	
 11460 ;; *************** function _ComprobarALarmaS2 *****************
 11461 ;; Defined at:
 11462 ;;		line 159 in file "main.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;		None
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;		None
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      void 
 11469 ;; Registers used:
 11470 ;;		wreg, status,2, status,0, pclath, cstack
 11471 ;; Tracked objects:
 11472 ;;		On entry : 1F/2
 11473 ;;		On exit  : 1F/2
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11476 ;;      Params:         0       0       0       0       0       0       0       0
 11477 ;;      Locals:         0       0       0       0       0       0       0       0
 11478 ;;      Temps:          0       0       0       0       0       0       0       0
 11479 ;;      Totals:         0       0       0       0       0       0       0       0
 11480 ;;Total ram usage:        0 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; Hardware stack levels required when called:    1
 11483 ;; This function calls:
 11484 ;;		___flge
 11485 ;; This function is called by:
 11486 ;;		_main
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           
 11491                           ;psect for function _ComprobarALarmaS2
 11492  11FD                     _ComprobarALarmaS2:	
 11493                           
 11494                           ;main.c: 160:         if(PT100<30){
 11495                           
 11496                           ;incstack = 0
 11497                           ; Regs used in _ComprobarALarmaS2: [wreg+status,2+status,0+pclath+cstack]
 11498  11FD  082B               	movf	(_PT100+3)^(0+256),w
 11499  11FE  0020               	movlb	0	; select bank0
 11500  11FF  00BD               	movwf	___flge@ff1+3
 11501  1200  0022               	movlb	2	; select bank2
 11502  1201  082A               	movf	(_PT100+2)^(0+256),w
 11503  1202  0020               	movlb	0	; select bank0
 11504  1203  00BC               	movwf	___flge@ff1+2
 11505  1204  0022               	movlb	2	; select bank2
 11506  1205  0829               	movf	(_PT100+1)^(0+256),w
 11507  1206  0020               	movlb	0	; select bank0
 11508  1207  00BB               	movwf	___flge@ff1+1
 11509  1208  0022               	movlb	2	; select bank2
 11510  1209  0828               	movf	_PT100^(0+256),w
 11511  120A  0020               	movlb	0	; select bank0
 11512  120B  00BA               	movwf	___flge@ff1
 11513  120C  3041               	movlw	65
 11514  120D  00C1               	movwf	___flge@ff2+3
 11515  120E  30F0               	movlw	240
 11516  120F  00C0               	movwf	___flge@ff2+2
 11517  1210  3000               	movlw	0
 11518  1211  00BF               	movwf	___flge@ff2+1
 11519  1212  3000               	movlw	0
 11520  1213  00BE               	movwf	___flge@ff2
 11521  1214  3194  2419  3191   	fcall	___flge
 11522  1217  1803               	btfsc	3,0
 11523  1218  2A21               	goto	l4471
 11524                           
 11525                           ;main.c: 161:             AlarmaS2[0]=1;AlarmaS2[1]=0;
 11526  1219  3001               	movlw	1
 11527  121A  0022               	movlb	2	; select bank2
 11528  121B  00B0               	movwf	_AlarmaS2^(0+256)
 11529  121C  3000               	movlw	0
 11530  121D  00B1               	movwf	(_AlarmaS2^(0+256)+1)
 11531  121E  01B2               	clrf	(_AlarmaS2^(0+256)+2)
 11532  121F  01B3               	clrf	((_AlarmaS2+1)^(0+256)+2)
 11533                           
 11534                           ;main.c: 162:         }
 11535  1220  0008               	return
 11536  1221                     l4471:	
 11537  1221  3042               	movlw	66
 11538  1222  00BD               	movwf	___flge@ff1+3
 11539  1223  3070               	movlw	112
 11540  1224  00BC               	movwf	___flge@ff1+2
 11541  1225  3000               	movlw	0
 11542  1226  00BB               	movwf	___flge@ff1+1
 11543  1227  3000               	movlw	0
 11544  1228  00BA               	movwf	___flge@ff1
 11545  1229  0022               	movlb	2	; select bank2
 11546  122A  082B               	movf	(_PT100+3)^(0+256),w
 11547  122B  0020               	movlb	0	; select bank0
 11548  122C  00C1               	movwf	___flge@ff2+3
 11549  122D  0022               	movlb	2	; select bank2
 11550  122E  082A               	movf	(_PT100+2)^(0+256),w
 11551  122F  0020               	movlb	0	; select bank0
 11552  1230  00C0               	movwf	___flge@ff2+2
 11553  1231  0022               	movlb	2	; select bank2
 11554  1232  0829               	movf	(_PT100+1)^(0+256),w
 11555  1233  0020               	movlb	0	; select bank0
 11556  1234  00BF               	movwf	___flge@ff2+1
 11557  1235  0022               	movlb	2	; select bank2
 11558  1236  0828               	movf	_PT100^(0+256),w
 11559  1237  0020               	movlb	0	; select bank0
 11560  1238  00BE               	movwf	___flge@ff2
 11561  1239  3194  2419  3191   	fcall	___flge
 11562  123C  1803               	btfsc	3,0
 11563  123D  2A46               	goto	l4477
 11564                           
 11565                           ;main.c: 164:             AlarmaS2[0]=0;AlarmaS2[1]=1;
 11566  123E  0022               	movlb	2	; select bank2
 11567  123F  01B0               	clrf	_AlarmaS2^(0+256)
 11568  1240  01B1               	clrf	(_AlarmaS2+1)^(0+256)
 11569  1241  3001               	movlw	1
 11570  1242  00B2               	movwf	(_AlarmaS2^(0+256)+2)
 11571  1243  3000               	movlw	0
 11572  1244  00B3               	movwf	(_AlarmaS2^(0+256)+3)
 11573                           
 11574                           ;main.c: 165:         }
 11575  1245  0008               	return
 11576  1246                     l4477:	
 11577                           
 11578                           ;main.c: 167:             AlarmaS2[0]=0;AlarmaS2[1]=0;
 11579  1246  0022               	movlb	2	; select bank2
 11580  1247  01B0               	clrf	_AlarmaS2^(0+256)
 11581  1248  01B1               	clrf	(_AlarmaS2+1)^(0+256)
 11582  1249  01B2               	clrf	(_AlarmaS2^(0+256)+2)
 11583  124A  01B3               	clrf	((_AlarmaS2+1)^(0+256)+2)
 11584  124B  0008               	return
 11585  124C                     __end_of_ComprobarALarmaS2:	
 11586                           
 11587                           	psect	text51
 11588  129B                     __ptext51:	
 11589 ;; *************** function _ComprobarALarmaS1 *****************
 11590 ;; Defined at:
 11591 ;;		line 148 in file "main.c"
 11592 ;; Parameters:    Size  Location     Type
 11593 ;;		None
 11594 ;; Auto vars:     Size  Location     Type
 11595 ;;		None
 11596 ;; Return value:  Size  Location     Type
 11597 ;;                  1    wreg      void 
 11598 ;; Registers used:
 11599 ;;		wreg, status,2, status,0, pclath, cstack
 11600 ;; Tracked objects:
 11601 ;;		On entry : 0/2
 11602 ;;		On exit  : 1F/2
 11603 ;;		Unchanged: 0/0
 11604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11605 ;;      Params:         0       0       0       0       0       0       0       0
 11606 ;;      Locals:         0       0       0       0       0       0       0       0
 11607 ;;      Temps:          0       0       0       0       0       0       0       0
 11608 ;;      Totals:         0       0       0       0       0       0       0       0
 11609 ;;Total ram usage:        0 bytes
 11610 ;; Hardware stack levels used:    1
 11611 ;; Hardware stack levels required when called:    1
 11612 ;; This function calls:
 11613 ;;		___flge
 11614 ;; This function is called by:
 11615 ;;		_main
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           
 11620                           ;psect for function _ComprobarALarmaS1
 11621  129B                     _ComprobarALarmaS1:	
 11622                           
 11623                           ;main.c: 149:         if(LM335<20){
 11624                           
 11625                           ;incstack = 0
 11626                           ; Regs used in _ComprobarALarmaS1: [wreg+status,2+status,0+pclath+cstack]
 11627  129B  0022               	movlb	2	; select bank2
 11628  129C  082F               	movf	(_LM335+3)^(0+256),w
 11629  129D  0020               	movlb	0	; select bank0
 11630  129E  00BD               	movwf	___flge@ff1+3
 11631  129F  0022               	movlb	2	; select bank2
 11632  12A0  082E               	movf	(_LM335+2)^(0+256),w
 11633  12A1  0020               	movlb	0	; select bank0
 11634  12A2  00BC               	movwf	___flge@ff1+2
 11635  12A3  0022               	movlb	2	; select bank2
 11636  12A4  082D               	movf	(_LM335+1)^(0+256),w
 11637  12A5  0020               	movlb	0	; select bank0
 11638  12A6  00BB               	movwf	___flge@ff1+1
 11639  12A7  0022               	movlb	2	; select bank2
 11640  12A8  082C               	movf	_LM335^(0+256),w
 11641  12A9  0020               	movlb	0	; select bank0
 11642  12AA  00BA               	movwf	___flge@ff1
 11643  12AB  3041               	movlw	65
 11644  12AC  00C1               	movwf	___flge@ff2+3
 11645  12AD  30A0               	movlw	160
 11646  12AE  00C0               	movwf	___flge@ff2+2
 11647  12AF  3000               	movlw	0
 11648  12B0  00BF               	movwf	___flge@ff2+1
 11649  12B1  3000               	movlw	0
 11650  12B2  00BE               	movwf	___flge@ff2
 11651  12B3  3194  2419  3192   	fcall	___flge
 11652  12B6  1803               	btfsc	3,0
 11653  12B7  2AC0               	goto	l4457
 11654                           
 11655                           ;main.c: 150:             AlarmaS1[0]=1;AlarmaS1[1]=0;
 11656  12B8  3001               	movlw	1
 11657  12B9  0022               	movlb	2	; select bank2
 11658  12BA  00B4               	movwf	_AlarmaS1^(0+256)
 11659  12BB  3000               	movlw	0
 11660  12BC  00B5               	movwf	(_AlarmaS1^(0+256)+1)
 11661  12BD  01B6               	clrf	(_AlarmaS1^(0+256)+2)
 11662  12BE  01B7               	clrf	((_AlarmaS1+1)^(0+256)+2)
 11663                           
 11664                           ;main.c: 151:         }
 11665  12BF  0008               	return
 11666  12C0                     l4457:	
 11667  12C0  3042               	movlw	66
 11668  12C1  00BD               	movwf	___flge@ff1+3
 11669  12C2  3048               	movlw	72
 11670  12C3  00BC               	movwf	___flge@ff1+2
 11671  12C4  3000               	movlw	0
 11672  12C5  00BB               	movwf	___flge@ff1+1
 11673  12C6  3000               	movlw	0
 11674  12C7  00BA               	movwf	___flge@ff1
 11675  12C8  0022               	movlb	2	; select bank2
 11676  12C9  082F               	movf	(_LM335+3)^(0+256),w
 11677  12CA  0020               	movlb	0	; select bank0
 11678  12CB  00C1               	movwf	___flge@ff2+3
 11679  12CC  0022               	movlb	2	; select bank2
 11680  12CD  082E               	movf	(_LM335+2)^(0+256),w
 11681  12CE  0020               	movlb	0	; select bank0
 11682  12CF  00C0               	movwf	___flge@ff2+2
 11683  12D0  0022               	movlb	2	; select bank2
 11684  12D1  082D               	movf	(_LM335+1)^(0+256),w
 11685  12D2  0020               	movlb	0	; select bank0
 11686  12D3  00BF               	movwf	___flge@ff2+1
 11687  12D4  0022               	movlb	2	; select bank2
 11688  12D5  082C               	movf	_LM335^(0+256),w
 11689  12D6  0020               	movlb	0	; select bank0
 11690  12D7  00BE               	movwf	___flge@ff2
 11691  12D8  3194  2419  3192   	fcall	___flge
 11692  12DB  1803               	btfsc	3,0
 11693  12DC  2AE5               	goto	l4463
 11694                           
 11695                           ;main.c: 153:             AlarmaS1[0]=0;AlarmaS1[1]=1;
 11696  12DD  0022               	movlb	2	; select bank2
 11697  12DE  01B4               	clrf	_AlarmaS1^(0+256)
 11698  12DF  01B5               	clrf	(_AlarmaS1+1)^(0+256)
 11699  12E0  3001               	movlw	1
 11700  12E1  00B6               	movwf	(_AlarmaS1^(0+256)+2)
 11701  12E2  3000               	movlw	0
 11702  12E3  00B7               	movwf	(_AlarmaS1^(0+256)+3)
 11703                           
 11704                           ;main.c: 154:         }
 11705  12E4  0008               	return
 11706  12E5                     l4463:	
 11707                           
 11708                           ;main.c: 156:             AlarmaS1[0]=0;AlarmaS1[1]=0;
 11709  12E5  0022               	movlb	2	; select bank2
 11710  12E6  01B4               	clrf	_AlarmaS1^(0+256)
 11711  12E7  01B5               	clrf	(_AlarmaS1+1)^(0+256)
 11712  12E8  01B6               	clrf	(_AlarmaS1^(0+256)+2)
 11713  12E9  01B7               	clrf	((_AlarmaS1+1)^(0+256)+2)
 11714  12EA  0008               	return
 11715  12EB                     __end_of_ComprobarALarmaS1:	
 11716                           
 11717                           	psect	text52
 11718  1419                     __ptext52:	
 11719 ;; *************** function ___flge *****************
 11720 ;; Defined at:
 11721 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11722 ;; Parameters:    Size  Location     Type
 11723 ;;  ff1             4   26[BANK0 ] void 
 11724 ;;  ff2             4   30[BANK0 ] void 
 11725 ;; Auto vars:     Size  Location     Type
 11726 ;;		None
 11727 ;; Return value:  Size  Location     Type
 11728 ;;		None               void
 11729 ;; Registers used:
 11730 ;;		wreg, status,2, status,0
 11731 ;; Tracked objects:
 11732 ;;		On entry : 1F/0
 11733 ;;		On exit  : 1F/0
 11734 ;;		Unchanged: 0/0
 11735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11736 ;;      Params:         0       8       0       0       0       0       0       0
 11737 ;;      Locals:         0       0       0       0       0       0       0       0
 11738 ;;      Temps:          0       4       0       0       0       0       0       0
 11739 ;;      Totals:         0      12       0       0       0       0       0       0
 11740 ;;Total ram usage:       12 bytes
 11741 ;; Hardware stack levels used:    1
 11742 ;; This function calls:
 11743 ;;		Nothing
 11744 ;; This function is called by:
 11745 ;;		_ComprobarALarmaS1
 11746 ;;		_ComprobarALarmaS2
 11747 ;;		_efgtoa
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           
 11752                           ;psect for function ___flge
 11753  1419                     ___flge:	
 11754                           
 11755                           ;incstack = 0
 11756                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11757  1419  3000               	movlw	0
 11758  141A  053A               	andwf	___flge@ff1,w
 11759  141B  00C2               	movwf	??___flge
 11760  141C  3000               	movlw	0
 11761  141D  053B               	andwf	___flge@ff1+1,w
 11762  141E  00C3               	movwf	??___flge+1
 11763  141F  3080               	movlw	128
 11764  1420  053C               	andwf	___flge@ff1+2,w
 11765  1421  00C4               	movwf	??___flge+2
 11766  1422  307F               	movlw	127
 11767  1423  053D               	andwf	___flge@ff1+3,w
 11768  1424  00C5               	movwf	??___flge+3
 11769  1425  0845               	movf	??___flge+3,w
 11770  1426  0444               	iorwf	??___flge+2,w
 11771  1427  0443               	iorwf	??___flge+1,w
 11772  1428  0442               	iorwf	??___flge,w
 11773  1429  1D03               	skipz
 11774  142A  2C33               	goto	l766
 11775  142B  3000               	movlw	0
 11776  142C  00BD               	movwf	___flge@ff1+3
 11777  142D  3000               	movlw	0
 11778  142E  00BC               	movwf	___flge@ff1+2
 11779  142F  3000               	movlw	0
 11780  1430  00BB               	movwf	___flge@ff1+1
 11781  1431  3000               	movlw	0
 11782  1432  00BA               	movwf	___flge@ff1
 11783  1433                     l766:	
 11784  1433  3000               	movlw	0
 11785  1434  053E               	andwf	___flge@ff2,w
 11786  1435  00C2               	movwf	??___flge
 11787  1436  3000               	movlw	0
 11788  1437  053F               	andwf	___flge@ff2+1,w
 11789  1438  00C3               	movwf	??___flge+1
 11790  1439  3080               	movlw	128
 11791  143A  0540               	andwf	___flge@ff2+2,w
 11792  143B  00C4               	movwf	??___flge+2
 11793  143C  307F               	movlw	127
 11794  143D  0541               	andwf	___flge@ff2+3,w
 11795  143E  00C5               	movwf	??___flge+3
 11796  143F  0845               	movf	??___flge+3,w
 11797  1440  0444               	iorwf	??___flge+2,w
 11798  1441  0443               	iorwf	??___flge+1,w
 11799  1442  0442               	iorwf	??___flge,w
 11800  1443  1D03               	skipz
 11801  1444  2C4D               	goto	l3327
 11802  1445  3000               	movlw	0
 11803  1446  00C1               	movwf	___flge@ff2+3
 11804  1447  3000               	movlw	0
 11805  1448  00C0               	movwf	___flge@ff2+2
 11806  1449  3000               	movlw	0
 11807  144A  00BF               	movwf	___flge@ff2+1
 11808  144B  3000               	movlw	0
 11809  144C  00BE               	movwf	___flge@ff2
 11810  144D                     l3327:	
 11811  144D  1FBD               	btfss	___flge@ff1+3,7
 11812  144E  2C67               	goto	l3331
 11813  144F  3000               	movlw	0
 11814  1450  00C2               	movwf	??___flge
 11815  1451  3000               	movlw	0
 11816  1452  00C3               	movwf	??___flge+1
 11817  1453  3000               	movlw	0
 11818  1454  00C4               	movwf	??___flge+2
 11819  1455  3080               	movlw	128
 11820  1456  00C5               	movwf	??___flge+3
 11821  1457  083A               	movf	___flge@ff1,w
 11822  1458  02C2               	subwf	??___flge,f
 11823  1459  083B               	movf	___flge@ff1+1,w
 11824  145A  3BC3               	subwfb	??___flge+1,f
 11825  145B  083C               	movf	___flge@ff1+2,w
 11826  145C  3BC4               	subwfb	??___flge+2,f
 11827  145D  083D               	movf	___flge@ff1+3,w
 11828  145E  3BC5               	subwfb	??___flge+3,f
 11829  145F  0845               	movf	??___flge+3,w
 11830  1460  00BD               	movwf	___flge@ff1+3
 11831  1461  0844               	movf	??___flge+2,w
 11832  1462  00BC               	movwf	___flge@ff1+2
 11833  1463  0843               	movf	??___flge+1,w
 11834  1464  00BB               	movwf	___flge@ff1+1
 11835  1465  0842               	movf	??___flge,w
 11836  1466  00BA               	movwf	___flge@ff1
 11837  1467                     l3331:	
 11838  1467  1FC1               	btfss	___flge@ff2+3,7
 11839  1468  2C81               	goto	l769
 11840  1469  3000               	movlw	0
 11841  146A  00C2               	movwf	??___flge
 11842  146B  3000               	movlw	0
 11843  146C  00C3               	movwf	??___flge+1
 11844  146D  3000               	movlw	0
 11845  146E  00C4               	movwf	??___flge+2
 11846  146F  3080               	movlw	128
 11847  1470  00C5               	movwf	??___flge+3
 11848  1471  083E               	movf	___flge@ff2,w
 11849  1472  02C2               	subwf	??___flge,f
 11850  1473  083F               	movf	___flge@ff2+1,w
 11851  1474  3BC3               	subwfb	??___flge+1,f
 11852  1475  0840               	movf	___flge@ff2+2,w
 11853  1476  3BC4               	subwfb	??___flge+2,f
 11854  1477  0841               	movf	___flge@ff2+3,w
 11855  1478  3BC5               	subwfb	??___flge+3,f
 11856  1479  0845               	movf	??___flge+3,w
 11857  147A  00C1               	movwf	___flge@ff2+3
 11858  147B  0844               	movf	??___flge+2,w
 11859  147C  00C0               	movwf	___flge@ff2+2
 11860  147D  0843               	movf	??___flge+1,w
 11861  147E  00BF               	movwf	___flge@ff2+1
 11862  147F  0842               	movf	??___flge,w
 11863  1480  00BE               	movwf	___flge@ff2
 11864  1481                     l769:	
 11865  1481  3080               	movlw	128
 11866  1482  06BD               	xorwf	___flge@ff1+3,f
 11867  1483  3080               	movlw	128
 11868  1484  06C1               	xorwf	___flge@ff2+3,f
 11869  1485  0841               	movf	___flge@ff2+3,w
 11870  1486  023D               	subwf	___flge@ff1+3,w
 11871  1487  1D03               	skipz
 11872  1488  0008               	return
 11873  1489  0840               	movf	___flge@ff2+2,w
 11874  148A  023C               	subwf	___flge@ff1+2,w
 11875  148B  1D03               	skipz
 11876  148C  0008               	return
 11877  148D  083F               	movf	___flge@ff2+1,w
 11878  148E  023B               	subwf	___flge@ff1+1,w
 11879  148F  1D03               	skipz
 11880  1490  0008               	return
 11881  1491  083E               	movf	___flge@ff2,w
 11882  1492  023A               	subwf	___flge@ff1,w
 11883  1493  0008               	return
 11884  1494                     __end_of___flge:	
 11885                           
 11886                           	psect	text53
 11887  1E66                     __ptext53:	
 11888 ;; *************** function _ADC_SelectChannel *****************
 11889 ;; Defined at:
 11890 ;;		line 85 in file "mcc_generated_files/adc.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;  channel         1    wreg     enum E2950
 11893 ;; Auto vars:     Size  Location     Type
 11894 ;;  channel         1    1[COMMON] enum E2950
 11895 ;; Return value:  Size  Location     Type
 11896 ;;                  1    wreg      void 
 11897 ;; Registers used:
 11898 ;;		wreg, status,2, status,0
 11899 ;; Tracked objects:
 11900 ;;		On entry : 0/2
 11901 ;;		On exit  : 1F/1
 11902 ;;		Unchanged: 0/0
 11903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11904 ;;      Params:         0       0       0       0       0       0       0       0
 11905 ;;      Locals:         1       0       0       0       0       0       0       0
 11906 ;;      Temps:          1       0       0       0       0       0       0       0
 11907 ;;      Totals:         2       0       0       0       0       0       0       0
 11908 ;;Total ram usage:        2 bytes
 11909 ;; Hardware stack levels used:    1
 11910 ;; This function calls:
 11911 ;;		Nothing
 11912 ;; This function is called by:
 11913 ;;		_main
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           
 11918                           ;psect for function _ADC_SelectChannel
 11919  1E66                     _ADC_SelectChannel:	
 11920                           
 11921                           ;incstack = 0
 11922                           ; Regs used in _ADC_SelectChannel: [wreg+status,2+status,0]
 11923                           ;ADC_SelectChannel@channel stored from wreg
 11924  1E66  00F1               	movwf	ADC_SelectChannel@channel
 11925                           
 11926                           ;mcc_generated_files/adc.c: 85: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 86: {;mcc_generated_files/adc.c: 88:     ADCON0bits.CHS = channel;
 11927  1E67  0871               	movf	ADC_SelectChannel@channel,w
 11928  1E68  00F0               	movwf	??_ADC_SelectChannel
 11929  1E69  0DF0               	rlf	??_ADC_SelectChannel,f
 11930  1E6A  0DF0               	rlf	??_ADC_SelectChannel,f
 11931  1E6B  0021               	movlb	1	; select bank1
 11932  1E6C  081D               	movf	29,w	;volatile
 11933  1E6D  0670               	xorwf	??_ADC_SelectChannel,w
 11934  1E6E  3983               	andlw	-125
 11935  1E6F  0670               	xorwf	??_ADC_SelectChannel,w
 11936  1E70  009D               	movwf	29	;volatile
 11937                           
 11938                           ;mcc_generated_files/adc.c: 90:     ADCON0bits.ADON = 1;
 11939  1E71  141D               	bsf	29,0	;volatile
 11940  1E72  0008               	return
 11941  1E73                     __end_of_ADC_SelectChannel:	
 11942                           
 11943                           	psect	text54
 11944  1EB1                     __ptext54:	
 11945 ;; *************** function _ADC_GetConversion *****************
 11946 ;; Defined at:
 11947 ;;		line 112 in file "mcc_generated_files/adc.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;  channel         1    wreg     enum E2950
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;  channel         1    3[COMMON] enum E2950
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  2    0[COMMON] unsigned short 
 11954 ;; Registers used:
 11955 ;;		wreg, status,2, status,0
 11956 ;; Tracked objects:
 11957 ;;		On entry : 1F/1
 11958 ;;		On exit  : 1F/1
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
 11961 ;;      Params:         2       0       0       0       0       0       0       0
 11962 ;;      Locals:         1       0       0       0       0       0       0       0
 11963 ;;      Temps:          1       0       0       0       0       0       0       0
 11964 ;;      Totals:         4       0       0       0       0       0       0       0
 11965 ;;Total ram usage:        4 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; This function calls:
 11968 ;;		Nothing
 11969 ;; This function is called by:
 11970 ;;		_main
 11971 ;; This function uses a non-reentrant model
 11972 ;;
 11973                           
 11974                           
 11975                           ;psect for function _ADC_GetConversion
 11976  1EB1                     _ADC_GetConversion:	
 11977                           
 11978                           ;incstack = 0
 11979                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
 11980                           ;ADC_GetConversion@channel stored from wreg
 11981  1EB1  00F3               	movwf	ADC_GetConversion@channel
 11982                           
 11983                           ;mcc_generated_files/adc.c: 112: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = ch
      +                          annel;
 11984  1EB2  0873               	movf	ADC_GetConversion@channel,w
 11985  1EB3  00F2               	movwf	??_ADC_GetConversion
 11986  1EB4  0DF2               	rlf	??_ADC_GetConversion,f
 11987  1EB5  0DF2               	rlf	??_ADC_GetConversion,f
 11988  1EB6  081D               	movf	29,w	;volatile
 11989  1EB7  0672               	xorwf	??_ADC_GetConversion,w
 11990  1EB8  3983               	andlw	-125
 11991  1EB9  0672               	xorwf	??_ADC_GetConversion,w
 11992  1EBA  009D               	movwf	29	;volatile
 11993                           
 11994                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
 11995  1EBB  141D               	bsf	29,0	;volatile
 11996                           
 11997                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(4000000/4000000.0)));
 11998  1EBC  3200               	nop2	;2 cycle nop
 11999  1EBD  3200               	nop2	;2 cycle nop
 12000  1EBE  0000               	nop
 12001                           
 12002                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
 12003  1EBF  0021               	movlb	1	; select bank1
 12004  1EC0  149D               	bsf	29,1	;volatile
 12005  1EC1                     l99:	
 12006                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
 12007                           
 12008                           
 12009                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
 12010  1EC1  189D               	btfsc	29,1	;volatile
 12011  1EC2  2EC1               	goto	l99
 12012                           
 12013                           ;mcc_generated_files/adc.c: 132:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 12014  1EC3  081C               	movf	28,w	;volatile
 12015  1EC4  00F1               	movwf	?_ADC_GetConversion+1
 12016  1EC5  081B               	movf	27,w	;volatile
 12017  1EC6  00F0               	movwf	?_ADC_GetConversion
 12018  1EC7  0008               	return
 12019  1EC8                     __end_of_ADC_GetConversion:	
 12020  007E                     btemp	set	126	;btemp
 12021  007E                     wtemp0	set	126


Data Sizes:
    Strings     72
    Constant    0
    Data        9
    BSS         120
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80     14      63
    BANK3            80      0      80
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK1[3]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 2
		 -> Lcd_float@s(BANK2[2]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 2
		 -> Lcd_float@s(BANK2[2]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    S1082_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 2
		 -> Lcd_float@s(BANK2[2]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 2
		 -> Lcd_float@s(BANK2[2]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK2[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK2[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    EnviarTexto_UART@st_pt	PTR unsigned char  size(1) Largest target is 9
		 -> Arreglo(BANK2[9]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_2(CODE[8]), Lcd_float@s(BANK2[2]), Lcd_Write_Int@buff(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _informacion->___awmod
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Imprimir_LCD->___xxtofl
    _Lcd_float->___xxtofl
    _vfpfcnvrt->_tolower
    _efgtoa->___awmod
    _efgtoa->_tolower
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___fladd->___xxtofl
    ___flmul->___xxtofl
    ___awmod->___fltol
    ___awdiv->___fltol
    _atoi->___wmul
    _atoi->_isdigit
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _EnviarTexto_UART->_EnviarDato_UART

Critical Paths under _main in BANK0

    _informacion->___awdiv
    _Lcd_float->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    _ComprobarALarmaS2->___flge
    _ComprobarALarmaS1->___flge
    ___flge->___flmul

Critical Paths under _main in BANK1

    _Imprimir_LCD->_Lcd_float
    _Lcd_float->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK2

    _main->_Imprimir_LCD
    _Imprimir_LCD->_Lcd_float
    _Lcd_float->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   48661
                                             12 BANK2      2     2      0
                  _ADC_GetConversion
                     _ADC_Initialize
                  _ADC_SelectChannel
                  _ComprobarALarmaS1
                  _ComprobarALarmaS2
                   _EnviarTexto_UART
                       _Imprimir_LCD
                    _Iniciar_Puertos
                       _Iniciar_UART
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                  _SYSTEM_Initialize
                            ___fladd
                            ___flmul
                           ___xxtofl
                        _informacion
 ---------------------------------------------------------------------------------
 (1) _informacion                                          1     1      0    2193
                                              8 BANK0      1     1      0
                            ___awdiv
                            ___awmod
                            ___fltol
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     198
                                              3 COMMON     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Iniciar_UART                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Iniciar_Puertos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Imprimir_LCD                                         1     1      0   34095
                                             11 BANK2      1     1      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _Lcd_float
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     778
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_float                                            6     2      4   30892
                                             76 BANK1      4     0      4
                                              9 BANK2      2     2      0
                   _Lcd_Write_String
                           ___xxtofl (ARG)
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6   29273
                                             79 BANK0      1     1      0
                                             70 BANK1      6     0      6
                                              0 BANK2      9     9      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     5      3   28959
                                             71 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           45    43      2   28630
                                             63 BANK0      8     6      2
                                             57 BANK1     13    13      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                              9     5      4     410
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              66    61      5   23484
                                             54 BANK0      9     4      5
                                              0 BANK1     57    57      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMMON     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               8     6      2     641
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (7) _pad                                                  9     6      3    2907
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                8     7      1    1149
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     834
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     685
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    2941
                                             46 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    2592
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3330
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     752
                                             11 COMMON     3     3      0
                                              0 BANK0      4     0      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                             11 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1085
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     5     3      2    1091
                                              5 COMMON     5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1334
                                              3 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EnviarTexto_UART                                     2     2      0     100
                                              1 COMMON     2     2      0
                    _EnviarDato_UART
 ---------------------------------------------------------------------------------
 (2) _EnviarDato_UART                                      1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ComprobarALarmaS2                                    0     0      0    1398
                             ___flge
 ---------------------------------------------------------------------------------
 (1) _ComprobarALarmaS1                                    0     0      0    1398
                             ___flge
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1398
                                             26 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    4     2      2      22
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_Initialize
   _ADC_SelectChannel
   _ComprobarALarmaS1
     ___flge
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
   _ComprobarALarmaS2
     ___flge
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
   _EnviarTexto_UART
     _EnviarDato_UART
   _Imprimir_LCD
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _Lcd_float
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___xxtofl (ARG)
       _sprintf (ARG)
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _efgtoa
               ___awdiv
                 ___fltol (ARG)
               ___awmod
                 ___fltol (ARG)
               ___fladd
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___flmul
                 __Umul8_16
                 ___xxtofl (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     __Umul8_16
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___flmul (ARG)
                   __Umul8_16
                   ___xxtofl (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
     ___xxtofl
   _Iniciar_Puertos
   _Iniciar_UART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___xxtofl
   _informacion
     ___awdiv
       ___fltol (ARG)
     ___awmod
       ___fltol (ARG)
     ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0     13D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     50      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     50      50       8      100.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      E      3F      10       78.8%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      50      12      100.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0     13D      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Dec 16 20:12:44 2019

              _ComprobarALarmaS1 129B                _ComprobarALarmaS2 11FD                     ___fldiv@aexp 002C  
                   ___fldiv@bexp 002B                     ___fldiv@sign 0024                      __CFG_CP$OFF 0000  
               _EnviarTexto_UART 1E86                               l99 1EC1                     ___awdiv@sign 0025  
             ?_ComprobarALarmaS1 0070               ?_ComprobarALarmaS2 0070              ___wmul@multiplicand 0072  
                Lcd_float@valorf 00EC              __Umul8_16@word_mpld 0076                      __CFG_LVP$ON 0000  
                            l180 1EA5                              l229 1E26                              l182 1EAA  
                            l184 1EAF                              l178 1EA0                              l506 03F3  
                            l460 1284                              l524 059F                              l457 1264  
                            l910 0B20                              l495 03B5                              l496 03A2  
                            l931 0B97                              l923 0B7F                              l588 1F30  
                            l757 1135                              l766 1433                              l758 114F  
                            l769 1481                              l945 0064                              l893 0A9D  
                            l789 1385                              l966 016B                              l967 0183  
                            l895 0A80                              l969 0190                              l889 0A0A  
                            l997 0DAA                              _RD2 007A                              _RD3 007B  
                            _RD4 007C                              _RD5 007D                              _RD6 007E  
                            _RD7 007F                     __CFG_CPD$OFF 0000                              _pad 124C  
                   ___awmod@sign 007D              ??_ComprobarALarmaS1 007E              ??_ComprobarALarmaS2 007E  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_IESO$ON 0000  
                   ___flmul@aexp 002E                     ___flmul@bexp 0033          __end_of_EnviarDato_UART 1E2D  
                   ___flmul@sign 002D                     ___flmul@temp 0038                     ___flmul@prod 0034  
                  ?_Iniciar_UART 0070                     ___fltol@exp1 007A                             l1023 1531  
                           l1036 157B                             l1037 1585                             l1029 1567  
                           l1090 1711                             l1067 1610                             l1181 1F8C  
                           l3023 0ABD                             l3015 0AAB                             l3007 0A98  
                           l4001 1614                             l3025 0ABF                             l3033 0ACE  
                           l4011 1643                             l3051 0B32                             l3043 0B18  
                           l3203 16F4                             l3123 125A                             l3301 110E  
                           l3109 1F86                             l3133 1266                             l4101 0EBC  
                           l3215 1F2A                             l3151 13EC                             l3127 1262  
                           l3241 1300                             l3305 1116                             l3073 0B51  
                           l3065 0B46                             l3161 1414                             l3137 1290  
                           l4041 11EF                             l4033 11E9                             l4113 0F0A  
                           l3331 1467                             l4203 1F10                             l3251 1308  
                           l3235 12F5                             l3411 0040                             l3059 0B3F  
                           l3067 0B48                             l3155 13F1                             l4035 11C5  
                           l4123 0F6B                             l4131 0FA6                             l4053 1EA6  
                           l3253 1314                             l3501 012A                             l3405 0035  
                           l3317 1161                             l3077 0B53                             l4141 0FD0  
                           l3327 144D                             l3263 132F                             l3511 0153  
                           l3095 0B8F                             l3351 1345                             l3167 1FA4  
                           l4057 1EAB                             l4049 1EA1                             l3425 0059  
                           l3409 0038                             l4137 0FCA                             l4081 0E1C  
                           l4313 1529                             l3267 1337                             l3259 1326  
                           l3291 10ED                             l3283 10E7                             l3099 0B93  
                           l3371 1373                             l3355 134E                             l4083 0E2C  
                           l4091 0E5F                             l4147 0FDB                             l4323 1544  
                           l3293 10F9                             l3525 018C                             l3445 008F  
                           l3429 005C                             l3381 1392                             l3373 1381  
                           l3197 16CD                             l2901 1EFB                             l3701 01EE  
                           l4085 0E35                             l4181 106E                             l4333 1579  
                           l4325 1554                             l4407 1E87                             l3279 10E0  
                           l3471 00EF                             l3439 0083                             l3199 16DE  
                           l2903 1F07                             l4183 108A                             l4335 156C  
                           l4319 1540                             l4511 09B0                             l3297 1105  
                           l3465 00D6                             l3473 00B8                             l3545 0BB8  
                           l3705 01F5                             l3713 0208                             l3491 0111  
                           l3475 00F4                             l3635 0D40                             l3627 0D12  
                           l3563 0BDB                             l3547 0BBA                             l2931 09E2  
                           l3803 0400                             l3723 023A                             l3731 025D  
                           l4347 15A0                             l4269 14B4                             l3653 0D80  
                           l3629 0D29                             l3565 0BDD                             l3549 0BC2  
                           l2925 09D7                             l3901 06D8                             l3813 0414  
                           l3805 0404                             l3741 028F                             l4509 09A3  
                           ?_pad 0024                             l4463 12E5                             l4471 1221  
                           l4279 14D4                             l3639 0D42                             l3575 0BF3  
                           l3567 0BE5                             l4457 12C0                             l4289 14F4  
                           l3497 0128                             l3489 00FA                             l3649 0D6B  
                           l2953 0A02                             l2929 09DA                             l3833 053C  
                           l3817 041C                             l3761 0301                             l4481 08D3  
                           l3659 0D97                             l2883 1192                             l3827 042E  
                           l3763 0339                             l4571 09A8                             l4477 1246  
                           l4573 15EA                             l2949 09FF                             l3925 0713  
                           l3909 06F1                             l3861 05F7                             l3829 04EA  
                           l3781 03B8                             l3757 02D3                             l3749 02B2  
                           l3693 01DC                             l4485 08E1                             l3679 1F57  
                           l2959 0A14                             l2879 116C                             l2895 1FDE  
                           l3927 071B                             l3847 059D                             l3839 055B  
                           l3767 035A                             l3937 0717                             l3881 0616  
                           l3849 05A6                             l3769 037F                             l4489 08F1  
                           l3963 07AD                             l3947 0773                             l3939 075B  
                           l3971 07CC                             l3883 0634                             l3795 03ED  
                           l3787 03C0                             l3779 03AF                             l2997 0A88  
                           l2989 0A50                             l2999 0A8A                             l3993 15D9  
                           l3889 064A                             l3897 06BA                             l3995 15DE  
                           l3987 15C9                             l3979 15AD                             l3997 15F2  
                           STR_1 1820                             STR_2 1800                             STR_3 1839  
                           STR_4 183D                             STR_5 1808                             STR_6 180E  
                           STR_7 1814                             STR_8 181A                             STR_9 1841  
                           u3020 1EEE                             _LATA 010C                             u3030 1EEF  
                           _LATB 010D                             _LATC 010E                             _LATD 010F  
                           _LATE 0110                             u3140 0A6F                             u3150 0A70  
                           u3135 0A64                             u3305 0B33                             u4045 115D  
                           u3405 0B6A                             u4125 1357                             u3263 0AE0  
                           u3255 0AC3                             u3600 140C                             u4305 00C0  
                           u3185 0A8E                             u3610 140D                             u4315 00C7  
                           u4155 1374                             u3525 1270                             u3630 1FC9  
                           u4335 00D0                             u5055 043C                             u5320 1628  
                           u3640 1FCA                             u4345 00E4                             u4185 1389  
                           u3545 13C2                             u5330 1629                             u3715 16BC  
                           u5260 079D                             u3805 1F31                             u3485 1F8D  
                           u4605 0CE5                             u3565 13DB                             u5245 0766  
                           u5270 079E                             u3815 1F36                             u4375 00FD  
                           u4615 0D01                             u3735 16E7                             u5175 06C8  
                           u3905 1327                             u4465 0141                             u4625 0D15  
                           u3665 1669                             u5185 06D6                             u3770 1ED7  
                           u3690 1697                             u4475 015C                             u4395 0106  
                           u4715 0D59                             u3595 13FE                             u3755 16FD  
                           u3675 1684                             u3780 1ED8                             u4820 0228  
                           u4485 0175                             u4725 0D74                             u4645 0D1E  
                           u4830 0229                             u5550 0F4A                             u4735 0D8A  
                           u3695 1693                             u5560 0F4B                             u5480 0E51  
                           u3865 130B                             u4585 0C66                             u5490 0E52  
                           u5635 14A0                             u4595 0C93                             u2995 1190  
                           u4860 027D                             u3885 1315                             u3965 10F0  
                           u4870 027E                             u5655 14C0                             u3895 131F  
                           u3985 10FF                             u4945 03AD                             u5825 158D  
                           u5745 154D                             u5675 14E0                             u5595 1020  
                           u3995 1106                             u5765 1561                             u5917 099F  
                           u5695 1500                             u4975 03CF                             u5927 109A  
                           u4985 03E9                             u5785 1573                             u5937 10A6  
                           u5947 10B2                             u5957 1029                             u5967 1034  
                           u5977 1E7E                             _TXIF 008C                             _WPUB 020D  
                           _WPUE 0210                     __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000  
              ?_Lcd_Write_String 0075                             _dbuf 01A0                             _atoi 15A9  
                           _main 08C1                             _prec 013C                             _nout 0138  
                           pad@i 0027                             pad@p 0025                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             pad@w 0029  
                           btemp 007E                    __CFG_BOREN$ON 0000                    ___fpclassifyf 13A1  
                           start 0002               ??_Lcd_Write_String 0077                  ___fldiv@new_exp 0025  
      __end_of_ComprobarALarmaS1 12EB        __end_of_ComprobarALarmaS2 124C                  __end_of_Lcd_Cmd 1E86  
                   _tolower$1154 007C                    __CFG_MCLRE$ON 0000                  _Iniciar_Puertos 1003  
                          ??_pad 007C   __size_of_OSCILLATOR_Initialize 0007    __end_of_OSCILLATOR_Initialize 1E25  
                  ___fltol@sign1 0079                            ?_atoi 0076                  __end_of___fladd 0B9F  
                          ?_main 0070                  __end_of___fldiv 0195                  __end_of___awdiv 133C  
                __end_of___flneg 1E46                            STR_10 1835                            STR_11 1825  
                          STR_12 182D                            STR_21 1845                            STR_15 1829  
                          STR_16 1831                            _BRG16 0CFB                    __CFG_WDTE$OFF 0000  
                          STR_19 1845                  __end_of___awmod 111B                  __end_of___flmul 0DB7  
                __end_of___flsub 1F7C                  __end_of___fltol 13A1                     ?_informacion 0070  
                          _LM335 012C                  ___awdiv@divisor 0020                            _PT100 0128  
                ___awdiv@counter 0024                     vfpfcnvrt@fmt 005F                            _SPBRG 019B  
                          _PORTC 000E                            _PORTD 000F          __size_of_Lcd_Set_Cursor 0080  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _TRISD 008F                            _TRISE 0090                            _TXREG 019A  
                 ??_Iniciar_UART 0070                            _flags 013E                   _WDT_Initialize 1E0E  
                          _fputc 1163                            _fputs 1FDB                  __end_of_isdigit 1EDF  
                          atoi@n 0027                            pad@fp 002B                            atoi@s 0076  
                          _width 013A                            _putch 1002                  __end_of_isspace 1F5F  
                __end_of_isupper 1EF6                            status 0003                            wtemp0 007E  
                __end_of_sprintf 1066                   ?___fpclassifyf 0070                  __end_of_tolower 1FDB  
                __end_of_strncmp 11FD                 __end_of_Lcd_Init 10D6                 __end_of_Lcd_Port 1EB1  
                __initialization 07E2                     __end_of_atoi 1648                     __end_of_main 09BE  
                         ??_atoi 0078                           ??_main 0154               __size_of_Lcd_Clear 0008  
                  ?_Imprimir_LCD 0070                   __CFG_PLLEN$OFF 0000           __end_of_WDT_Initialize 1E12  
             __size_of_Lcd_float 0017                 ?_EnviarDato_UART 0070                           _ADCON0 009D  
                         _ADCON1 009E                           ?_fputc 0070                           ?_fputs 0078  
                         _ADRESH 009C                           _ADRESL 009B                 ___awdiv@dividend 0022  
                         _APFCON 011D                           _ANSELA 018C                           ?_putch 0070  
                         _ANSELB 018D                           _ANSELD 018F                           _ANSELE 0190  
                         _BORCON 0116                           _OSCCON 0099                        ??_Lcd_Cmd 0071  
                         _WDTCON 0097          __size_of_Lcd_Write_Char 002A                 __end_of___xxtofl 15A9  
        __end_of_Iniciar_Puertos 1010                   __CFG_PWRTE$OFF 0000       __size_of_ComprobarALarmaS1 0050  
     __size_of_ComprobarALarmaS2 004F                     vfprintf@cfmt 006D                           ___flge 1419  
                         ___fleq 111B                        ??___fladd 0042                           ___wmul 1F28  
                      ??___fldiv 0078                        ??___awdiv 007B                        ??___flneg 0074  
                 __CFG_STVREN$ON 0000                        ??___awmod 007B                        ??___flmul 0028  
                      ??___flsub 007E                        ??___fltol 0074                           _efgtoa 0195  
                         _floorf 1648                 ___awdiv@quotient 0026                  ___awmod@divisor 0020  
                ___awmod@counter 007C                           pad@buf 0024                   ??_Imprimir_LCD 0153  
                         _strcpy 1F9B                           _strlen 1EF6                           fputc@c 0070  
                         fputs@c 0020                           fputs@i 0021                           fputs@s 0023  
                      ??_isdigit 0072               __size_of__Umul8_16 001F                  ___fpclassifyf@e 0020  
                ___fpclassifyf@u 0022                  ___fpclassifyf@x 0070                        ??_isspace 0072  
                ?_WDT_Initialize 0070                        ??_isupper 0072         ADC_GetConversion@channel 0073  
                         putch@c 0070                 __end_of_vfprintf 1093                        ??_sprintf 006F  
                      ??_tolower 0078                        ??_strncmp 0074                  Lcd_Set_Cursor@a 0076  
                Lcd_Set_Cursor@b 0073                  Lcd_Set_Cursor@y 0078                  Lcd_Set_Cursor@z 0077  
       __end_of_EnviarTexto_UART 1E9B                       ___flge@ff1 003A                       ___flge@ff2 003E  
                ??___fpclassifyf 0074                     ___xxtofl@arg 007A                     ___xxtofl@exp 0079  
              _SYSTEM_Initialize 1E5A                     ___xxtofl@val 0070                       ___fleq@ff1 0070  
                     ___fleq@ff2 0074          __end_of__initialization 07FD                       ___flneg@f1 0070  
             ?_SYSTEM_Initialize 0070                __end_of_Lcd_Clear 1E35                       ___fltol@f1 0070  
              __end_of_Lcd_float 001B                   __pcstackCOMMON 0070             __end_of_Iniciar_UART 1E5A  
                   __pidataBANK2 1E46              ??_SYSTEM_Initialize 0070                    __end_of_fputc 11AF  
                  __end_of_fputs 2000                    __end_of_putch 1003                   _Lcd_Set_Cursor 1494  
                 _OPTION_REGbits 0095             __size_of_informacion 009F                        ?_Lcd_Init 0070  
                      ?_Lcd_Port 0070                          ??_fputc 0073        __end_of_SYSTEM_Initialize 1E66  
                        ??_fputs 0079                          ??_putch 0070                       __pbssBANK2 0120  
                     __pbssBANK3 01A0                  __CFG_VCAPEN$OFF 0000                 ?_Iniciar_Puertos 0070  
              __end_of__Umul8_16 1F9B                       _efgtoa$700 00A6                       _efgtoa$710 00AC  
                     _efgtoa$711 00AE                       _efgtoa$705 00A8                       _efgtoa$709 00AA  
                     _efgtoa$699 00A4                       __pmaintext 08C1                          ?___flge 003A  
                        ?___fleq 0070                          ?___wmul 0070                          ?_efgtoa 0056  
                        ?_floorf 002D        __size_of_Lcd_Write_String 001A           __end_of_Lcd_Set_Cursor 1514  
        __size_of_ADC_Initialize 0008                          ?_strcpy 0070                          ?_strlen 0070  
                      ?___xxtofl 0070               __size_of_vfpfcnvrt 0249                          _OSCTUNE 0098  
                     ??_Lcd_Init 0073                       ??_Lcd_Port 0070                   _Lcd_Write_Char 1010  
                        _Lcd_Cmd 1E73                          _Arreglo 0156             __end_of_Imprimir_LCD 1800  
           _ADC_InterruptHandler 0142                  __size_of___flge 007B                  __size_of___fleq 0048  
                        ___fladd 09BE                          ___fldiv 001B                          ___awdiv 12EB  
                        ___flneg 1E3D                          ___awmod 10D6                          ___flmul 0B9F  
                        ___flsub 1F5F                          ___fltol 133C                  __size_of___wmul 001B  
                      ?_vfprintf 0067                  __size_of_efgtoa 064D                  __size_of_floorf 00D2  
                ?_Lcd_Set_Cursor 0073                          __ptext1 0822                          __ptext2 1E5A  
                        __ptext3 1E0E                          __ptext4 0800                          __ptext5 1E1E  
                        __ptext6 1E35                          __ptext7 1093                          __ptext8 1E2D  
                        __ptext9 1E4F                  __size_of_strcpy 001F                  __size_of_strlen 0018  
          _OSCILLATOR_Initialize 1E1E                     __size_of_pad 004F                          _isdigit 1EC8  
                     ??___xxtofl 0074                 ___awmod@dividend 0022         ??_PIN_MANAGER_Initialize 0070  
                        _isspace 1F43                          _isupper 1EDF                          efgtoa@c 005A  
                        efgtoa@d 00B8                          efgtoa@e 00D1                          efgtoa@f 0056  
                        efgtoa@g 00CD                          efgtoa@h 00C3                          efgtoa@i 00CB  
                        efgtoa@l 00C7                          efgtoa@m 00B4                          efgtoa@n 00D3  
                        efgtoa@p 00BD                          efgtoa@t 00B0                          efgtoa@u 00D5  
                        efgtoa@w 00C0                          atoi@neg 0020       __size_of_SYSTEM_Initialize 000C  
                        _sprintf 103A                          _tolower 1FBA                          clrloop0 1E13  
         __end_of_Lcd_Write_Char 103A                          _strncmp 11AF             end_of_initialization 07FD  
                        floorf@e 003B                          floorf@m 0037                          floorf@u 003D  
                        floorf@x 002D                          fputc@fp 0072                          init_ram 1E18  
                        fputs@fp 0078                          initloop 1E19            __size_of_Iniciar_UART 000B  
              __end_of_vfpfcnvrt 1000                       efgtoa@mode 00C2                       efgtoa@sign 00BA  
                      _RCSTAbits 019D                        Lcd_Port@a 0070                       ??_vfprintf 006A  
                        strcpy@d 0076                          strlen@a 0073                          strcpy@s 0074  
                        strlen@s 0074                 ??_WDT_Initialize 0070                        _PORTCbits 000E  
                    ___fladd@grs 004D                 __CFG_FOSC$INTOSC 0000                    ___xxtofl@sign 0078  
                      _TRISCbits 008E                      ___fldiv@grs 0027                      ___fldiv@rem 0020  
                   _Iniciar_UART 1E4F                  ?_Lcd_Write_Char 0070                Lcd_Write_String@a 0075  
              Lcd_Write_String@i 0078                ?_EnviarTexto_UART 0070                      ___flmul@grs 002F  
       __size_of_EnviarDato_UART 0008                        _TXSTAbits 019E               ??_EnviarTexto_UART 0071  
                      _Lcd_Clear 1E2D                   __end_of___flge 1494                   __end_of___fleq 1163  
                    vfpfcnvrt@ap 0060                      vfpfcnvrt@ct 00E1                      vfpfcnvrt@fp 00E5  
                 __end_of___wmul 1F43                        _Lcd_float 0004                 _Lcd_Write_String 1F0E  
                 __end_of_efgtoa 07E2                   _ADC_Initialize 1E35                   __end_of_floorf 171A  
         ?_OSCILLATOR_Initialize 0070                       floorf@F524 0120                   __end_of_strcpy 1FBA  
                 __end_of_strlen 1F0E              start_initialization 07E2  __size_of_PIN_MANAGER_Initialize 0022  
                    __end_of_pad 129B            __size_of_Imprimir_LCD 00E6                __size_of_Lcd_Init 0043  
              __size_of_Lcd_Port 0016            __end_of___fpclassifyf 1419                      vfprintf@fmt 0067  
                     ?_Lcd_Clear 0070                         ??___flge 0042                         ??___fleq 0078  
                       ??___wmul 0074                         ??_efgtoa 005B           __end_of_ADC_Initialize 1E3D  
                      __Umul8_16 1F7C                      __pdataBANK2 0156                         ??_floorf 0031  
                     ?_Lcd_float 00EC                  Lcd_Write_Char@a 0074                  Lcd_Write_Char@y 0073  
                  ??_informacion 0028                         ??_strcpy 0072                         ??_strlen 0072  
                      ___fladd@a 003E                        ___fladd@b 003A                     _estadoSwitch 0140  
                   _Imprimir_LCD 171A                        ___fldiv@a 0070                        ___fldiv@b 0074  
                      ___flmul@a 0024                        ___flmul@b 0020                        ___flsub@a 004E  
                      ___flsub@b 0052                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00A0                    __pcstackBANK2 0148                __size_of___xxtofl 0095  
              EnviarDato_UART@DT 0070                         ?_Lcd_Cmd 0070                        _atoi$1040 0024  
                      _atoi$1038 0022                        _atoi$1039 0026           _PIN_MANAGER_Initialize 0800  
               ??_Lcd_Set_Cursor 0074                _ADC_SelectChannel 1E66                ??_EnviarDato_UART 0070  
                       ?___fladd 003A                         ?___fldiv 0070                         ?___awdiv 0020  
                       ?___flneg 0070                         ?___awmod 0020                         ?___flmul 0020  
                       ?___flsub 004E                         ?___fltol 0070                       ?__Umul8_16 0070  
                ?_ADC_Initialize 0070               ?_ADC_SelectChannel 0070         __size_of_Iniciar_Puertos 000D  
              __size_of_vfprintf 002D                         ?_isdigit 0070              ??_ADC_SelectChannel 0070  
                       ?_isspace 0070                         ?_isupper 0070              __end_of_informacion 08C1  
                       ?_sprintf 00E6                         ?_tolower 0076                   __size_of_fputc 004C  
                 __size_of_fputs 0025                         ?_strncmp 0070                   __size_of_putch 0001  
                 ___wmul@product 0074                        clear_ram0 1E12        __end_of_ADC_SelectChannel 1E73  
                       Lcd_Cmd@a 0072                      ??_Lcd_Clear 0073                      ??_Lcd_float 007E  
                      _vfpfcnvrt 0DB7                       _ADCON0bits 009D                ___wmul@multiplier 0070  
       ADC_SelectChannel@channel 0071                         _AlarmaS1 0134                         _AlarmaS2 0130  
               ??_Lcd_Write_Char 0071                     _isspace$1069 0074                         _Lcd_Init 1093  
                       _Lcd_Port 1E9B                       vfpfcnvrt@c 00E4                       vfpfcnvrt@f 00DD  
       __end_of_Lcd_Write_String 1F28                 __size_of_Lcd_Cmd 0013                         _ValorADC 0144  
                     vfprintf@ap 0069                       vfprintf@fp 006C                _ADC_GetConversion 1EB1  
        ??_OSCILLATOR_Initialize 0070                      ??__Umul8_16 0072               ?_ADC_GetConversion 0070  
               __size_of___fladd 01E1                 __size_of___fldiv 017A                 __size_of___awdiv 0051  
               __size_of___flneg 0009                 __size_of___awmod 0045        __size_of_EnviarTexto_UART 0015  
               __size_of___flmul 0218                 __size_of___flsub 001D                 __size_of___fltol 0065  
                     ?_vfpfcnvrt 005F                      _informacion 0822               ___fpclassifyf@F463 0124  
            ??_ADC_GetConversion 0072                       sprintf@fmt 00E6                         ___xxtofl 1514  
              ??_Iniciar_Puertos 0070                 __size_of_isdigit 0017                 __size_of_isspace 001C  
                       __ptext10 1003                         __ptext11 171A                         __ptext20 1EDF  
                       __ptext12 1514                         __ptext21 1F9B                         __ptext13 0004  
                       __ptext30 1F5F                         __ptext22 124C                         __ptext14 103A  
                       __ptext31 09BE                         __ptext23 1EF6                         __ptext15 1066  
                       __ptext40 1F43                         __ptext32 1E3D                         __ptext24 1FDB  
                       __ptext16 0DB7                         __ptext41 1EC8                         __ptext33 0B9F  
                       __ptext25 1163                         __ptext17 11AF                         __ptext50 11FD  
                       __ptext42 1F28                         __ptext34 1F7C                         __ptext26 1002  
                       __ptext18 0195                         __ptext51 129B                         __ptext43 1F0E  
                       __ptext35 111B                         __ptext27 1648                         __ptext19 1FBA  
                       __ptext52 1419                         __ptext44 1010                         __ptext36 001B  
                       __ptext28 13A1                         __ptext53 1E66                         __ptext45 1494  
                       __ptext37 10D6                         __ptext29 133C                         __ptext54 1EB1  
                       __ptext46 1E73                         __ptext38 12EB                         __ptext47 1E9B  
                       __ptext39 15A9                         __ptext48 1E86                         __ptext49 1E25  
               __size_of_isupper 0017                 __size_of_sprintf 002C                 __size_of_tolower 0021  
                     strcpy@dest 0077                 __size_of_strncmp 004E                    __size_of_atoi 009F  
                  __size_of_main 00FD            EnviarTexto_UART@st_pt 0072        __end_of_ADC_GetConversion 1EC8  
     __size_of_ADC_SelectChannel 000D                         efgtoa@fp 00BC                         efgtoa@ne 00B6  
                       efgtoa@pp 00B2                         efgtoa@ou 00A0                         _vfprintf 1066  
                 __pstringtext10 1831                   __pstringtext11 1835                   __pstringtext12 1839  
                 __pstringtext13 183D                   __pstringtext14 1841                   __pstringtext15 1845  
                 __pstringtext16 0000                         isdigit@c 0070          __size_of_WDT_Initialize 0004  
             Lcd_Write_Char@temp 0072                        sprintf@ap 014B                  _EnviarDato_UART 1E25  
                       isspace@c 0070          ?_PIN_MANAGER_Initialize 0070                __CFG_CLKOUTEN$OFF 0000  
                      strcpy@src 0070                         isupper@c 0070                        strncmp@_l 0075  
                      strncmp@_r 0070                 ??_ADC_Initialize 0070                      efgtoa@nmode 00BF  
                    ??_vfpfcnvrt 0061                    _vfpfcnvrt$725 00D9                    _vfpfcnvrt$729 00DB  
             Lcd_Set_Cursor@temp 0079                    __pstringtext1 1800                    __pstringtext2 1808  
                  __pstringtext3 180E                    __pstringtext4 1814                    __pstringtext5 181A  
                  __pstringtext6 1820                    __pstringtext7 1825                    __pstringtext8 1829  
                  __pstringtext9 182D           __Umul8_16@multiplicand 0070                         sprintf@f 014C  
                       tolower@c 0076                         sprintf@s 014A           __size_of___fpclassifyf 0078  
                       strncmp@l 0078                         strncmp@n 0072                         strncmp@r 0076  
                     Lcd_float@s 0151                    ___fladd@signs 004A   __end_of_PIN_MANAGER_Initialize 0822  
                   ___fladd@aexp 004B                     ___fladd@bexp 004C             __Umul8_16@multiplier 0078  
     __size_of_ADC_GetConversion 0017                __Umul8_16@product 0074  
